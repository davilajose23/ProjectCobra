
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '51C379F5C22251F14AAF58A2A73A8A72'
    
_lr_action_items = {'RETURN':([4,5,6,11,16,21,22,23,24,25,26,27,29,31,33,38,40,41,42,43,47,49,51,52,54,56,57,58,60,61,62,63,64,65,66,67,69,70,71,76,80,82,83,85,88,91,94,100,102,104,107,108,110,112,116,117,124,126,127,128,129,130,131,132,133,134,135,136,142,144,149,153,155,166,169,],[-99,-99,-99,-99,-37,-90,-99,-34,-35,-32,-99,-33,-91,-36,-84,-86,-30,-28,-31,-29,-87,-89,-75,-70,-97,-73,-72,-99,-99,-98,-74,-99,-71,-99,-68,-99,-9,-11,-10,-38,-83,-95,-69,-61,-66,-57,-60,-48,-50,-44,-47,-80,-82,-92,-12,-14,-88,-63,-62,-64,-65,-67,-58,-59,-49,-45,-46,-81,-13,-85,162,-96,-93,-76,-94,]),'LESS':([11,26,47,49,51,52,54,56,57,58,60,61,62,63,64,66,83,85,88,91,94,116,117,124,126,127,128,129,130,131,132,142,],[-99,-99,-87,-89,-75,-70,-97,-73,-72,-99,-99,-98,-74,96,-71,-68,-69,-61,-66,-57,-60,-12,-14,-88,-63,-62,-64,-65,-67,-58,-59,-13,]),'READ':([3,4,5,6,11,16,21,22,23,24,25,26,27,29,31,33,38,40,41,42,43,47,49,51,52,54,56,57,58,60,61,62,63,64,65,66,67,76,80,81,82,83,85,88,91,94,100,102,104,107,108,110,112,116,117,118,122,124,126,127,128,129,130,131,132,133,134,135,136,142,144,145,153,155,166,167,169,],[17,-99,-99,-99,-99,-37,-90,17,-34,-35,-32,-99,-33,-91,-36,-84,-86,-30,-28,-31,-29,-87,-89,-75,-70,-97,-73,-72,-99,-99,-98,-74,-99,-71,-99,-68,-99,-38,-83,17,-95,-69,-61,-66,-57,-60,-48,-50,-44,-47,-80,-82,-92,-12,-14,17,17,-88,-63,-62,-64,-65,-67,-58,-59,-49,-45,-46,-81,-13,-85,17,-96,-93,-76,17,-94,]),'RIGHT_BRACKET':([11,26,47,49,51,52,54,56,57,58,60,61,62,64,66,79,83,85,88,91,94,116,117,119,124,126,127,128,129,130,131,132,142,],[-99,-99,-87,-89,-75,-70,-97,-73,-72,-99,-99,-98,-74,-71,-68,124,-69,-61,-66,-57,-60,-12,-14,144,-88,-63,-62,-64,-65,-67,-58,-59,-13,]),'EQUALS_EQUALS':([11,26,47,49,51,52,54,56,57,58,60,61,62,63,64,66,83,85,88,91,94,116,117,124,126,127,128,129,130,131,132,142,],[-99,-99,-87,-89,-75,-70,-97,-73,-72,-99,-99,-98,-74,99,-71,-68,-69,-61,-66,-57,-60,-12,-14,-88,-63,-62,-64,-65,-67,-58,-59,-13,]),'WHILE':([3,4,5,6,11,16,21,22,23,24,25,26,27,29,31,33,38,40,41,42,43,47,49,51,52,54,56,57,58,60,61,62,63,64,65,66,67,76,80,81,82,83,85,88,91,94,100,102,104,107,108,110,112,116,117,118,122,124,126,127,128,129,130,131,132,133,134,135,136,142,144,145,153,155,166,167,169,],[18,-99,-99,-99,-99,-37,-90,18,-34,-35,-32,-99,-33,-91,-36,-84,-86,-30,-28,-31,-29,-87,-89,-75,-70,-97,-73,-72,-99,-99,-98,-74,-99,-71,-99,-68,-99,-38,-83,18,-95,-69,-61,-66,-57,-60,-48,-50,-44,-47,-80,-82,-92,-12,-14,18,18,-88,-63,-62,-64,-65,-67,-58,-59,-49,-45,-46,-81,-13,-85,18,-96,-93,-76,18,-94,]),'COLON':([11,26,47,49,51,52,53,54,56,57,58,60,61,62,63,64,65,66,73,83,85,88,91,94,100,102,104,107,116,117,124,126,127,128,129,130,131,132,133,134,135,138,142,160,165,],[-99,-99,-87,-89,-75,-70,81,-97,-73,-72,-99,-99,-98,-74,-99,-71,-99,-68,118,-69,-61,-66,-57,-60,-48,-50,-44,-47,-12,-14,-88,-63,-62,-64,-65,-67,-58,-59,-49,-45,-46,81,-13,167,81,]),'PRINT':([3,4,5,6,11,16,21,22,23,24,25,26,27,29,31,33,38,40,41,42,43,47,49,51,52,54,56,57,58,60,61,62,63,64,65,66,67,76,80,81,82,83,85,88,91,94,100,102,104,107,108,110,112,116,117,118,122,124,126,127,128,129,130,131,132,133,134,135,136,142,144,145,153,155,166,167,169,],[19,-99,-99,-99,-99,-37,-90,19,-34,-35,-32,-99,-33,-91,-36,-84,-86,-30,-28,-31,-29,-87,-89,-75,-70,-97,-73,-72,-99,-99,-98,-74,-99,-71,-99,-68,-99,-38,-83,19,-95,-69,-61,-66,-57,-60,-48,-50,-44,-47,-80,-82,-92,-12,-14,19,19,-88,-63,-62,-64,-65,-67,-58,-59,-49,-45,-46,-81,-13,-85,19,-96,-93,-76,19,-94,]),'GREATER_EQUALS':([11,26,47,49,51,52,54,56,57,58,60,61,62,63,64,66,83,85,88,91,94,116,117,124,126,127,128,129,130,131,132,142,],[-99,-99,-87,-89,-75,-70,-97,-73,-72,-99,-99,-98,-74,101,-71,-68,-69,-61,-66,-57,-60,-12,-14,-88,-63,-62,-64,-65,-67,-58,-59,-13,]),'MINUS':([11,18,19,26,28,32,34,35,36,37,39,47,48,49,51,52,54,56,57,58,59,60,61,62,64,66,72,75,83,84,85,86,87,88,89,92,93,95,96,97,98,99,101,103,105,106,111,116,117,124,126,127,128,129,130,140,142,154,162,],[-99,55,55,-99,55,-43,-40,-41,-39,55,-42,-87,55,-89,-75,-70,-97,-73,-72,-99,55,93,-98,-74,-71,-68,55,55,-69,55,-61,55,55,-66,55,55,55,-52,-51,-56,-54,-55,-53,55,55,55,55,-12,-14,-88,-63,-62,-64,-65,-67,55,-13,55,55,]),'MINUS_EQUALS':([4,11,26,47,49,124,],[32,-99,-99,-87,-89,-88,]),'FOR':([3,4,5,6,11,16,21,22,23,24,25,26,27,29,31,33,38,40,41,42,43,47,49,51,52,54,56,57,58,60,61,62,63,64,65,66,67,76,80,81,82,83,85,88,91,94,100,102,104,107,108,110,112,116,117,118,122,124,126,127,128,129,130,131,132,133,134,135,136,142,144,145,153,155,166,167,169,],[20,-99,-99,-99,-99,-37,-90,20,-34,-35,-32,-99,-33,-91,-36,-84,-86,-30,-28,-31,-29,-87,-89,-75,-70,-97,-73,-72,-99,-99,-98,-74,-99,-71,-99,-68,-99,-38,-83,20,-95,-69,-61,-66,-57,-60,-48,-50,-44,-47,-80,-82,-92,-12,-14,20,20,-88,-63,-62,-64,-65,-67,-58,-59,-49,-45,-46,-81,-13,-85,20,-96,-93,-76,20,-94,]),'NOT_EQUALS':([11,26,47,49,51,52,54,56,57,58,60,61,62,63,64,66,83,85,88,91,94,116,117,124,126,127,128,129,130,131,132,142,],[-99,-99,-87,-89,-75,-70,-97,-73,-72,-99,-99,-98,-74,97,-71,-68,-69,-61,-66,-57,-60,-12,-14,-88,-63,-62,-64,-65,-67,-58,-59,-13,]),'DOUBLE_CONSTANT':([18,19,28,32,34,35,36,37,39,48,55,59,72,75,84,86,87,89,92,93,95,96,97,98,99,101,103,105,106,111,140,154,162,],[56,56,56,-43,-40,-41,-39,56,-42,56,56,56,56,56,56,56,56,56,56,56,-52,-51,-56,-54,-55,-53,56,56,56,56,56,56,56,]),'LESS_EQUALS':([11,26,47,49,51,52,54,56,57,58,60,61,62,63,64,66,83,85,88,91,94,116,117,124,126,127,128,129,130,131,132,142,],[-99,-99,-87,-89,-75,-70,-97,-73,-72,-99,-99,-98,-74,98,-71,-68,-69,-61,-66,-57,-60,-12,-14,-88,-63,-62,-64,-65,-67,-58,-59,-13,]),'TO':([11,26,47,49,51,52,54,56,57,58,60,61,62,64,66,83,85,88,91,94,116,117,124,126,127,128,129,130,131,132,137,142,],[-99,-99,-87,-89,-75,-70,-97,-73,-72,-99,-99,-98,-74,-71,-68,-69,-61,-66,-57,-60,-12,-14,-88,-63,-62,-64,-65,-67,-58,-59,154,-13,]),'INT_CONSTANT':([18,19,28,32,34,35,36,37,39,48,55,59,72,75,84,86,87,89,92,93,95,96,97,98,99,101,103,105,106,111,140,154,162,],[57,57,57,-43,-40,-41,-39,57,-42,57,57,57,57,57,57,57,57,57,57,57,-52,-51,-56,-54,-55,-53,57,57,57,57,57,57,57,]),'COMMA':([11,26,47,49,51,52,54,56,57,58,60,61,62,63,64,65,66,67,83,85,88,91,94,100,102,104,107,114,116,117,123,124,126,127,128,129,130,131,132,133,134,135,142,],[-99,-99,-87,-89,-75,-70,-97,-73,-72,-99,-99,-98,-74,-99,-71,-99,-68,109,-69,-61,-66,-57,-60,-48,-50,-44,-47,140,-12,-14,151,-88,-63,-62,-64,-65,-67,-58,-59,-49,-45,-46,-13,]),'PLUS':([11,26,47,49,51,52,54,56,57,58,60,61,62,64,66,83,85,88,116,117,124,126,127,128,129,130,142,],[-99,-99,-87,-89,-75,-70,-97,-73,-72,-99,92,-98,-74,-71,-68,-69,-61,-66,-12,-14,-88,-63,-62,-64,-65,-67,-13,]),'PERCENTAGE':([11,26,47,49,51,52,54,56,57,58,61,62,64,66,83,116,117,124,130,142,],[-99,-99,-87,-89,-75,-70,-97,-73,-72,87,-98,-74,-71,-68,-69,-12,-14,-88,-67,-13,]),'IF':([3,4,5,6,11,16,21,22,23,24,25,26,27,29,31,33,38,40,41,42,43,47,49,51,52,54,56,57,58,60,61,62,63,64,65,66,67,76,80,81,82,83,85,88,91,94,100,102,104,107,108,110,112,116,117,118,122,124,126,127,128,129,130,131,132,133,134,135,136,142,144,145,153,155,166,167,169,],[28,-99,-99,-99,-99,-37,-90,28,-34,-35,-32,-99,-33,-91,-36,-84,-86,-30,-28,-31,-29,-87,-89,-75,-70,-97,-73,-72,-99,-99,-98,-74,-99,-71,-99,-68,-99,-38,-83,28,-95,-69,-61,-66,-57,-60,-48,-50,-44,-47,-80,-82,-92,-12,-14,28,28,-88,-63,-62,-64,-65,-67,-58,-59,-49,-45,-46,-81,-13,-85,28,-96,-93,-76,28,-94,]),'LEFT_PARENTHESIS':([17,18,19,26,28,32,34,35,36,37,39,44,48,59,72,75,84,86,87,89,92,93,95,96,97,98,99,101,103,105,106,111,140,154,162,],[50,59,59,72,59,-43,-40,-41,-39,59,-42,77,59,59,59,59,59,59,59,59,59,59,-52,-51,-56,-54,-55,-53,59,59,59,59,59,59,59,]),'$end':([7,10,15,46,74,78,],[0,-4,-2,-3,-8,-1,]),'END':([4,5,6,11,16,21,22,23,24,25,26,27,29,31,33,38,40,41,42,43,47,49,51,52,54,56,57,58,60,61,62,63,64,65,66,67,69,70,71,76,80,82,83,85,88,91,94,100,102,104,107,108,110,112,116,117,124,125,126,127,128,129,130,131,132,133,134,135,136,142,143,144,149,153,155,157,158,159,166,168,169,170,],[-99,-99,-99,-99,-37,-90,-99,-34,-35,-32,-99,-33,-91,-36,-84,-86,-30,-28,-31,-29,-87,-89,-75,-70,-97,-73,-72,-99,-99,-98,-74,-99,-71,-99,-68,-99,-9,-11,-10,-38,-83,-95,-69,-61,-66,-57,-60,-48,-50,-44,-47,-80,-82,-92,-12,-14,-88,153,-63,-62,-64,-65,-67,-58,-59,-49,-45,-46,-81,-13,-99,-85,163,-96,-93,166,-77,-78,-76,171,-94,-79,]),'DIVIDE':([11,26,47,49,51,52,54,56,57,58,61,62,64,66,83,116,117,124,130,142,],[-99,-99,-87,-89,-75,-70,-97,-73,-72,84,-98,-74,-71,-68,-69,-12,-14,-88,-67,-13,]),'TIMES_EQUALS':([4,11,26,47,49,124,],[34,-99,-99,-87,-89,-88,]),'EQUALS':([4,11,26,47,49,124,],[36,-99,-99,-87,-89,-88,]),'ELSE':([4,5,6,11,16,21,22,23,24,25,26,27,29,31,33,38,40,41,42,43,47,49,51,52,54,56,57,58,60,61,62,63,64,65,66,67,69,70,71,76,80,82,83,85,88,91,94,100,102,104,107,108,110,112,116,117,124,126,127,128,129,130,131,132,133,134,135,136,142,143,144,153,155,166,169,],[-99,-99,-99,-99,-37,-90,-99,-34,-35,-32,-99,-33,-91,-36,-84,-86,-30,-28,-31,-29,-87,-89,-75,-70,-97,-73,-72,-99,-99,-98,-74,-99,-71,-99,-68,-99,-9,-11,-10,-38,-83,-95,-69,-61,-66,-57,-60,-48,-50,-44,-47,-80,-82,-92,-12,-14,-88,-63,-62,-64,-65,-67,-58,-59,-49,-45,-46,-81,-13,160,-85,-96,-93,-76,-94,]),'FUNC':([0,1,4,5,6,9,11,26,33,38,40,41,42,43,47,49,51,52,54,56,57,58,60,61,62,63,64,65,66,76,83,85,88,91,94,100,102,104,107,116,117,121,124,126,127,128,129,130,131,132,133,134,135,142,144,146,147,148,161,163,171,],[8,8,-99,-99,-99,8,-99,-99,-84,-86,-30,-28,-31,-29,-87,-89,-75,-70,-97,-73,-72,-99,-99,-98,-74,-99,-71,-99,-68,-38,-69,-61,-66,-57,-60,-48,-50,-44,-47,-12,-14,-18,-88,-63,-62,-64,-65,-67,-58,-59,-49,-45,-46,-13,-85,-20,-22,-21,-19,-23,-24,]),'IN':([11,47,49,68,124,],[-99,-87,-89,113,-88,]),'FALSE':([18,19,28,32,34,35,36,37,39,48,55,59,72,75,84,86,87,89,92,93,95,96,97,98,99,101,103,105,106,111,140,154,162,],[61,61,61,-43,-40,-41,-39,61,-42,61,61,61,61,61,61,61,61,61,61,61,-52,-51,-56,-54,-55,-53,61,61,61,61,61,61,61,]),'RIGHT_PARENTHESIS':([11,26,47,49,50,51,52,54,56,57,58,60,61,62,63,64,65,66,72,77,83,85,88,90,91,94,100,102,104,107,114,115,116,117,120,123,124,126,127,128,129,130,131,132,133,134,135,139,141,142,150,152,156,164,],[-99,-99,-87,-89,80,-75,-70,-97,-73,-72,-99,-99,-98,-74,-99,-71,-99,-68,117,122,-69,-61,-66,130,-57,-60,-48,-50,-44,-47,-99,142,-12,-14,145,-99,-88,-63,-62,-64,-65,-67,-58,-59,-49,-45,-46,-15,-17,-13,-25,-27,-16,-26,]),'TIMES':([11,26,47,49,51,52,54,56,57,58,61,62,64,66,83,116,117,124,130,142,],[-99,-99,-87,-89,-75,-70,-97,-73,-72,86,-98,-74,-71,-68,-69,-12,-14,-88,-67,-13,]),'ID':([0,3,4,5,6,8,11,16,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,47,48,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,72,75,76,77,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,116,117,118,122,124,126,127,128,129,130,131,132,133,134,135,136,140,142,144,145,151,153,154,155,162,166,167,169,],[11,26,-99,11,11,44,-99,-37,26,26,11,-90,26,-34,-35,-32,-99,-33,26,-91,-36,-43,-84,-40,-41,-39,26,-86,-42,-30,-28,-31,-29,-87,26,-89,-75,-70,-97,11,-73,-72,-99,26,-99,-98,-74,-99,-71,-99,-68,-99,26,26,-38,11,-83,26,-95,-69,26,-61,26,26,-66,26,-57,26,26,-60,-52,-51,-56,-54,-55,-48,-53,-50,26,-44,26,26,-47,-80,-82,26,-92,11,-12,-14,26,26,-88,-63,-62,-64,-65,-67,-58,-59,-49,-45,-46,-81,26,-13,-85,26,11,-96,26,-93,26,-76,26,-94,]),'TRUE':([18,19,28,32,34,35,36,37,39,48,55,59,72,75,84,86,87,89,92,93,95,96,97,98,99,101,103,105,106,111,140,154,162,],[54,54,54,-43,-40,-41,-39,54,-42,54,54,54,54,54,54,54,54,54,54,54,-52,-51,-56,-54,-55,-53,54,54,54,54,54,54,54,]),'PLUS_EQUALS':([4,11,26,47,49,124,],[39,-99,-99,-87,-89,-88,]),'AND':([11,26,47,49,51,52,54,56,57,58,60,61,62,63,64,65,66,83,85,88,91,94,100,102,116,117,124,126,127,128,129,130,131,132,133,142,],[-99,-99,-87,-89,-75,-70,-97,-73,-72,-99,-99,-98,-74,-99,-71,105,-68,-69,-61,-66,-57,-60,-48,-50,-12,-14,-88,-63,-62,-64,-65,-67,-58,-59,-49,-13,]),'FROM':([11,47,49,68,124,],[-99,-87,-89,111,-88,]),'GREATER':([11,26,47,49,51,52,54,56,57,58,60,61,62,63,64,66,83,85,88,91,94,116,117,124,126,127,128,129,130,131,132,142,],[-99,-99,-87,-89,-75,-70,-97,-73,-72,-99,-99,-98,-74,95,-71,-68,-69,-61,-66,-57,-60,-12,-14,-88,-63,-62,-64,-65,-67,-58,-59,-13,]),'DIVIDE_EQUALS':([4,11,26,47,49,124,],[35,-99,-99,-87,-89,-88,]),'STRING_CONSTANT':([18,19,28,32,34,35,36,37,39,48,55,59,72,75,84,86,87,89,92,93,95,96,97,98,99,101,103,105,106,109,111,140,154,162,],[62,62,62,-43,-40,-41,-39,62,-42,62,62,62,62,62,62,62,62,62,62,62,-52,-51,-56,-54,-55,-53,62,62,62,136,62,62,62,62,]),'END_MAIN':([4,5,6,11,16,21,22,23,24,25,26,27,29,30,31,33,38,40,41,42,43,47,49,51,52,54,56,57,58,60,61,62,63,64,65,66,67,69,70,71,76,80,82,83,85,88,91,94,100,102,104,107,108,110,112,116,117,124,126,127,128,129,130,131,132,133,134,135,136,142,144,153,155,166,169,],[-99,-99,-99,-99,-37,-90,-99,-34,-35,-32,-99,-33,-91,74,-36,-84,-86,-30,-28,-31,-29,-87,-89,-75,-70,-97,-73,-72,-99,-99,-98,-74,-99,-71,-99,-68,-99,-9,-11,-10,-38,-83,-95,-69,-61,-66,-57,-60,-48,-50,-44,-47,-80,-82,-92,-12,-14,-88,-63,-62,-64,-65,-67,-58,-59,-49,-45,-46,-81,-13,-85,-96,-93,-76,-94,]),'LEFT_BRACKET':([11,26,36,],[48,48,75,]),'MAIN':([0,1,2,4,5,6,9,11,12,13,14,26,33,38,40,41,42,43,45,47,49,51,52,54,56,57,58,60,61,62,63,64,65,66,76,83,85,88,91,94,100,102,104,107,116,117,121,124,126,127,128,129,130,131,132,133,134,135,142,144,146,147,148,161,163,171,],[3,-99,3,-99,-99,-99,3,-99,-5,-6,-7,-99,-84,-86,-30,-28,-31,-29,3,-87,-89,-75,-70,-97,-73,-72,-99,-99,-98,-74,-99,-71,-99,-68,-38,-69,-61,-66,-57,-60,-48,-50,-44,-47,-12,-14,-18,-88,-63,-62,-64,-65,-67,-58,-59,-49,-45,-46,-13,-85,-20,-22,-21,-19,-23,-24,]),'OR':([11,26,47,49,51,52,54,56,57,58,60,61,62,63,64,65,66,83,85,88,91,94,100,102,116,117,124,126,127,128,129,130,131,132,133,142,],[-99,-99,-87,-89,-75,-70,-97,-73,-72,-99,-99,-98,-74,-99,-71,106,-68,-69,-61,-66,-57,-60,-48,-50,-12,-14,-88,-63,-62,-64,-65,-67,-58,-59,-49,-13,]),'MOD':([11,26,47,49,51,52,54,56,57,58,61,62,64,66,83,116,117,124,130,142,],[-99,-99,-87,-89,-75,-70,-97,-73,-72,89,-98,-74,-71,-68,-69,-12,-14,-88,-67,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'post_functions':([1,],[12,]),'relational_operator':([63,],[103,]),'call_function':([3,18,19,22,28,37,48,59,72,75,81,84,86,87,89,92,93,103,105,106,111,118,122,140,145,154,162,167,],[16,52,52,16,52,52,52,52,52,52,16,52,52,52,52,52,52,52,52,52,52,16,16,52,16,52,52,16,]),'BOOL_CONSTANT':([18,19,28,37,48,55,59,72,75,84,86,87,89,92,93,103,105,106,111,140,154,162,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'post_function':([77,],[121,]),'post_parameters':([123,],[150,]),'cond':([18,19,28,37,59,72,105,106,140,162,],[53,67,73,76,90,114,134,135,114,168,]),'post_print':([67,],[108,]),'post_cycle':([53,138,165,],[82,155,169,]),'post_cond':([65,],[104,]),'functions':([0,1,9,],[2,13,45,]),'call_parameters':([72,140,],[115,156,]),'post_condition':([143,],[157,]),'for':([3,22,81,118,122,145,167,],[21,21,21,21,21,21,21,]),'post_call_parameters':([114,],[139,]),'post_exp':([60,],[91,]),'program':([0,],[7,]),'statement':([3,22,81,118,122,145,167,],[22,22,22,22,22,22,22,]),'factor':([18,19,28,37,48,59,72,75,84,86,87,89,92,93,103,105,106,111,140,154,162,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'print':([3,22,81,118,122,145,167,],[23,23,23,23,23,23,23,]),'main':([0,2,9,45,],[10,15,46,78,]),'post_variable':([5,6,],[41,43,]),'empty':([1,4,5,6,11,22,26,58,60,63,65,67,114,123,143,],[14,38,42,42,49,70,49,88,94,102,107,110,141,152,159,]),'assignment_operator':([4,],[37,]),'function':([0,1,9,],[1,1,1,]),'post_for':([68,],[112,]),'read':([3,22,81,118,122,145,167,],[24,24,24,24,24,24,24,]),'assignment':([0,3,5,6,22,81,118,122,145,167,],[5,5,5,5,5,5,5,5,5,5,]),'post_term':([58,],[85,]),'else':([143,],[158,]),'value_return':([122,145,],[147,147,]),'post_identifier':([11,26,],[47,47,]),'void_return':([122,145,],[148,148,]),'variable':([0,3,5,6,22,81,118,122,145,167,],[9,25,40,40,25,25,25,25,25,25,]),'variable_constant':([18,19,28,37,48,55,59,72,75,84,86,87,89,92,93,103,105,106,111,140,154,162,],[66,66,66,66,66,83,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'post_block':([22,],[69,]),'condition':([3,22,81,118,122,145,167,],[27,27,27,27,27,27,27,]),'term':([18,19,28,37,48,59,72,75,84,86,87,89,92,93,103,105,106,111,140,154,162,],[60,60,60,60,60,60,60,60,126,127,128,129,60,60,60,60,60,60,60,60,60,]),'post_list':([4,],[33,]),'parameters':([77,151,],[120,164,]),'list':([0,3,5,6,22,81,118,122,145,167,],[6,6,6,6,6,6,6,6,6,6,]),'func_return':([122,145,],[146,161,]),'while':([3,22,81,118,122,145,167,],[29,29,29,29,29,29,29,]),'post_expression':([63,],[100,]),'loop':([3,22,81,118,122,145,167,],[31,31,31,31,31,31,31,]),'exp':([18,19,28,37,48,59,72,75,92,93,103,105,106,111,140,154,162,],[63,63,63,63,79,63,63,119,131,132,133,63,63,137,63,165,63,]),'identifier':([0,3,5,6,18,19,20,22,28,37,48,55,59,72,75,77,81,84,86,87,89,92,93,103,105,106,111,113,118,122,140,145,151,154,162,167,],[4,4,4,4,64,64,68,4,64,64,64,64,64,64,64,123,4,64,64,64,64,64,64,64,64,64,64,138,4,4,64,4,123,64,64,4,]),'expression':([18,19,28,37,59,72,105,106,140,162,],[65,65,65,65,65,65,65,65,65,65,]),'post_call_function':([72,],[116,]),'block':([3,22,81,118,122,145,167,],[30,71,125,143,149,149,170,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> variable functions main','program',3,'p_program','parser.py',19),
  ('program -> functions main','program',2,'p_program','parser.py',20),
  ('program -> variable main','program',2,'p_program','parser.py',21),
  ('program -> main','program',1,'p_program','parser.py',22),
  ('functions -> function post_functions','functions',2,'p_functions','parser.py',25),
  ('post_functions -> functions','post_functions',1,'p_post_functions','parser.py',29),
  ('post_functions -> empty','post_functions',1,'p_post_functions','parser.py',30),
  ('main -> MAIN block END_MAIN','main',3,'p_main','parser.py',34),
  ('block -> statement post_block','block',2,'p_block','parser.py',38),
  ('post_block -> block','post_block',1,'p_post_block','parser.py',41),
  ('post_block -> empty','post_block',1,'p_post_block','parser.py',42),
  ('call_function -> ID LEFT_PARENTHESIS post_call_function','call_function',3,'p_call_function','parser.py',46),
  ('post_call_function -> call_parameters RIGHT_PARENTHESIS','post_call_function',2,'p_post_call_function','parser.py',49),
  ('post_call_function -> RIGHT_PARENTHESIS','post_call_function',1,'p_post_call_function','parser.py',50),
  ('call_parameters -> cond post_call_parameters','call_parameters',2,'p_call_parameters','parser.py',54),
  ('post_call_parameters -> COMMA call_parameters','post_call_parameters',2,'p_post_call_parameters','parser.py',57),
  ('post_call_parameters -> empty','post_call_parameters',1,'p_post_call_parameters','parser.py',58),
  ('function -> FUNC ID LEFT_PARENTHESIS post_function','function',4,'p_function','parser.py',62),
  ('post_function -> parameters RIGHT_PARENTHESIS func_return','post_function',3,'p_post_function','parser.py',65),
  ('post_function -> RIGHT_PARENTHESIS func_return','post_function',2,'p_post_function','parser.py',66),
  ('func_return -> void_return','func_return',1,'p_func_return','parser.py',69),
  ('func_return -> value_return','func_return',1,'p_func_return','parser.py',70),
  ('void_return -> block END','void_return',2,'p_void_return','parser.py',73),
  ('value_return -> block RETURN cond END','value_return',4,'p_value_return','parser.py',76),
  ('parameters -> identifier post_parameters','parameters',2,'p_parameters','parser.py',80),
  ('post_parameters -> COMMA parameters','post_parameters',2,'p_post_parameters','parser.py',83),
  ('post_parameters -> empty','post_parameters',1,'p_post_parameters','parser.py',84),
  ('variable -> assignment post_variable','variable',2,'p_variable','parser.py',88),
  ('variable -> list post_variable','variable',2,'p_variable','parser.py',89),
  ('post_variable -> variable','post_variable',1,'p_post_variable','parser.py',92),
  ('post_variable -> empty','post_variable',1,'p_post_variable','parser.py',93),
  ('statement -> variable','statement',1,'p_statement','parser.py',97),
  ('statement -> condition','statement',1,'p_statement','parser.py',98),
  ('statement -> print','statement',1,'p_statement','parser.py',99),
  ('statement -> read','statement',1,'p_statement','parser.py',100),
  ('statement -> loop','statement',1,'p_statement','parser.py',101),
  ('statement -> call_function','statement',1,'p_statement','parser.py',102),
  ('assignment -> identifier assignment_operator cond','assignment',3,'p_assignment','parser.py',108),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',112),
  ('assignment_operator -> TIMES_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',113),
  ('assignment_operator -> DIVIDE_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',114),
  ('assignment_operator -> PLUS_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',115),
  ('assignment_operator -> MINUS_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',116),
  ('cond -> expression post_cond','cond',2,'p_cond','parser.py',120),
  ('post_cond -> AND cond','post_cond',2,'p_post_cond','parser.py',123),
  ('post_cond -> OR cond','post_cond',2,'p_post_cond','parser.py',124),
  ('post_cond -> empty','post_cond',1,'p_post_cond','parser.py',125),
  ('expression -> exp post_expression','expression',2,'p_expression','parser.py',129),
  ('post_expression -> relational_operator exp','post_expression',2,'p_post_expression','parser.py',132),
  ('post_expression -> empty','post_expression',1,'p_post_expression','parser.py',133),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',137),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',138),
  ('relational_operator -> GREATER_EQUALS','relational_operator',1,'p_relational_operator','parser.py',139),
  ('relational_operator -> LESS_EQUALS','relational_operator',1,'p_relational_operator','parser.py',140),
  ('relational_operator -> EQUALS_EQUALS','relational_operator',1,'p_relational_operator','parser.py',141),
  ('relational_operator -> NOT_EQUALS','relational_operator',1,'p_relational_operator','parser.py',142),
  ('exp -> term post_exp','exp',2,'p_exp','parser.py',146),
  ('post_exp -> PLUS exp','post_exp',2,'p_post_exp','parser.py',149),
  ('post_exp -> MINUS exp','post_exp',2,'p_post_exp','parser.py',150),
  ('post_exp -> empty','post_exp',1,'p_post_exp','parser.py',151),
  ('term -> factor post_term','term',2,'p_term','parser.py',155),
  ('post_term -> TIMES term','post_term',2,'p_post_term','parser.py',158),
  ('post_term -> DIVIDE term','post_term',2,'p_post_term','parser.py',159),
  ('post_term -> PERCENTAGE term','post_term',2,'p_post_term','parser.py',160),
  ('post_term -> MOD term','post_term',2,'p_post_term','parser.py',161),
  ('post_term -> empty','post_term',1,'p_post_term','parser.py',162),
  ('factor -> LEFT_PARENTHESIS cond RIGHT_PARENTHESIS','factor',3,'p_factor','parser.py',166),
  ('factor -> variable_constant','factor',1,'p_factor','parser.py',167),
  ('factor -> MINUS variable_constant','factor',2,'p_factor','parser.py',168),
  ('factor -> call_function','factor',1,'p_factor','parser.py',169),
  ('variable_constant -> identifier','variable_constant',1,'p_variable_constant','parser.py',173),
  ('variable_constant -> INT_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',174),
  ('variable_constant -> DOUBLE_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',175),
  ('variable_constant -> STRING_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',176),
  ('variable_constant -> BOOL_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',177),
  ('condition -> IF cond COLON block post_condition END','condition',6,'p_condition','parser.py',181),
  ('post_condition -> else','post_condition',1,'p_post_condition','parser.py',185),
  ('post_condition -> empty','post_condition',1,'p_post_condition','parser.py',186),
  ('else -> ELSE COLON block','else',3,'p_else','parser.py',190),
  ('print -> PRINT cond post_print','print',3,'p_print','parser.py',194),
  ('post_print -> COMMA STRING_CONSTANT','post_print',2,'p_post_print','parser.py',197),
  ('post_print -> empty','post_print',1,'p_post_print','parser.py',198),
  ('read -> READ LEFT_PARENTHESIS RIGHT_PARENTHESIS','read',3,'p_read','parser.py',202),
  ('list -> identifier post_list','list',2,'p_list','parser.py',206),
  ('post_list -> EQUALS LEFT_BRACKET exp RIGHT_BRACKET','post_list',4,'p_post_list','parser.py',209),
  ('post_list -> empty','post_list',1,'p_post_list','parser.py',210),
  ('identifier -> ID post_identifier','identifier',2,'p_identifier','parser.py',214),
  ('post_identifier -> LEFT_BRACKET exp RIGHT_BRACKET','post_identifier',3,'p_post_identifier','parser.py',217),
  ('post_identifier -> empty','post_identifier',1,'p_post_identifier','parser.py',218),
  ('loop -> for','loop',1,'p_loop','parser.py',222),
  ('loop -> while','loop',1,'p_loop','parser.py',223),
  ('for -> FOR identifier post_for','for',3,'p_for','parser.py',227),
  ('post_for -> IN identifier post_cycle','post_for',3,'p_post_for','parser.py',230),
  ('post_for -> FROM exp TO exp post_cycle','post_for',5,'p_post_for','parser.py',231),
  ('while -> WHILE cond post_cycle','while',3,'p_while','parser.py',235),
  ('post_cycle -> COLON block END','post_cycle',3,'p_post_cycle','parser.py',239),
  ('BOOL_CONSTANT -> TRUE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',242),
  ('BOOL_CONSTANT -> FALSE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',243),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',246),
]
