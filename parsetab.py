
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '4B06BDF5C9E67DB8DAE3FC426EC698B4'
    
_lr_action_items = {'RETURN':([6,9,10,11,23,25,27,32,34,39,40,41,42,43,44,45,47,49,52,53,54,56,57,58,60,61,62,64,65,67,68,69,72,74,75,76,82,84,86,89,92,95,96,104,106,108,111,112,114,115,117,119,122,123,125,130,134,135,136,137,138,139,140,144,145,146,147,149,152,160,162,170,173,],[-32,-101,-101,-33,-89,-91,-86,-88,-39,-92,-101,-36,-37,-34,-101,-35,-93,-38,-77,-72,-99,-75,-74,-101,-101,-100,-76,-73,-70,-40,-101,-101,-101,-12,-14,-13,126,-71,-63,-68,-59,-62,-90,-50,-52,-46,-49,-85,-97,-82,-84,-94,-15,-17,126,156,-65,-64,-66,-67,-69,-60,-61,-87,-51,-47,-48,-83,-16,-98,-95,-78,-96,]),'LESS':([9,23,25,44,52,53,54,56,57,58,60,61,62,64,65,68,84,86,89,92,95,96,122,123,134,135,136,137,138,139,140,152,],[-101,-89,-91,-101,-77,-72,-99,-75,-74,-101,-101,-100,-76,-73,-70,100,-71,-63,-68,-59,-62,-90,-15,-17,-65,-64,-66,-67,-69,-60,-61,-16,]),'READ':([6,9,10,11,12,23,25,27,32,34,39,40,41,42,43,44,45,47,49,52,53,54,56,57,58,60,61,62,64,65,67,68,69,72,82,84,86,89,92,95,96,104,106,108,111,112,113,114,115,117,119,122,123,124,125,134,135,136,137,138,139,140,144,145,146,147,149,152,160,162,170,171,173,],[-32,-101,-101,-33,35,-89,-91,-86,-88,-39,-92,35,-36,-37,-34,-101,-35,-93,-38,-77,-72,-99,-75,-74,-101,-101,-100,-76,-73,-70,-40,-101,-101,-101,35,-71,-63,-68,-59,-62,-90,-50,-52,-46,-49,-85,35,-97,-82,-84,-94,-15,-17,35,35,-65,-64,-66,-67,-69,-60,-61,-87,-51,-47,-48,-83,-16,-98,-95,-78,35,-96,]),'RIGHT_BRACKET':([9,23,25,44,52,53,54,56,57,58,60,61,62,63,64,65,68,69,84,86,89,92,95,96,97,98,104,106,108,111,122,123,134,135,136,137,138,139,140,141,143,145,146,147,152,159,],[-101,-89,-91,-101,-77,-72,-99,-75,-74,-101,-101,-100,-76,96,-73,-70,-101,-101,-71,-63,-68,-59,-62,-90,-101,144,-50,-52,-46,-49,-15,-17,-65,-64,-66,-67,-69,-60,-61,-18,-20,-51,-47,-48,-16,-19,]),'EQUALS_EQUALS':([9,23,25,44,52,53,54,56,57,58,60,61,62,64,65,68,84,86,89,92,95,96,122,123,134,135,136,137,138,139,140,152,],[-101,-89,-91,-101,-77,-72,-99,-75,-74,-101,-101,-100,-76,-73,-70,103,-71,-63,-68,-59,-62,-90,-15,-17,-65,-64,-66,-67,-69,-60,-61,-16,]),'WHILE':([6,9,10,11,12,23,25,27,32,34,39,40,41,42,43,44,45,47,49,52,53,54,56,57,58,60,61,62,64,65,67,68,69,72,82,84,86,89,92,95,96,104,106,108,111,112,113,114,115,117,119,122,123,124,125,134,135,136,137,138,139,140,144,145,146,147,149,152,160,162,170,171,173,],[-32,-101,-101,-33,36,-89,-91,-86,-88,-39,-92,36,-36,-37,-34,-101,-35,-93,-38,-77,-72,-99,-75,-74,-101,-101,-100,-76,-73,-70,-40,-101,-101,-101,36,-71,-63,-68,-59,-62,-90,-50,-52,-46,-49,-85,36,-97,-82,-84,-94,-15,-17,36,36,-65,-64,-66,-67,-69,-60,-61,-87,-51,-47,-48,-83,-16,-98,-95,-78,36,-96,]),'PRINT':([6,9,10,11,12,23,25,27,32,34,39,40,41,42,43,44,45,47,49,52,53,54,56,57,58,60,61,62,64,65,67,68,69,72,82,84,86,89,92,95,96,104,106,108,111,112,113,114,115,117,119,122,123,124,125,134,135,136,137,138,139,140,144,145,146,147,149,152,160,162,170,171,173,],[-32,-101,-101,-33,37,-89,-91,-86,-88,-39,-92,37,-36,-37,-34,-101,-35,-93,-38,-77,-72,-99,-75,-74,-101,-101,-100,-76,-73,-70,-40,-101,-101,-101,37,-71,-63,-68,-59,-62,-90,-50,-52,-46,-49,-85,37,-97,-82,-84,-94,-15,-17,37,37,-65,-64,-66,-67,-69,-60,-61,-87,-51,-47,-48,-83,-16,-98,-95,-78,37,-96,]),'GREATER_EQUALS':([9,23,25,44,52,53,54,56,57,58,60,61,62,64,65,68,84,86,89,92,95,96,122,123,134,135,136,137,138,139,140,152,],[-101,-89,-91,-101,-77,-72,-99,-75,-74,-101,-101,-100,-76,-73,-70,105,-71,-63,-68,-59,-62,-90,-15,-17,-65,-64,-66,-67,-69,-60,-61,-16,]),'MINUS':([9,23,24,25,26,28,29,30,31,33,36,37,44,46,52,53,54,56,57,58,59,60,61,62,64,65,66,77,84,85,86,87,88,89,90,93,94,96,99,100,101,102,103,105,107,109,110,118,122,123,126,134,135,136,137,138,142,152,156,161,],[-101,-89,55,-91,-45,-42,-43,-41,55,-44,55,55,-101,55,-77,-72,-99,-75,-74,-101,55,94,-100,-76,-73,-70,55,55,-71,55,-63,55,55,-68,55,55,55,-90,-54,-53,-58,-56,-57,-55,55,55,55,55,-15,-17,55,-65,-64,-66,-67,-69,55,-16,55,55,]),'MINUS_EQUALS':([9,10,23,25,44,96,],[-101,26,-89,-91,-101,-90,]),'END_MAIN':([6,9,10,11,23,25,27,32,34,39,40,41,42,43,44,45,47,48,49,52,53,54,56,57,58,60,61,62,64,65,67,68,69,72,74,75,76,84,86,89,92,95,96,104,106,108,111,112,114,115,117,119,122,123,134,135,136,137,138,139,140,144,145,146,147,149,152,160,162,170,173,],[-32,-101,-101,-33,-89,-91,-86,-88,-39,-92,-101,-36,-37,-34,-101,-35,-93,79,-38,-77,-72,-99,-75,-74,-101,-101,-100,-76,-73,-70,-40,-101,-101,-101,-12,-14,-13,-71,-63,-68,-59,-62,-90,-50,-52,-46,-49,-85,-97,-82,-84,-94,-15,-17,-65,-64,-66,-67,-69,-60,-61,-87,-51,-47,-48,-83,-16,-98,-95,-78,-96,]),'NOT_EQUALS':([9,23,25,44,52,53,54,56,57,58,60,61,62,64,65,68,84,86,89,92,95,96,122,123,134,135,136,137,138,139,140,152,],[-101,-89,-91,-101,-77,-72,-99,-75,-74,-101,-101,-100,-76,-73,-70,101,-71,-63,-68,-59,-62,-90,-15,-17,-65,-64,-66,-67,-69,-60,-61,-16,]),'DOUBLE_CONSTANT':([24,26,28,29,30,31,33,36,37,46,55,59,66,77,85,87,88,90,93,94,99,100,101,102,103,105,107,109,110,118,126,142,156,161,],[56,-45,-42,-43,-41,56,-44,56,56,56,56,56,56,56,56,56,56,56,56,56,-54,-53,-58,-56,-57,-55,56,56,56,56,56,56,56,56,]),'LESS_EQUALS':([9,23,25,44,52,53,54,56,57,58,60,61,62,64,65,68,84,86,89,92,95,96,122,123,134,135,136,137,138,139,140,152,],[-101,-89,-91,-101,-77,-72,-99,-75,-74,-101,-101,-100,-76,-73,-70,102,-71,-63,-68,-59,-62,-90,-15,-17,-65,-64,-66,-67,-69,-60,-61,-16,]),'PLUS':([9,23,25,44,52,53,54,56,57,58,60,61,62,64,65,84,86,89,96,122,123,134,135,136,137,138,152,],[-101,-89,-91,-101,-77,-72,-99,-75,-74,-101,93,-100,-76,-73,-70,-71,-63,-68,-90,-15,-17,-65,-64,-66,-67,-69,-16,]),'TO':([9,23,25,44,52,53,54,56,57,58,60,61,62,64,65,84,86,89,92,95,96,122,123,134,135,136,137,138,139,140,150,152,],[-101,-89,-91,-101,-77,-72,-99,-75,-74,-101,-101,-100,-76,-73,-70,-71,-63,-68,-59,-62,-90,-15,-17,-65,-64,-66,-67,-69,-60,-61,161,-16,]),'INT_CONSTANT':([24,26,28,29,30,31,33,36,37,46,55,59,66,77,85,87,88,90,93,94,99,100,101,102,103,105,107,109,110,118,126,142,156,161,],[57,-45,-42,-43,-41,57,-44,57,57,57,57,57,57,57,57,57,57,57,57,57,-54,-53,-58,-56,-57,-55,57,57,57,57,57,57,57,57,]),'COLON':([9,23,25,44,52,53,54,56,57,58,60,61,62,64,65,68,69,71,78,84,86,89,92,95,96,104,106,108,111,122,123,134,135,136,137,138,139,140,145,146,147,151,152,166,169,],[-101,-89,-91,-101,-77,-72,-99,-75,-74,-101,-101,-100,-76,-73,-70,-101,-101,113,124,-71,-63,-68,-59,-62,-90,-50,-52,-46,-49,-15,-17,-65,-64,-66,-67,-69,-60,-61,-51,-47,-48,113,-16,171,113,]),'COMMA':([9,23,25,44,52,53,54,56,57,58,60,61,62,64,65,68,69,72,83,84,86,89,92,95,96,97,104,106,108,111,122,123,134,135,136,137,138,139,140,145,146,147,152,],[-101,-89,-91,-101,-77,-72,-99,-75,-74,-101,-101,-100,-76,-73,-70,-101,-101,116,132,-71,-63,-68,-59,-62,-90,142,-50,-52,-46,-49,-15,-17,-65,-64,-66,-67,-69,-60,-61,-51,-47,-48,-16,]),'PERCENTAGE':([9,23,25,44,52,53,54,56,57,58,61,62,64,65,84,96,122,123,138,152,],[-101,-89,-91,-101,-77,-72,-99,-75,-74,88,-100,-76,-73,-70,-71,-90,-15,-17,-69,-16,]),'PLUS_EQUALS':([9,10,23,25,44,96,],[-101,33,-89,-91,-101,-90,]),'LEFT_PARENTHESIS':([19,24,26,28,29,30,31,33,35,36,37,44,46,59,66,77,85,87,88,90,93,94,99,100,101,102,103,105,107,109,110,118,126,142,156,161,],[51,59,-45,-42,-43,-41,59,-44,70,59,59,77,59,59,59,59,59,59,59,59,59,59,-54,-53,-58,-56,-57,-55,59,59,59,59,59,59,59,59,]),'$end':([2,3,13,18,50,79,],[0,-4,-2,-3,-1,-11,]),'END':([6,9,10,11,23,25,27,32,34,39,40,41,42,43,44,45,47,49,52,53,54,56,57,58,60,61,62,64,65,67,68,69,72,74,75,76,84,86,89,92,95,96,104,106,108,111,112,114,115,117,119,122,123,130,134,135,136,137,138,139,140,144,145,146,147,148,149,152,153,155,160,162,163,164,165,168,170,173,174,],[-32,-101,-101,-33,-89,-91,-86,-88,-39,-92,-101,-36,-37,-34,-101,-35,-93,-38,-77,-72,-99,-75,-74,-101,-101,-100,-76,-73,-70,-40,-101,-101,-101,-12,-14,-13,-71,-63,-68,-59,-62,-90,-50,-52,-46,-49,-85,-97,-82,-84,-94,-15,-17,157,-65,-64,-66,-67,-69,-60,-61,-87,-51,-47,-48,160,-83,-16,-101,167,-98,-95,170,-79,-80,172,-78,-96,-81,]),'DIVIDE':([9,23,25,44,52,53,54,56,57,58,61,62,64,65,84,96,122,123,138,152,],[-101,-89,-91,-101,-77,-72,-99,-75,-74,85,-100,-76,-73,-70,-71,-90,-15,-17,-69,-16,]),'FOR':([6,9,10,11,12,23,25,27,32,34,39,40,41,42,43,44,45,47,49,52,53,54,56,57,58,60,61,62,64,65,67,68,69,72,82,84,86,89,92,95,96,104,106,108,111,112,113,114,115,117,119,122,123,124,125,134,135,136,137,138,139,140,144,145,146,147,149,152,160,162,170,171,173,],[-32,-101,-101,-33,38,-89,-91,-86,-88,-39,-92,38,-36,-37,-34,-101,-35,-93,-38,-77,-72,-99,-75,-74,-101,-101,-100,-76,-73,-70,-40,-101,-101,-101,38,-71,-63,-68,-59,-62,-90,-50,-52,-46,-49,-85,38,-97,-82,-84,-94,-15,-17,38,38,-65,-64,-66,-67,-69,-60,-61,-87,-51,-47,-48,-83,-16,-98,-95,-78,38,-96,]),'EQUALS':([9,10,23,25,44,96,],[-101,30,-89,-91,-101,-90,]),'ELSE':([6,9,10,11,23,25,27,32,34,39,40,41,42,43,44,45,47,49,52,53,54,56,57,58,60,61,62,64,65,67,68,69,72,74,75,76,84,86,89,92,95,96,104,106,108,111,112,114,115,117,119,122,123,134,135,136,137,138,139,140,144,145,146,147,149,152,153,160,162,170,173,],[-32,-101,-101,-33,-89,-91,-86,-88,-39,-92,-101,-36,-37,-34,-101,-35,-93,-38,-77,-72,-99,-75,-74,-101,-101,-100,-76,-73,-70,-40,-101,-101,-101,-12,-14,-13,-71,-63,-68,-59,-62,-90,-50,-52,-46,-49,-85,-97,-82,-84,-94,-15,-17,-65,-64,-66,-67,-69,-60,-61,-87,-51,-47,-48,-83,-16,166,-98,-95,-78,-96,]),'FUNC':([0,4,5,6,8,9,10,11,20,21,22,23,25,27,32,44,52,53,54,56,57,58,60,61,62,64,65,67,68,69,81,84,86,89,92,95,96,104,106,108,111,122,123,127,128,129,134,135,136,137,138,139,140,144,145,146,147,152,154,157,167,172,],[7,7,7,-32,-101,-101,-101,-33,-6,-5,-7,-89,-91,-86,-88,-101,-77,-72,-99,-75,-74,-101,-101,-100,-76,-73,-70,-40,-101,-101,-21,-71,-63,-68,-59,-62,-90,-50,-52,-46,-49,-15,-17,-23,-25,-24,-65,-64,-66,-67,-69,-60,-61,-87,-51,-47,-48,-16,-22,-26,-28,-27,]),'IN':([9,23,25,73,96,],[-101,-89,-91,120,-90,]),'FALSE':([24,26,28,29,30,31,33,36,37,46,55,59,66,77,85,87,88,90,93,94,99,100,101,102,103,105,107,109,110,118,126,142,156,161,],[61,-45,-42,-43,-41,61,-44,61,61,61,61,61,61,61,61,61,61,61,61,61,-54,-53,-58,-56,-57,-55,61,61,61,61,61,61,61,61,]),'RIGHT_PARENTHESIS':([9,23,25,44,51,52,53,54,56,57,58,60,61,62,64,65,68,69,70,77,80,83,84,86,89,91,92,95,96,97,104,106,108,111,121,122,123,131,133,134,135,136,137,138,139,140,141,143,145,146,147,152,158,159,],[-101,-89,-91,-101,82,-77,-72,-99,-75,-74,-101,-101,-100,-76,-73,-70,-101,-101,112,123,125,-101,-71,-63,-68,138,-59,-62,-90,-101,-50,-52,-46,-49,152,-15,-17,-29,-31,-65,-64,-66,-67,-69,-60,-61,-18,-20,-51,-47,-48,-16,-30,-19,]),'TIMES':([9,23,25,44,52,53,54,56,57,58,61,62,64,65,84,96,122,123,138,152,],[-101,-89,-91,-101,-77,-72,-99,-75,-74,87,-100,-76,-73,-70,-71,-90,-15,-17,-69,-16,]),'ID':([0,6,7,8,9,10,11,12,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,49,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,72,77,82,84,85,86,87,88,89,90,92,93,94,95,96,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,122,123,124,125,126,132,134,135,136,137,138,139,140,142,144,145,146,147,149,152,156,160,161,162,170,171,173,],[9,-32,19,9,-101,-101,-33,44,-89,44,-91,-45,-86,-42,-43,-41,44,-88,-44,-39,44,44,9,-92,44,-36,-37,-34,-101,-35,44,-93,-38,9,-77,-72,-99,9,-75,-74,-101,44,-101,-100,-76,-73,-70,44,-40,-101,-101,-101,44,44,-71,44,-63,44,44,-68,44,-59,44,44,-62,-90,-54,-53,-58,-56,-57,-50,-55,-52,44,-46,44,44,-49,-85,44,-97,-82,-84,44,-94,9,-15,-17,44,44,44,9,-65,-64,-66,-67,-69,-60,-61,44,-87,-51,-47,-48,-83,-16,44,-98,44,-95,-78,44,-96,]),'TRUE':([24,26,28,29,30,31,33,36,37,46,55,59,66,77,85,87,88,90,93,94,99,100,101,102,103,105,107,109,110,118,126,142,156,161,],[54,-45,-42,-43,-41,54,-44,54,54,54,54,54,54,54,54,54,54,54,54,54,-54,-53,-58,-56,-57,-55,54,54,54,54,54,54,54,54,]),'IF':([6,9,10,11,12,23,25,27,32,34,39,40,41,42,43,44,45,47,49,52,53,54,56,57,58,60,61,62,64,65,67,68,69,72,82,84,86,89,92,95,96,104,106,108,111,112,113,114,115,117,119,122,123,124,125,134,135,136,137,138,139,140,144,145,146,147,149,152,160,162,170,171,173,],[-32,-101,-101,-33,46,-89,-91,-86,-88,-39,-92,46,-36,-37,-34,-101,-35,-93,-38,-77,-72,-99,-75,-74,-101,-101,-100,-76,-73,-70,-40,-101,-101,-101,46,-71,-63,-68,-59,-62,-90,-50,-52,-46,-49,-85,46,-97,-82,-84,-94,-15,-17,46,46,-65,-64,-66,-67,-69,-60,-61,-87,-51,-47,-48,-83,-16,-98,-95,-78,46,-96,]),'AND':([9,23,25,44,52,53,54,56,57,58,60,61,62,64,65,68,69,84,86,89,92,95,96,104,106,122,123,134,135,136,137,138,139,140,145,152,],[-101,-89,-91,-101,-77,-72,-99,-75,-74,-101,-101,-100,-76,-73,-70,-101,109,-71,-63,-68,-59,-62,-90,-50,-52,-15,-17,-65,-64,-66,-67,-69,-60,-61,-51,-16,]),'FROM':([9,23,25,73,96,],[-101,-89,-91,118,-90,]),'GREATER':([9,23,25,44,52,53,54,56,57,58,60,61,62,64,65,68,84,86,89,92,95,96,122,123,134,135,136,137,138,139,140,152,],[-101,-89,-91,-101,-77,-72,-99,-75,-74,-101,-101,-100,-76,-73,-70,99,-71,-63,-68,-59,-62,-90,-15,-17,-65,-64,-66,-67,-69,-60,-61,-16,]),'DIVIDE_EQUALS':([9,10,23,25,44,96,],[-101,29,-89,-91,-101,-90,]),'STRING_CONSTANT':([24,26,28,29,30,31,33,36,37,46,55,59,66,77,85,87,88,90,93,94,99,100,101,102,103,105,107,109,110,116,118,126,142,156,161,],[62,-45,-42,-43,-41,62,-44,62,62,62,62,62,62,62,62,62,62,62,62,62,-54,-53,-58,-56,-57,-55,62,62,62,149,62,62,62,62,62,]),'TIMES_EQUALS':([9,10,23,25,44,96,],[-101,28,-89,-91,-101,-90,]),'LEFT_BRACKET':([9,30,44,],[24,66,24,]),'MAIN':([0,1,4,5,6,8,9,10,11,14,15,16,17,20,21,22,23,25,27,32,44,52,53,54,56,57,58,60,61,62,64,65,67,68,69,81,84,86,89,92,95,96,104,106,108,111,122,123,127,128,129,134,135,136,137,138,139,140,144,145,146,147,152,154,157,167,172,],[12,12,-101,12,-32,-101,-101,-101,-33,-8,-9,-10,12,-6,-5,-7,-89,-91,-86,-88,-101,-77,-72,-99,-75,-74,-101,-101,-100,-76,-73,-70,-40,-101,-101,-21,-71,-63,-68,-59,-62,-90,-50,-52,-46,-49,-15,-17,-23,-25,-24,-65,-64,-66,-67,-69,-60,-61,-87,-51,-47,-48,-16,-22,-26,-28,-27,]),'OR':([9,23,25,44,52,53,54,56,57,58,60,61,62,64,65,68,69,84,86,89,92,95,96,104,106,122,123,134,135,136,137,138,139,140,145,152,],[-101,-89,-91,-101,-77,-72,-99,-75,-74,-101,-101,-100,-76,-73,-70,-101,110,-71,-63,-68,-59,-62,-90,-50,-52,-15,-17,-65,-64,-66,-67,-69,-60,-61,-51,-16,]),'MOD':([9,23,25,44,52,53,54,56,57,58,61,62,64,65,84,96,122,123,138,152,],[-101,-89,-91,-101,-77,-72,-99,-75,-74,90,-100,-76,-73,-70,-71,-90,-15,-17,-69,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'post_functions':([4,],[14,]),'relational_operator':([68,],[107,]),'call_function':([12,24,31,36,37,40,46,59,66,77,82,85,87,88,90,93,94,107,109,110,113,118,124,125,126,142,156,161,171,],[34,53,53,53,53,34,53,53,53,53,34,53,53,53,53,53,53,53,53,53,34,53,34,34,53,53,53,53,34,]),'BOOL_CONSTANT':([24,31,36,37,46,55,59,66,77,85,87,88,90,93,94,107,109,110,118,126,142,156,161,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'post_print':([72,],[115,]),'post_parameters':([83,],[131,]),'cond':([31,36,37,46,59,66,77,109,110,126,142,156,],[67,71,72,78,91,97,97,146,147,155,97,168,]),'loop':([12,40,82,113,124,125,171,],[49,49,49,49,49,49,49,]),'post_function':([51,],[81,]),'post_cycle':([71,151,169,],[114,162,173,]),'post_cond':([69,],[108,]),'functions':([0,4,5,],[1,15,17,]),'call_parameters':([66,77,142,],[98,121,159,]),'post_condition':([153,],[163,]),'for':([12,40,82,113,124,125,171,],[39,39,39,39,39,39,39,]),'func_return':([82,125,],[127,154,]),'post_exp':([60,],[92,]),'post_variables':([8,],[21,]),'read':([12,40,82,113,124,125,171,],[42,42,42,42,42,42,42,]),'program':([0,],[2,]),'statement':([12,40,82,113,124,125,171,],[40,40,40,40,40,40,40,]),'factor':([24,31,36,37,46,59,66,77,85,87,88,90,93,94,107,109,110,118,126,142,156,161,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'print':([12,40,82,113,124,125,171,],[41,41,41,41,41,41,41,]),'main':([0,1,5,17,],[3,13,18,50,]),'empty':([4,8,9,10,40,44,58,60,68,69,72,83,97,153,],[16,22,25,32,75,25,89,95,106,111,117,133,143,165,]),'function':([0,4,5,],[4,4,4,]),'post_for':([73,],[119,]),'pre_variables':([0,8,],[5,20,]),'assignment':([0,8,12,40,82,113,124,125,171,],[6,6,6,6,6,6,6,6,6,]),'post_term':([58,],[86,]),'else':([153,],[164,]),'value_return':([82,125,],[128,128,]),'post_identifier':([9,44,],[23,23,]),'void_return':([82,125,],[129,129,]),'variable':([0,8,12,40,82,113,124,125,171,],[8,8,43,43,43,43,43,43,43,]),'variable_constant':([24,31,36,37,46,55,59,66,77,85,87,88,90,93,94,107,109,110,118,126,142,156,161,],[65,65,65,65,65,84,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'post_block':([40,],[74,]),'condition':([12,40,82,113,124,125,171,],[45,45,45,45,45,45,45,]),'term':([24,31,36,37,46,59,66,77,85,87,88,90,93,94,107,109,110,118,126,142,156,161,],[60,60,60,60,60,60,60,60,134,135,136,137,60,60,60,60,60,60,60,60,60,60,]),'post_list':([10,],[27,]),'parameters':([51,132,],[80,158,]),'list':([0,8,12,40,82,113,124,125,171,],[11,11,11,11,11,11,11,11,11,]),'post_call_parameters':([97,],[141,]),'while':([12,40,82,113,124,125,171,],[47,47,47,47,47,47,47,]),'post_expression':([68,],[104,]),'assignment_operator':([10,],[31,]),'exp':([24,31,36,37,46,59,66,77,93,94,107,109,110,118,126,142,156,161,],[63,68,68,68,68,68,68,68,139,140,145,68,68,150,68,68,68,169,]),'identifier':([0,8,12,24,31,36,37,38,40,46,51,55,59,66,77,82,85,87,88,90,93,94,107,109,110,113,118,120,124,125,126,132,142,156,161,171,],[10,10,10,64,64,64,64,73,10,64,83,64,64,64,64,10,64,64,64,64,64,64,64,64,64,10,64,151,10,10,64,83,64,64,64,10,]),'expression':([31,36,37,46,59,66,77,109,110,126,142,156,],[69,69,69,69,69,69,69,69,69,69,69,69,]),'post_call_function':([77,],[122,]),'block':([12,40,82,113,124,125,171,],[48,76,130,148,153,130,174,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> pre_variables functions main','program',3,'p_program','parser.py',18),
  ('program -> functions main','program',2,'p_program','parser.py',19),
  ('program -> pre_variables main','program',2,'p_program','parser.py',20),
  ('program -> main','program',1,'p_program','parser.py',21),
  ('pre_variables -> variable post_variables','pre_variables',2,'p_pre_variables','parser.py',24),
  ('post_variables -> pre_variables','post_variables',1,'p_post_variables','parser.py',27),
  ('post_variables -> empty','post_variables',1,'p_post_variables','parser.py',28),
  ('functions -> function post_functions','functions',2,'p_functions','parser.py',32),
  ('post_functions -> functions','post_functions',1,'p_post_functions','parser.py',36),
  ('post_functions -> empty','post_functions',1,'p_post_functions','parser.py',37),
  ('main -> MAIN block END_MAIN','main',3,'p_main','parser.py',41),
  ('block -> statement post_block','block',2,'p_block','parser.py',45),
  ('post_block -> block','post_block',1,'p_post_block','parser.py',48),
  ('post_block -> empty','post_block',1,'p_post_block','parser.py',49),
  ('call_function -> ID LEFT_PARENTHESIS post_call_function','call_function',3,'p_call_function','parser.py',53),
  ('post_call_function -> call_parameters RIGHT_PARENTHESIS','post_call_function',2,'p_post_call_function','parser.py',56),
  ('post_call_function -> RIGHT_PARENTHESIS','post_call_function',1,'p_post_call_function','parser.py',57),
  ('call_parameters -> cond post_call_parameters','call_parameters',2,'p_call_parameters','parser.py',61),
  ('post_call_parameters -> COMMA call_parameters','post_call_parameters',2,'p_post_call_parameters','parser.py',64),
  ('post_call_parameters -> empty','post_call_parameters',1,'p_post_call_parameters','parser.py',65),
  ('function -> FUNC ID LEFT_PARENTHESIS post_function','function',4,'p_function','parser.py',69),
  ('post_function -> parameters RIGHT_PARENTHESIS func_return','post_function',3,'p_post_function','parser.py',72),
  ('post_function -> RIGHT_PARENTHESIS func_return','post_function',2,'p_post_function','parser.py',73),
  ('func_return -> void_return','func_return',1,'p_func_return','parser.py',76),
  ('func_return -> value_return','func_return',1,'p_func_return','parser.py',77),
  ('void_return -> block END','void_return',2,'p_void_return','parser.py',80),
  ('value_return -> block RETURN cond END','value_return',4,'p_value_return','parser.py',83),
  ('value_return -> RETURN cond END','value_return',3,'p_value_return','parser.py',84),
  ('parameters -> identifier post_parameters','parameters',2,'p_parameters','parser.py',89),
  ('post_parameters -> COMMA parameters','post_parameters',2,'p_post_parameters','parser.py',92),
  ('post_parameters -> empty','post_parameters',1,'p_post_parameters','parser.py',93),
  ('variable -> assignment','variable',1,'p_variable','parser.py',97),
  ('variable -> list','variable',1,'p_variable','parser.py',98),
  ('statement -> variable','statement',1,'p_statement','parser.py',102),
  ('statement -> condition','statement',1,'p_statement','parser.py',103),
  ('statement -> print','statement',1,'p_statement','parser.py',104),
  ('statement -> read','statement',1,'p_statement','parser.py',105),
  ('statement -> loop','statement',1,'p_statement','parser.py',106),
  ('statement -> call_function','statement',1,'p_statement','parser.py',107),
  ('assignment -> identifier assignment_operator cond','assignment',3,'p_assignment','parser.py',113),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',117),
  ('assignment_operator -> TIMES_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',118),
  ('assignment_operator -> DIVIDE_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',119),
  ('assignment_operator -> PLUS_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',120),
  ('assignment_operator -> MINUS_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',121),
  ('cond -> expression post_cond','cond',2,'p_cond','parser.py',125),
  ('post_cond -> AND cond','post_cond',2,'p_post_cond','parser.py',128),
  ('post_cond -> OR cond','post_cond',2,'p_post_cond','parser.py',129),
  ('post_cond -> empty','post_cond',1,'p_post_cond','parser.py',130),
  ('expression -> exp post_expression','expression',2,'p_expression','parser.py',134),
  ('post_expression -> relational_operator exp','post_expression',2,'p_post_expression','parser.py',137),
  ('post_expression -> empty','post_expression',1,'p_post_expression','parser.py',138),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',142),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',143),
  ('relational_operator -> GREATER_EQUALS','relational_operator',1,'p_relational_operator','parser.py',144),
  ('relational_operator -> LESS_EQUALS','relational_operator',1,'p_relational_operator','parser.py',145),
  ('relational_operator -> EQUALS_EQUALS','relational_operator',1,'p_relational_operator','parser.py',146),
  ('relational_operator -> NOT_EQUALS','relational_operator',1,'p_relational_operator','parser.py',147),
  ('exp -> term post_exp','exp',2,'p_exp','parser.py',151),
  ('post_exp -> PLUS exp','post_exp',2,'p_post_exp','parser.py',154),
  ('post_exp -> MINUS exp','post_exp',2,'p_post_exp','parser.py',155),
  ('post_exp -> empty','post_exp',1,'p_post_exp','parser.py',156),
  ('term -> factor post_term','term',2,'p_term','parser.py',160),
  ('post_term -> TIMES term','post_term',2,'p_post_term','parser.py',163),
  ('post_term -> DIVIDE term','post_term',2,'p_post_term','parser.py',164),
  ('post_term -> PERCENTAGE term','post_term',2,'p_post_term','parser.py',165),
  ('post_term -> MOD term','post_term',2,'p_post_term','parser.py',166),
  ('post_term -> empty','post_term',1,'p_post_term','parser.py',167),
  ('factor -> LEFT_PARENTHESIS cond RIGHT_PARENTHESIS','factor',3,'p_factor','parser.py',171),
  ('factor -> variable_constant','factor',1,'p_factor','parser.py',172),
  ('factor -> MINUS variable_constant','factor',2,'p_factor','parser.py',173),
  ('factor -> call_function','factor',1,'p_factor','parser.py',174),
  ('variable_constant -> identifier','variable_constant',1,'p_variable_constant','parser.py',178),
  ('variable_constant -> INT_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',179),
  ('variable_constant -> DOUBLE_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',180),
  ('variable_constant -> STRING_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',181),
  ('variable_constant -> BOOL_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',182),
  ('condition -> IF cond COLON block post_condition END','condition',6,'p_condition','parser.py',186),
  ('post_condition -> else','post_condition',1,'p_post_condition','parser.py',190),
  ('post_condition -> empty','post_condition',1,'p_post_condition','parser.py',191),
  ('else -> ELSE COLON block','else',3,'p_else','parser.py',195),
  ('print -> PRINT cond post_print','print',3,'p_print','parser.py',199),
  ('post_print -> COMMA STRING_CONSTANT','post_print',2,'p_post_print','parser.py',202),
  ('post_print -> empty','post_print',1,'p_post_print','parser.py',203),
  ('read -> READ LEFT_PARENTHESIS RIGHT_PARENTHESIS','read',3,'p_read','parser.py',207),
  ('list -> identifier post_list','list',2,'p_list','parser.py',211),
  ('post_list -> EQUALS LEFT_BRACKET call_parameters RIGHT_BRACKET','post_list',4,'p_post_list','parser.py',214),
  ('post_list -> empty','post_list',1,'p_post_list','parser.py',215),
  ('identifier -> ID post_identifier','identifier',2,'p_identifier','parser.py',219),
  ('post_identifier -> LEFT_BRACKET exp RIGHT_BRACKET','post_identifier',3,'p_post_identifier','parser.py',222),
  ('post_identifier -> empty','post_identifier',1,'p_post_identifier','parser.py',223),
  ('loop -> for','loop',1,'p_loop','parser.py',227),
  ('loop -> while','loop',1,'p_loop','parser.py',228),
  ('for -> FOR identifier post_for','for',3,'p_for','parser.py',232),
  ('post_for -> IN identifier post_cycle','post_for',3,'p_post_for','parser.py',235),
  ('post_for -> FROM exp TO exp post_cycle','post_for',5,'p_post_for','parser.py',236),
  ('while -> WHILE cond post_cycle','while',3,'p_while','parser.py',240),
  ('post_cycle -> COLON block END','post_cycle',3,'p_post_cycle','parser.py',244),
  ('BOOL_CONSTANT -> TRUE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',247),
  ('BOOL_CONSTANT -> FALSE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',248),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',251),
]
