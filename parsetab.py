
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E56050957E421AA0EF938B997F9C46B1'
    
_lr_action_items = {'RETURN':([8,23,24,25,28,35,36,37,39,50,66,70,71,72,73,74,75,77,102,164,187,188,207,212,],[-126,-6,-5,-7,-126,-8,-10,-9,-15,-126,-56,-54,-26,-24,-25,-53,-51,-52,-55,-126,208,-126,218,208,]),'LESS':([33,43,53,63,65,78,80,82,83,84,85,87,88,89,90,91,92,110,111,113,114,128,134,136,139,142,147,148,173,179,196,197,198,199,200,201,202,],[-107,-126,-107,-116,-118,-106,-124,-99,-104,-103,-89,-83,-125,-105,-97,-72,-102,-98,-126,-126,150,-117,-27,-30,-88,-94,-82,-86,-29,-101,-91,-90,-92,-93,-96,-85,-84,]),'READ':([8,23,24,25,28,34,35,36,37,39,50,66,70,74,75,77,102,109,137,164,185,187,188,206,212,216,226,],[-126,-6,-5,-7,-126,45,-8,-10,-9,-15,45,-56,-54,-53,-51,-52,-55,-126,45,-126,-126,45,-126,45,45,-126,45,]),'VOID':([7,],[20,]),'RIGHT_BRACKET':([33,43,53,63,65,78,80,82,83,84,85,87,88,89,90,92,104,110,111,113,128,134,136,139,142,147,148,173,179,196,197,198,199,200,201,202,],[-107,-126,-107,-116,-118,-106,-124,-99,-104,-103,-89,-83,-125,-105,-97,-102,128,-98,-126,-126,-117,-27,-30,-88,-94,-82,-86,-29,-101,-91,-90,-92,-93,-96,-85,-84,]),'EOL':([13,28,31,32,33,41,42,43,44,48,49,51,52,53,54,57,60,62,63,65,78,80,82,83,84,85,87,88,89,90,91,92,93,95,105,106,109,110,111,113,114,115,122,124,128,129,131,134,136,139,142,147,148,154,156,158,161,163,165,167,168,173,179,185,186,196,197,198,199,200,201,202,203,204,205,214,215,216,218,220,221,227,229,234,236,238,],[28,28,28,-126,-107,-19,-17,-126,28,-119,28,28,28,-107,28,-120,28,-18,-116,-118,-106,-124,-99,-104,-103,-89,-83,-125,-105,-97,-72,-102,-66,28,-115,-126,28,-98,-126,-126,-126,-126,-64,28,-117,-64,-114,-27,-30,-88,-94,-82,-86,-71,-74,-65,-69,-57,28,-112,-113,-29,-101,28,-122,-91,-90,-92,-93,-96,-85,-84,-73,-67,-68,-121,-108,28,28,28,28,-123,28,28,28,28,]),'EQUALS_EQUALS':([33,43,53,63,65,78,80,82,83,84,85,87,88,89,90,91,92,110,111,113,114,128,134,136,139,142,147,148,173,179,196,197,198,199,200,201,202,],[-107,-126,-107,-116,-118,-106,-124,-99,-104,-103,-89,-83,-125,-105,-97,-72,-102,-98,-126,-126,153,-117,-27,-30,-88,-94,-82,-86,-29,-101,-91,-90,-92,-93,-96,-85,-84,]),'WHILE':([8,23,24,25,28,34,35,36,37,39,50,66,70,74,75,77,102,109,137,164,185,187,188,206,212,216,226,],[-126,-6,-5,-7,-126,56,-8,-10,-9,-15,56,-56,-54,-53,-51,-52,-55,-126,56,-126,-126,56,-126,56,56,-126,56,]),'PRINT':([8,23,24,25,28,34,35,36,37,39,50,66,70,74,75,77,102,109,137,164,185,187,188,206,212,216,226,],[-126,-6,-5,-7,-126,46,-8,-10,-9,-15,46,-56,-54,-53,-51,-52,-55,-126,46,-126,-126,46,-126,46,46,-126,46,]),'GREATER_EQUALS':([33,43,53,63,65,78,80,82,83,84,85,87,88,89,90,91,92,110,111,113,114,128,134,136,139,142,147,148,173,179,196,197,198,199,200,201,202,],[-107,-126,-107,-116,-118,-106,-124,-99,-104,-103,-89,-83,-125,-105,-97,-72,-102,-98,-126,-126,155,-117,-27,-30,-88,-94,-82,-86,-29,-101,-91,-90,-92,-93,-96,-85,-84,]),'MINUS':([33,43,46,53,55,56,63,64,65,68,78,80,82,83,84,85,86,87,88,89,90,92,94,96,97,98,99,100,101,107,108,110,111,112,113,118,119,120,121,123,128,134,136,138,139,140,141,142,143,145,146,149,150,151,152,153,155,157,159,160,169,171,173,175,176,177,178,179,180,181,182,183,184,196,197,198,199,200,208,218,],[-107,-126,-63,-107,81,-63,-116,81,-118,81,-106,-124,-99,-104,-103,-89,-100,-83,-125,-105,-97,-102,81,-63,-63,-63,-63,81,-63,81,81,-98,-126,81,145,-62,-59,-60,-58,-61,-117,-27,-30,-95,-88,-95,-95,-94,-95,-87,-87,-75,-76,-81,-79,-80,-78,-77,-70,-70,81,81,-29,81,81,81,81,-101,81,81,81,81,81,-91,-90,-92,-93,-96,81,81,]),'DIVIDE':([33,43,53,63,65,78,80,82,83,84,85,88,89,90,92,110,111,128,134,136,173,179,200,],[-107,-126,-107,-116,-118,-106,-124,-99,-104,-103,-89,-125,-105,-97,-102,-98,138,-117,-27,-30,-29,-101,-96,]),'MINUS_EQUALS':([43,53,59,63,65,128,],[-126,-107,96,-116,-118,-117,]),'END_MAIN':([28,35,36,37,50,58,66,70,71,72,73,74,75,77,102,],[-126,-8,-10,-9,-126,95,-56,-54,-26,-24,-25,-53,-51,-52,-55,]),'NOT_EQUALS':([33,43,53,63,65,78,80,82,83,84,85,87,88,89,90,91,92,110,111,113,114,128,134,136,139,142,147,148,173,179,196,197,198,199,200,201,202,],[-107,-126,-107,-116,-118,-106,-124,-99,-104,-103,-89,-83,-125,-105,-97,-72,-102,-98,-126,-126,151,-117,-27,-30,-88,-94,-82,-86,-29,-101,-91,-90,-92,-93,-96,-85,-84,]),'DOUBLE_CONSTANT':([46,55,56,64,68,81,86,94,96,97,98,99,100,101,107,108,112,118,119,120,121,123,138,140,141,143,145,146,149,150,151,152,153,155,157,159,160,169,171,175,176,177,178,180,181,182,183,184,208,218,],[-63,83,-63,83,83,83,-100,83,-63,-63,-63,-63,83,-63,83,83,83,-62,-59,-60,-58,-61,-95,-95,-95,-95,-87,-87,-75,-76,-81,-79,-80,-78,-77,-70,-70,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'LESS_EQUALS':([33,43,53,63,65,78,80,82,83,84,85,87,88,89,90,91,92,110,111,113,114,128,134,136,139,142,147,148,173,179,196,197,198,199,200,201,202,],[-107,-126,-107,-116,-118,-106,-124,-99,-104,-103,-89,-83,-125,-105,-97,-72,-102,-98,-126,-126,152,-117,-27,-30,-88,-94,-82,-86,-29,-101,-91,-90,-92,-93,-96,-85,-84,]),'PLUS':([33,43,53,63,65,78,80,82,83,84,85,87,88,89,90,92,110,111,113,128,134,136,139,142,173,179,196,197,198,199,200,],[-107,-126,-107,-116,-118,-106,-124,-99,-104,-103,-89,-83,-125,-105,-97,-102,-98,-126,146,-117,-27,-30,-88,-94,-29,-101,-91,-90,-92,-93,-96,]),'TO':([33,43,53,63,65,78,80,82,83,84,85,87,88,89,90,92,110,111,113,128,132,134,136,139,142,147,148,173,179,196,197,198,199,200,201,202,],[-107,-126,-107,-116,-118,-106,-124,-99,-104,-103,-89,-83,-125,-105,-97,-102,-98,-126,-126,-117,169,-27,-30,-88,-94,-82,-86,-29,-101,-91,-90,-92,-93,-96,-85,-84,]),'INT_CONSTANT':([46,55,56,64,68,81,86,94,96,97,98,99,100,101,107,108,112,118,119,120,121,123,138,140,141,143,145,146,149,150,151,152,153,155,157,159,160,169,171,175,176,177,178,180,181,182,183,184,208,218,],[-63,84,-63,84,84,84,-100,84,-63,-63,-63,-63,84,-63,84,84,84,-62,-59,-60,-58,-61,-95,-95,-95,-95,-87,-87,-75,-76,-81,-79,-80,-78,-77,-70,-70,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'COLON':([5,10,11,12,20,21,22,33,43,53,63,65,78,79,80,82,83,84,85,87,88,89,90,91,92,93,110,111,113,114,115,116,128,134,136,139,142,147,148,154,156,158,161,162,173,179,190,195,196,197,198,199,200,201,202,203,204,205,],[-13,-11,-12,-14,-36,-35,30,-107,-126,-107,-116,-118,-106,109,-124,-99,-104,-103,-89,-83,-125,-105,-97,-72,-102,-66,-98,-126,-126,-126,-126,-64,-117,-27,-30,-88,-94,-82,-86,-71,-74,-65,-69,185,-29,-101,185,216,-91,-90,-92,-93,-96,-85,-84,-73,-67,-68,]),'COMMA':([32,33,43,53,63,65,78,80,82,83,84,85,87,88,89,90,91,92,93,106,110,111,113,114,115,128,133,134,136,139,142,147,148,154,156,158,161,173,179,189,196,197,198,199,200,201,202,203,204,205,213,],[40,-107,-126,-107,-116,-118,-106,-124,-99,-104,-103,-89,-83,-125,-105,-97,-72,-102,-66,130,-98,-126,-126,-126,-126,-117,171,-27,-30,-88,-94,-82,-86,-71,-74,-65,-69,-29,-101,-48,-91,-90,-92,-93,-96,-85,-84,-73,-67,-68,224,]),'PERCENTAGE':([33,43,53,63,65,78,80,82,83,84,85,88,89,90,92,110,111,128,134,136,173,179,200,],[-107,-126,-107,-116,-118,-106,-124,-99,-104,-103,-89,-125,-105,-97,-102,-98,141,-117,-27,-30,-29,-101,-96,]),'PLUS_EQUALS':([43,53,59,63,65,128,],[-126,-107,101,-116,-118,-117,]),'LEFT_PARENTHESIS':([38,45,46,53,55,56,61,64,68,76,86,94,96,97,98,99,100,101,107,108,112,118,119,120,121,123,138,140,141,143,145,146,149,150,151,152,153,155,157,159,160,169,171,175,176,177,178,180,181,182,183,184,208,218,],[-37,67,-63,-28,86,-63,103,86,86,108,-100,86,-63,-63,-63,-63,86,-63,86,86,86,-62,-59,-60,-58,-61,-95,-95,-95,-95,-87,-87,-75,-76,-81,-79,-80,-78,-77,-70,-70,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'$end':([2,3,14,19,28,29,35,36,37,95,117,],[0,-4,-2,-3,-126,-1,-8,-10,-9,-126,-23,]),'END':([28,35,36,37,50,66,70,71,72,73,74,75,77,102,174,192,193,194,207,217,228,231,233,235,],[-126,-8,-10,-9,-126,-56,-54,-26,-24,-25,-53,-51,-52,-55,-126,215,-109,-110,220,227,234,236,-111,238,]),'STRING':([0,7,8,27,28,35,36,37,39,103,164,188,224,],[5,5,5,5,-126,-8,-10,-9,-15,5,5,5,5,]),'FOR':([8,23,24,25,28,34,35,36,37,39,50,66,70,74,75,77,102,109,137,164,185,187,188,206,212,216,226,],[-126,-6,-5,-7,-126,47,-8,-10,-9,-15,47,-56,-54,-53,-51,-52,-55,-126,47,-126,-126,47,-126,47,47,-126,47,]),'EQUALS':([43,53,59,63,65,128,],[-126,-107,99,-116,-118,-117,]),'ELSE':([28,35,36,37,50,66,70,71,72,73,74,75,77,102,174,],[-126,-8,-10,-9,-126,-56,-54,-26,-24,-25,-53,-51,-52,-55,195,]),'FUNC':([0,4,6,8,23,24,25,28,35,36,37,39,126,209,210,211,219,222,230,237,239,240,],[7,7,7,-126,-6,-5,-7,-126,-8,-10,-9,-15,-34,-39,-41,-40,-42,-38,-43,-44,-46,-45,]),'FALSE':([46,55,56,64,68,81,86,94,96,97,98,99,100,101,107,108,112,118,119,120,121,123,138,140,141,143,145,146,149,150,151,152,153,155,157,159,160,169,171,175,176,177,178,180,181,182,183,184,208,218,],[-63,88,-63,88,88,88,-100,88,-63,-63,-63,-63,88,-63,88,88,88,-62,-59,-60,-58,-61,-95,-95,-95,-95,-87,-87,-75,-76,-81,-79,-80,-78,-77,-70,-70,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'RIGHT_PARENTHESIS':([33,43,53,63,65,67,78,80,82,83,84,85,87,88,89,90,91,92,93,103,108,110,111,113,114,115,125,128,133,134,135,136,139,142,144,147,148,154,156,158,161,170,172,173,179,189,191,196,197,198,199,200,201,202,203,204,205,213,223,225,232,],[-107,-126,-107,-116,-118,105,-106,-124,-99,-104,-103,-89,-83,-125,-105,-97,-72,-102,-66,124,136,-98,-126,-126,-126,-126,165,-117,-126,-27,173,-30,-88,-94,179,-82,-86,-71,-74,-65,-69,-31,-33,-29,-101,-48,-32,-91,-90,-92,-93,-96,-85,-84,-73,-67,-68,-126,-47,-50,-49,]),'TIMES':([33,43,53,63,65,78,80,82,83,84,85,88,89,90,92,110,111,128,134,136,173,179,200,],[-107,-126,-107,-116,-118,-106,-124,-99,-104,-103,-89,-125,-105,-97,-102,-98,140,-117,-27,-30,-29,-101,-96,]),'ID':([5,8,9,10,11,12,23,24,25,26,28,30,34,35,36,37,39,40,46,47,50,55,56,64,66,68,70,74,75,77,81,86,94,96,97,98,99,100,101,102,107,108,109,112,118,119,120,121,123,127,137,138,140,141,143,145,146,149,150,151,152,153,155,157,159,160,164,166,169,171,175,176,177,178,180,181,182,183,184,185,187,188,206,208,212,216,218,226,],[-13,-126,-16,-11,-12,-14,-6,-5,-7,33,-126,38,53,-8,-10,-9,-15,33,-63,33,53,53,-63,53,-56,53,-54,-53,-51,-52,33,-100,53,-63,-63,-63,-63,53,-63,-55,53,53,-126,53,-62,-59,-60,-58,-61,-16,53,-95,-95,-95,-95,-87,-87,-75,-76,-81,-79,-80,-78,-77,-70,-70,-126,33,53,53,53,53,53,53,53,53,53,53,53,-126,53,-126,53,53,53,-126,53,53,]),'TRUE':([46,55,56,64,68,81,86,94,96,97,98,99,100,101,107,108,112,118,119,120,121,123,138,140,141,143,145,146,149,150,151,152,153,155,157,159,160,169,171,175,176,177,178,180,181,182,183,184,208,218,],[-63,80,-63,80,80,80,-100,80,-63,-63,-63,-63,80,-63,80,80,80,-62,-59,-60,-58,-61,-95,-95,-95,-95,-87,-87,-75,-76,-81,-79,-80,-78,-77,-70,-70,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'IF':([8,23,24,25,28,34,35,36,37,39,50,66,70,74,75,77,102,109,137,164,185,187,188,206,212,216,226,],[-126,-6,-5,-7,-126,55,-8,-10,-9,-15,55,-56,-54,-53,-51,-52,-55,-126,55,-126,-126,55,-126,55,55,-126,55,]),'AND':([33,43,53,63,65,78,80,82,83,84,85,87,88,89,90,91,92,93,110,111,113,114,115,128,134,136,139,142,147,148,154,156,173,179,196,197,198,199,200,201,202,203,],[-107,-126,-107,-116,-118,-106,-124,-99,-104,-103,-89,-83,-125,-105,-97,-72,-102,-66,-98,-126,-126,-126,159,-117,-27,-30,-88,-94,-82,-86,-71,-74,-29,-101,-91,-90,-92,-93,-96,-85,-84,-73,]),'FROM':([33,43,63,65,69,128,],[-107,-126,-116,-118,107,-117,]),'GREATER':([33,43,53,63,65,78,80,82,83,84,85,87,88,89,90,91,92,110,111,113,114,128,134,136,139,142,147,148,173,179,196,197,198,199,200,201,202,],[-107,-126,-107,-116,-118,-106,-124,-99,-104,-103,-89,-83,-125,-105,-97,-72,-102,-98,-126,-126,157,-117,-27,-30,-88,-94,-82,-86,-29,-101,-91,-90,-92,-93,-96,-85,-84,]),'INT':([0,7,8,27,28,35,36,37,39,103,164,188,224,],[10,10,10,10,-126,-8,-10,-9,-15,10,10,10,10,]),'DOUBLE':([0,7,8,27,28,35,36,37,39,103,164,188,224,],[11,11,11,11,-126,-8,-10,-9,-15,11,11,11,11,]),'DIVIDE_EQUALS':([43,53,59,63,65,128,],[-126,-107,98,-116,-118,-117,]),'BOOL':([0,7,8,27,28,35,36,37,39,103,164,188,224,],[12,12,12,12,-126,-8,-10,-9,-15,12,12,12,12,]),'STRING_CONSTANT':([46,55,56,64,68,81,86,94,96,97,98,99,100,101,107,108,112,118,119,120,121,123,130,138,140,141,143,145,146,149,150,151,152,153,155,157,159,160,169,171,175,176,177,178,180,181,182,183,184,208,218,],[-63,89,-63,89,89,89,-100,89,-63,-63,-63,-63,89,-63,89,89,89,-62,-59,-60,-58,-61,168,-95,-95,-95,-95,-87,-87,-75,-76,-81,-79,-80,-78,-77,-70,-70,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'TIMES_EQUALS':([43,53,59,63,65,128,],[-126,-107,97,-116,-118,-117,]),'LEFT_BRACKET':([33,43,53,],[-107,64,-107,]),'MAIN':([0,1,4,6,8,15,16,17,18,23,24,25,28,35,36,37,39,126,209,210,211,219,222,230,237,239,240,],[13,13,-126,13,-126,-20,-21,-22,13,-6,-5,-7,-126,-8,-10,-9,-15,-34,-39,-41,-40,-42,-38,-43,-44,-46,-45,]),'OR':([33,43,53,63,65,78,80,82,83,84,85,87,88,89,90,91,92,93,110,111,113,114,115,128,134,136,139,142,147,148,154,156,173,179,196,197,198,199,200,201,202,203,],[-107,-126,-107,-116,-118,-106,-124,-99,-104,-103,-89,-83,-125,-105,-97,-72,-102,-66,-98,-126,-126,-126,160,-117,-27,-30,-88,-94,-82,-86,-71,-74,-29,-101,-91,-90,-92,-93,-96,-85,-84,-73,]),'MOD':([33,43,53,63,65,78,80,82,83,84,85,88,89,90,92,110,111,128,134,136,173,179,200,],[-107,-126,-107,-116,-118,-106,-124,-99,-104,-103,-89,-125,-105,-97,-102,-98,143,-117,-27,-30,-29,-101,-96,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'optional_eol':([28,95,109,185,216,],[35,117,137,206,226,]),'post_functions':([4,],[15,]),'relational_operator':([114,],[149,]),'call_function':([34,50,55,64,68,94,100,107,108,112,137,169,171,175,176,177,178,180,181,182,183,184,187,206,208,212,218,226,],[44,44,82,82,82,82,82,82,82,82,44,82,82,82,82,82,82,82,82,82,82,82,44,44,82,44,82,44,]),'BOOL_CONSTANT':([55,64,68,81,94,100,107,108,112,169,171,175,176,177,178,180,181,182,183,184,208,218,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'required_eol':([13,28,31,44,49,51,52,54,60,95,109,124,165,185,216,218,220,221,229,234,236,238,],[27,36,39,66,70,74,75,77,102,36,36,164,188,36,36,228,230,231,235,237,239,240,]),'push_relop':([149,],[182,]),'post_print':([106,],[129,]),'validate_function_call':([53,],[76,]),'start_evaluating':([46,56,96,97,98,99,101,],[68,94,118,119,120,121,123,]),'cond':([55,68,94,100,108,112,171,183,184,208,218,],[79,106,116,122,133,144,133,204,205,221,229,]),'post_function':([103,],[126,]),'post_cycle':([162,190,],[186,214,]),'post_cond':([115,],[158,]),'functions':([0,4,6,],[1,16,18,]),'pop_term':([85,],[111,]),'for':([34,50,137,187,206,212,226,],[48,48,48,48,48,48,48,]),'pop_op_and_or':([93,],[115,]),'arguments':([108,171,],[135,191,]),'pop_exp':([87,],[113,]),'post_variables':([8,164,188,],[24,187,212,]),'read':([34,50,137,187,206,212,226,],[49,49,49,49,49,49,49,]),'program':([0,],[2,]),'condition':([34,50,137,187,206,212,226,],[54,54,54,54,54,54,54,]),'process_variable':([33,53,],[43,43,]),'factor':([55,64,68,94,100,107,108,112,169,171,175,176,177,178,180,181,182,183,184,208,218,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'print':([34,50,137,187,206,212,226,],[51,51,51,51,51,51,51,]),'main':([0,1,6,18,],[3,14,19,29,]),'finish_evaluating':([116,122,129,],[162,163,167,]),'empty':([4,8,28,32,43,50,95,106,109,111,113,114,115,133,164,174,185,188,213,216,],[17,25,37,41,65,71,37,131,37,142,148,156,161,172,25,194,37,25,225,37,]),'assignment_operator':([59,],[100,]),'function':([0,4,6,],[4,4,4,]),'pop_relop':([91,],[114,]),'push_exp':([145,146,],[180,181,]),'statement':([34,50,137,187,206,212,226,],[50,50,50,50,50,50,50,]),'post_condition':([174,],[192,]),'pre_variables':([0,8,27,164,188,],[6,23,34,23,23,]),'assignment':([34,50,137,187,206,212,226,],[52,52,52,52,52,52,52,]),'post_term':([111,],[139,]),'set_type':([9,127,],[26,166,]),'value_return':([187,212,],[210,210,]),'inter_declaration':([26,40,],[31,62,]),'post_identifier':([43,],[63,]),'void_return':([187,212,],[211,211,]),'cycle_declaration':([32,],[42,]),'declaration':([0,8,27,164,188,],[8,8,8,8,8,]),'variable_constant':([55,64,68,81,94,100,107,108,112,169,171,175,176,177,178,180,181,182,183,184,208,218,],[90,90,90,110,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'post_block':([50,],[72,]),'else':([174,],[193,]),'pop_paren':([179,],[200,]),'types':([0,7,8,27,103,164,188,224,],[9,21,9,9,127,9,9,127,]),'term':([55,64,68,94,100,107,108,112,169,171,175,176,177,178,180,181,182,183,184,208,218,],[87,87,87,87,87,87,87,87,87,87,196,197,198,199,87,87,87,87,87,87,87,]),'update_function_parameters':([189,],[213,]),'parameters':([103,224,],[125,232,]),'push_op_and_or':([159,160,],[183,184,]),'post_arguments':([133,],[170,]),'post_void_return':([207,],[219,]),'post_parameters':([213,],[223,]),'push_term':([138,140,141,143,],[175,176,177,178,]),'func_return':([187,212,],[209,222,]),'while':([34,50,137,187,206,212,226,],[57,57,57,57,57,57,57,]),'register_function':([38,],[61,]),'post_expression':([114,],[154,]),'loop':([34,50,137,187,206,212,226,],[60,60,60,60,60,60,60,]),'exp':([55,64,68,94,100,107,108,112,169,171,180,181,182,183,184,208,218,],[91,104,91,91,91,132,91,91,190,91,201,202,203,91,91,91,91,]),'post_exp':([113,],[147,]),'func_types':([7,],[22,]),'identifier':([26,34,40,47,50,55,64,68,81,94,100,107,108,112,137,166,169,171,175,176,177,178,180,181,182,183,184,187,206,208,212,218,226,],[32,59,32,69,59,92,92,92,92,92,92,92,92,92,59,189,92,92,92,92,92,92,92,92,92,92,92,59,59,92,59,92,59,]),'expression':([55,68,94,100,108,112,171,183,184,208,218,],[93,93,93,93,93,93,93,93,93,93,93,]),'post_call_function':([108,],[134,]),'block':([34,50,137,187,206,212,226,],[58,73,174,207,217,207,233,]),'push_paren':([86,],[112,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> pre_variables functions main','program',3,'p_program','parser.py',24),
  ('program -> functions main','program',2,'p_program','parser.py',25),
  ('program -> pre_variables main','program',2,'p_program','parser.py',26),
  ('program -> main','program',1,'p_program','parser.py',27),
  ('pre_variables -> declaration post_variables','pre_variables',2,'p_pre_variables','parser.py',31),
  ('post_variables -> pre_variables','post_variables',1,'p_post_variables','parser.py',34),
  ('post_variables -> empty','post_variables',1,'p_post_variables','parser.py',35),
  ('required_eol -> EOL optional_eol','required_eol',2,'p_required_eol','parser.py',39),
  ('optional_eol -> empty','optional_eol',1,'p_optional_eol','parser.py',42),
  ('optional_eol -> required_eol','optional_eol',1,'p_optional_eol','parser.py',43),
  ('types -> INT','types',1,'p_types','parser.py',47),
  ('types -> DOUBLE','types',1,'p_types','parser.py',48),
  ('types -> STRING','types',1,'p_types','parser.py',49),
  ('types -> BOOL','types',1,'p_types','parser.py',50),
  ('declaration -> types set_type inter_declaration required_eol','declaration',4,'p_declaration','parser.py',54),
  ('set_type -> <empty>','set_type',0,'p_set_type','parser.py',57),
  ('inter_declaration -> identifier cycle_declaration','inter_declaration',2,'p_inter_declaration','parser.py',61),
  ('cycle_declaration -> COMMA inter_declaration','cycle_declaration',2,'p_cycle_declaration','parser.py',64),
  ('cycle_declaration -> empty','cycle_declaration',1,'p_cycle_declaration','parser.py',65),
  ('functions -> function post_functions','functions',2,'p_functions','parser.py',69),
  ('post_functions -> functions','post_functions',1,'p_post_functions','parser.py',73),
  ('post_functions -> empty','post_functions',1,'p_post_functions','parser.py',74),
  ('main -> MAIN required_eol pre_variables block END_MAIN optional_eol','main',6,'p_main','parser.py',78),
  ('block -> statement post_block','block',2,'p_block','parser.py',82),
  ('post_block -> block','post_block',1,'p_post_block','parser.py',85),
  ('post_block -> empty','post_block',1,'p_post_block','parser.py',86),
  ('call_function -> ID validate_function_call LEFT_PARENTHESIS post_call_function','call_function',4,'p_call_function','parser.py',90),
  ('validate_function_call -> <empty>','validate_function_call',0,'p_validate_function_call','parser.py',94),
  ('post_call_function -> arguments RIGHT_PARENTHESIS','post_call_function',2,'p_post_call_function','parser.py',98),
  ('post_call_function -> RIGHT_PARENTHESIS','post_call_function',1,'p_post_call_function','parser.py',99),
  ('arguments -> cond post_arguments','arguments',2,'p_arguments','parser.py',103),
  ('post_arguments -> COMMA arguments','post_arguments',2,'p_post_arguments','parser.py',106),
  ('post_arguments -> empty','post_arguments',1,'p_post_arguments','parser.py',107),
  ('function -> FUNC func_types COLON ID register_function LEFT_PARENTHESIS post_function','function',7,'p_function','parser.py',111),
  ('func_types -> types','func_types',1,'p_func_types','parser.py',114),
  ('func_types -> VOID','func_types',1,'p_func_types','parser.py',115),
  ('register_function -> <empty>','register_function',0,'p_register_function','parser.py',118),
  ('post_function -> parameters RIGHT_PARENTHESIS required_eol post_variables func_return','post_function',5,'p_post_function','parser.py',124),
  ('post_function -> RIGHT_PARENTHESIS required_eol post_variables func_return','post_function',4,'p_post_function','parser.py',125),
  ('func_return -> void_return','func_return',1,'p_func_return','parser.py',128),
  ('func_return -> value_return','func_return',1,'p_func_return','parser.py',129),
  ('void_return -> block post_void_return','void_return',2,'p_void_return','parser.py',132),
  ('post_void_return -> END required_eol','post_void_return',2,'p_post_void_return','parser.py',135),
  ('post_void_return -> RETURN required_eol END required_eol','post_void_return',4,'p_post_void_return','parser.py',136),
  ('value_return -> block RETURN cond required_eol END required_eol','value_return',6,'p_value_return','parser.py',140),
  ('value_return -> RETURN cond required_eol END required_eol','value_return',5,'p_value_return','parser.py',141),
  ('parameters -> types set_type identifier update_function_parameters post_parameters','parameters',5,'p_parameters','parser.py',162),
  ('update_function_parameters -> <empty>','update_function_parameters',0,'p_update_function_parameters','parser.py',166),
  ('post_parameters -> COMMA parameters','post_parameters',2,'p_post_parameters','parser.py',172),
  ('post_parameters -> empty','post_parameters',1,'p_post_parameters','parser.py',173),
  ('statement -> assignment required_eol','statement',2,'p_statement','parser.py',177),
  ('statement -> condition required_eol','statement',2,'p_statement','parser.py',178),
  ('statement -> print required_eol','statement',2,'p_statement','parser.py',179),
  ('statement -> read required_eol','statement',2,'p_statement','parser.py',180),
  ('statement -> loop required_eol','statement',2,'p_statement','parser.py',181),
  ('statement -> call_function required_eol','statement',2,'p_statement','parser.py',182),
  ('assignment -> identifier assignment_operator cond finish_evaluating','assignment',4,'p_assignment','parser.py',187),
  ('assignment_operator -> EQUALS start_evaluating','assignment_operator',2,'p_assignment_operator','parser.py',191),
  ('assignment_operator -> TIMES_EQUALS start_evaluating','assignment_operator',2,'p_assignment_operator','parser.py',192),
  ('assignment_operator -> DIVIDE_EQUALS start_evaluating','assignment_operator',2,'p_assignment_operator','parser.py',193),
  ('assignment_operator -> PLUS_EQUALS start_evaluating','assignment_operator',2,'p_assignment_operator','parser.py',194),
  ('assignment_operator -> MINUS_EQUALS start_evaluating','assignment_operator',2,'p_assignment_operator','parser.py',195),
  ('start_evaluating -> <empty>','start_evaluating',0,'p_start_evaluating','parser.py',198),
  ('finish_evaluating -> <empty>','finish_evaluating',0,'p_finish_evaluating','parser.py',202),
  ('cond -> expression pop_op_and_or post_cond','cond',3,'p_cond','parser.py',207),
  ('pop_op_and_or -> <empty>','pop_op_and_or',0,'p_pop_op_and_or','parser.py',210),
  ('post_cond -> AND push_op_and_or cond','post_cond',3,'p_post_cond','parser.py',215),
  ('post_cond -> OR push_op_and_or cond','post_cond',3,'p_post_cond','parser.py',216),
  ('post_cond -> empty','post_cond',1,'p_post_cond','parser.py',217),
  ('push_op_and_or -> <empty>','push_op_and_or',0,'p_push_op_and_or','parser.py',220),
  ('expression -> exp pop_relop post_expression','expression',3,'p_expression','parser.py',225),
  ('pop_relop -> <empty>','pop_relop',0,'p_pop_relop','parser.py',228),
  ('post_expression -> relational_operator push_relop exp','post_expression',3,'p_post_expression','parser.py',234),
  ('post_expression -> empty','post_expression',1,'p_post_expression','parser.py',235),
  ('push_relop -> <empty>','push_relop',0,'p_push_relop','parser.py',238),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',243),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',244),
  ('relational_operator -> GREATER_EQUALS','relational_operator',1,'p_relational_operator','parser.py',245),
  ('relational_operator -> LESS_EQUALS','relational_operator',1,'p_relational_operator','parser.py',246),
  ('relational_operator -> EQUALS_EQUALS','relational_operator',1,'p_relational_operator','parser.py',247),
  ('relational_operator -> NOT_EQUALS','relational_operator',1,'p_relational_operator','parser.py',248),
  ('exp -> term pop_exp post_exp','exp',3,'p_exp','parser.py',252),
  ('pop_exp -> <empty>','pop_exp',0,'p_pop_exp','parser.py',255),
  ('post_exp -> PLUS push_exp exp','post_exp',3,'p_post_exp','parser.py',260),
  ('post_exp -> MINUS push_exp exp','post_exp',3,'p_post_exp','parser.py',261),
  ('post_exp -> empty','post_exp',1,'p_post_exp','parser.py',262),
  ('push_exp -> <empty>','push_exp',0,'p_push_exp','parser.py',265),
  ('term -> factor pop_term post_term','term',3,'p_term','parser.py',270),
  ('pop_term -> <empty>','pop_term',0,'p_pop_term','parser.py',273),
  ('post_term -> TIMES push_term term','post_term',3,'p_post_term','parser.py',279),
  ('post_term -> DIVIDE push_term term','post_term',3,'p_post_term','parser.py',280),
  ('post_term -> PERCENTAGE push_term term','post_term',3,'p_post_term','parser.py',281),
  ('post_term -> MOD push_term term','post_term',3,'p_post_term','parser.py',282),
  ('post_term -> empty','post_term',1,'p_post_term','parser.py',283),
  ('push_term -> <empty>','push_term',0,'p_push_term','parser.py',286),
  ('factor -> LEFT_PARENTHESIS push_paren cond RIGHT_PARENTHESIS pop_paren','factor',5,'p_factor','parser.py',291),
  ('factor -> variable_constant','factor',1,'p_factor','parser.py',292),
  ('factor -> MINUS variable_constant','factor',2,'p_factor','parser.py',293),
  ('factor -> call_function','factor',1,'p_factor','parser.py',294),
  ('push_paren -> <empty>','push_paren',0,'p_push_paren','parser.py',297),
  ('pop_paren -> <empty>','pop_paren',0,'p_pop_paren','parser.py',301),
  ('variable_constant -> identifier','variable_constant',1,'p_variable_constant','parser.py',306),
  ('variable_constant -> INT_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',307),
  ('variable_constant -> DOUBLE_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',308),
  ('variable_constant -> STRING_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',309),
  ('variable_constant -> BOOL_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',310),
  ('process_variable -> <empty>','process_variable',0,'p_process_variable','parser.py',313),
  ('condition -> IF cond COLON optional_eol block post_condition END','condition',7,'p_condition','parser.py',322),
  ('post_condition -> else','post_condition',1,'p_post_condition','parser.py',326),
  ('post_condition -> empty','post_condition',1,'p_post_condition','parser.py',327),
  ('else -> ELSE COLON optional_eol block','else',4,'p_else','parser.py',331),
  ('print -> PRINT start_evaluating cond post_print finish_evaluating','print',5,'p_print','parser.py',335),
  ('post_print -> COMMA STRING_CONSTANT','post_print',2,'p_post_print','parser.py',338),
  ('post_print -> empty','post_print',1,'p_post_print','parser.py',339),
  ('read -> READ LEFT_PARENTHESIS RIGHT_PARENTHESIS','read',3,'p_read','parser.py',343),
  ('identifier -> ID process_variable post_identifier','identifier',3,'p_identifier','parser.py',347),
  ('post_identifier -> LEFT_BRACKET exp RIGHT_BRACKET','post_identifier',3,'p_post_identifier','parser.py',350),
  ('post_identifier -> empty','post_identifier',1,'p_post_identifier','parser.py',351),
  ('loop -> for','loop',1,'p_loop','parser.py',355),
  ('loop -> while','loop',1,'p_loop','parser.py',356),
  ('for -> FOR identifier FROM exp TO exp post_cycle','for',7,'p_for','parser.py',360),
  ('while -> WHILE start_evaluating cond finish_evaluating post_cycle','while',5,'p_while','parser.py',364),
  ('post_cycle -> COLON optional_eol block END','post_cycle',4,'p_post_cycle','parser.py',368),
  ('BOOL_CONSTANT -> TRUE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',371),
  ('BOOL_CONSTANT -> FALSE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',372),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',375),
]
