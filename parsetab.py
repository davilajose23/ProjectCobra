
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '3E7F99FDF8FF15464FDAA5994C594D05'
    
_lr_action_items = {'RETURN':([10,26,27,28,39,40,47,48,49,50,62,90,96,97,98,99,100,101,104,108,116,147,148,185,186,],[-151,-7,-6,-8,-151,-77,-9,-11,-10,-16,-151,-64,-62,-29,-27,-28,-61,-59,-60,-63,-151,181,-151,220,181,]),'LESS':([72,73,74,76,77,78,80,81,82,83,85,93,109,110,111,112,114,125,133,135,137,140,145,146,167,169,178,206,207,211,212,213,214,215,216,217,218,237,],[-120,-113,-149,-121,-117,-103,-118,-97,-150,-119,-111,-86,-121,-112,-151,-151,-151,152,-116,-69,-102,-108,-96,-100,-30,-34,-115,-34,-33,-68,-105,-104,-106,-107,-110,-99,-98,-32,]),'READ':([10,26,27,28,39,40,46,47,48,49,50,62,90,96,100,101,104,108,116,130,147,148,170,186,208,209,239,273,279,282,],[-151,-7,-6,-8,-151,-77,57,-9,-11,-10,-16,57,-64,-62,-61,-59,-60,-63,-151,-123,57,-151,-151,57,57,-151,57,-129,-151,57,]),'VOID':([9,],[23,]),'RIGHT_BRACKET':([72,73,74,76,77,78,80,81,82,83,84,85,109,110,111,112,114,133,135,137,140,145,146,167,169,173,178,206,207,211,212,213,214,215,216,217,218,237,],[-120,-113,-149,-121,-117,-103,-118,-97,-150,-119,115,-111,-121,-112,-151,-151,-151,-116,-69,-102,-108,-96,-100,-30,-34,211,-115,-34,-33,-68,-105,-104,-106,-107,-110,-99,-98,-32,]),'EOL':([11,29,33,34,35,36,39,41,43,44,51,53,54,56,60,61,63,64,66,69,71,72,73,74,76,77,78,80,81,82,83,85,86,92,93,94,107,109,110,111,112,114,115,117,119,120,122,123,124,125,126,130,132,133,135,137,140,145,146,150,157,158,160,163,167,169,170,178,188,189,206,207,209,210,211,212,213,214,215,216,217,218,219,220,222,225,226,233,237,240,243,244,247,254,255,256,264,266,267,268,269,273,276,278,279,281,],[-124,-26,39,39,-121,-151,39,-151,-20,-18,-137,-139,-19,39,-140,39,39,39,39,-141,39,-120,-113,-149,-121,-117,-103,-118,-97,-150,-119,-111,39,-151,-86,-80,-25,-121,-112,-151,-151,-151,-138,39,-136,-130,-132,-131,-135,-151,-151,-123,39,-116,-69,-102,-108,-96,-100,-134,-85,-88,-79,-83,-30,-34,39,-115,-133,-87,-34,-33,39,-124,-68,-105,-104,-106,-107,-110,-99,-98,39,39,-52,-81,-82,-76,-32,-147,39,39,-65,-145,-52,-52,-122,-148,39,39,-52,-129,39,-147,39,-142,]),'EQUALS_EQUALS':([72,73,74,76,77,78,80,81,82,83,85,93,109,110,111,112,114,125,133,135,137,140,145,146,167,169,178,206,207,211,212,213,214,215,216,217,218,237,],[-120,-113,-149,-121,-117,-103,-118,-97,-150,-119,-111,-86,-121,-112,-151,-151,-151,156,-116,-69,-102,-108,-96,-100,-30,-34,-115,-34,-33,-68,-105,-104,-106,-107,-110,-99,-98,-32,]),'WHILE':([10,26,27,28,39,40,46,47,48,49,50,62,90,96,100,101,104,108,116,130,147,148,170,186,208,209,239,273,279,282,],[-151,-7,-6,-8,-151,-77,68,-9,-11,-10,-16,68,-64,-62,-61,-59,-60,-63,-151,-123,68,-151,-151,68,68,-151,68,-129,-151,68,]),'COLON':([72,73,74,76,77,78,80,81,82,83,85,93,94,105,109,110,111,112,114,125,126,131,133,135,137,140,145,146,157,158,160,163,167,169,171,178,189,206,207,211,212,213,214,215,216,217,218,225,226,237,252,262,265,272,],[-120,-113,-149,-121,-117,-103,-118,-97,-150,-119,-111,-86,-80,130,-121,-112,-151,-151,-151,-151,-151,-123,-116,-69,-102,-108,-96,-100,-85,-88,-79,-83,-30,-34,209,-115,-87,-34,-33,-68,-105,-104,-106,-107,-110,-99,-98,-81,-82,-32,-128,-146,273,209,]),'PRINT':([10,26,27,28,39,40,46,47,48,49,50,62,90,96,100,101,104,108,116,130,147,148,170,186,208,209,239,273,279,282,],[-151,-7,-6,-8,-151,-77,58,-9,-11,-10,-16,58,-64,-62,-61,-59,-60,-63,-151,-123,58,-151,-151,58,58,-151,58,-129,-151,58,]),'TRUE':([52,58,67,68,75,79,106,113,129,134,136,138,139,141,143,144,151,152,153,154,155,156,159,161,162,164,174,175,176,177,179,180,181,190,191,192,193,194,195,196,197,199,200,201,202,203,204,220,228,229,230,231,232,235,246,],[74,74,74,-146,74,-114,74,74,74,74,-109,-109,-109,-109,-101,-101,74,-89,-89,-89,-89,-89,-89,-84,-84,74,74,74,74,74,74,74,74,-90,-92,-95,-93,-94,-91,74,74,-75,-75,-75,-75,-75,74,74,-74,-73,-71,-72,-70,74,74,]),'MINUS':([52,58,67,68,72,73,74,76,77,78,79,80,81,82,83,85,106,109,110,111,112,113,114,129,133,134,135,136,137,138,139,140,141,143,144,151,152,153,154,155,156,159,161,162,164,167,169,174,175,176,177,178,179,180,181,190,191,192,193,194,195,196,197,199,200,201,202,203,204,206,207,211,212,213,214,215,216,220,228,229,230,231,232,235,237,246,],[75,75,75,-146,-120,-113,-149,-121,-117,-103,-114,-118,-97,-150,-119,-111,75,-121,-112,-151,-151,75,143,75,-116,75,-69,-109,-102,-109,-109,-108,-109,-101,-101,75,-89,-89,-89,-89,-89,-89,-84,-84,75,-30,-34,75,75,75,75,-115,75,75,75,-90,-92,-95,-93,-94,-91,75,75,-75,-75,-75,-75,-75,75,-34,-33,-68,-105,-104,-106,-107,-110,75,-74,-73,-71,-72,-70,75,-32,75,]),'DIVIDE':([72,73,74,76,77,78,80,82,83,85,109,110,111,112,133,135,167,169,178,206,207,211,216,237,],[-120,-113,-149,-121,-117,-103,-118,-150,-119,-111,-121,-112,-151,136,-116,-69,-30,-34,-115,-34,-33,-68,-110,-32,]),'MINUS_EQUALS':([65,102,128,135,165,211,],[-66,-67,-151,-69,199,-68,]),'END_MAIN':([39,47,48,49,62,70,90,96,97,98,99,100,101,104,108,],[-151,-9,-11,-10,-151,107,-64,-62,-29,-27,-28,-61,-59,-60,-63,]),'NOT_EQUALS':([72,73,74,76,77,78,80,81,82,83,85,93,109,110,111,112,114,125,133,135,137,140,145,146,167,169,178,206,207,211,212,213,214,215,216,217,218,237,],[-120,-113,-149,-121,-117,-103,-118,-97,-150,-119,-111,-86,-121,-112,-151,-151,-151,154,-116,-69,-102,-108,-96,-100,-30,-34,-115,-34,-33,-68,-105,-104,-106,-107,-110,-99,-98,-32,]),'DOUBLE_CONSTANT':([52,58,67,68,75,79,106,113,129,134,136,138,139,141,143,144,151,152,153,154,155,156,159,161,162,164,174,175,176,177,179,180,181,190,191,192,193,194,195,196,197,199,200,201,202,203,204,220,228,229,230,231,232,235,246,],[80,80,80,-146,80,-114,80,80,80,80,-109,-109,-109,-109,-101,-101,80,-89,-89,-89,-89,-89,-89,-84,-84,80,80,80,80,80,80,80,80,-90,-92,-95,-93,-94,-91,80,80,-75,-75,-75,-75,-75,80,80,-74,-73,-71,-72,-70,80,80,]),'GREATER_EQUALS':([72,73,74,76,77,78,80,81,82,83,85,93,109,110,111,112,114,125,133,135,137,140,145,146,167,169,178,206,207,211,212,213,214,215,216,217,218,237,],[-120,-113,-149,-121,-117,-103,-118,-97,-150,-119,-111,-86,-121,-112,-151,-151,-151,153,-116,-69,-102,-108,-96,-100,-30,-34,-115,-34,-33,-68,-105,-104,-106,-107,-110,-99,-98,-32,]),'LESS_EQUALS':([72,73,74,76,77,78,80,81,82,83,85,93,109,110,111,112,114,125,133,135,137,140,145,146,167,169,178,206,207,211,212,213,214,215,216,217,218,237,],[-120,-113,-149,-121,-117,-103,-118,-97,-150,-119,-111,-86,-121,-112,-151,-151,-151,155,-116,-69,-102,-108,-96,-100,-30,-34,-115,-34,-33,-68,-105,-104,-106,-107,-110,-99,-98,-32,]),'TO':([72,73,74,76,77,78,80,81,82,83,85,109,110,111,112,114,133,135,137,140,145,146,167,169,178,198,206,207,211,212,213,214,215,216,217,218,227,237,],[-120,-113,-149,-121,-117,-103,-118,-97,-150,-119,-111,-121,-112,-151,-151,-151,-116,-69,-102,-108,-96,-100,-30,-34,-115,-144,-34,-33,-68,-105,-104,-106,-107,-110,-99,-98,246,-32,]),'INT_CONSTANT':([52,58,67,68,75,79,106,113,129,134,136,138,139,141,143,144,151,152,153,154,155,156,159,161,162,164,174,175,176,177,179,180,181,190,191,192,193,194,195,196,197,199,200,201,202,203,204,220,228,229,230,231,232,235,246,],[77,77,77,-146,77,-114,77,77,77,77,-109,-109,-109,-109,-101,-101,77,-89,-89,-89,-89,-89,-89,-84,-84,77,77,77,77,77,77,77,77,-90,-92,-95,-93,-94,-91,77,77,-75,-75,-75,-75,-75,77,77,-74,-73,-71,-72,-70,77,77,]),'COMMA':([35,36,41,51,53,72,73,74,76,77,78,80,81,82,83,85,92,93,94,109,110,111,112,114,115,125,126,133,135,137,140,145,146,157,158,160,163,166,167,169,178,189,205,206,207,211,212,213,214,215,216,217,218,224,225,226,237,245,],[-121,42,-151,-137,-139,-120,-113,-149,-121,-117,-103,-118,-97,-150,-119,-111,121,-86,-80,-121,-112,-151,-151,-151,-138,-151,-151,-116,-69,-102,-108,-96,-100,-85,-88,-79,-83,-36,-30,-34,-115,-87,235,-34,-33,-68,-105,-104,-106,-107,-110,-99,-98,-56,-81,-82,-32,260,]),'PLUS':([72,73,74,76,77,78,80,81,82,83,85,109,110,111,112,114,133,135,137,140,167,169,178,206,207,211,212,213,214,215,216,237,],[-120,-113,-149,-121,-117,-103,-118,-97,-150,-119,-111,-121,-112,-151,-151,144,-116,-69,-102,-108,-30,-34,-115,-34,-33,-68,-105,-104,-106,-107,-110,-32,]),'PERCENTAGE':([72,73,74,76,77,78,80,82,83,85,109,110,111,112,133,135,167,169,178,206,207,211,216,237,],[-120,-113,-149,-121,-117,-103,-118,-150,-119,-111,-121,-112,-151,139,-116,-69,-30,-34,-115,-34,-33,-68,-110,-32,]),'PLUS_EQUALS':([65,102,128,135,165,211,],[-66,-67,-151,-69,200,-68,]),'LEFT_PARENTHESIS':([37,45,52,57,58,65,67,68,76,79,103,106,113,129,134,136,138,139,141,143,144,151,152,153,154,155,156,159,161,162,164,174,175,176,177,179,180,181,190,191,192,193,194,195,196,197,199,200,201,202,203,204,220,228,229,230,231,232,235,246,],[-42,55,79,91,79,-31,79,-146,-31,-114,129,79,79,79,79,-109,-109,-109,-109,-101,-101,79,-89,-89,-89,-89,-89,-89,-84,-84,79,79,79,79,79,79,79,79,-90,-92,-95,-93,-94,-91,79,79,-75,-75,-75,-75,-75,79,79,-74,-73,-71,-72,-70,79,79,]),'$end':([1,4,5,12,22,31,39,47,48,49,107,132,172,],[0,-1,-5,-3,-4,-2,-151,-9,-11,-10,-25,-151,-24,]),'END':([39,47,48,49,62,90,96,97,98,99,100,101,104,108,185,238,241,242,249,250,251,253,257,263,283,284,],[-151,-9,-11,-10,-151,-64,-62,-29,-27,-28,-61,-59,-60,-63,222,-124,255,256,-151,264,-125,266,269,-126,-124,-127,]),'STRING':([0,2,6,9,10,38,39,40,47,48,49,50,55,88,116,118,148,260,],[-129,-78,13,13,-78,-78,-151,-77,-9,-11,-10,-16,-78,-54,-78,13,-78,-78,]),'FOR':([10,26,27,28,39,40,46,47,48,49,50,62,90,96,100,101,104,108,116,130,147,148,170,186,208,209,239,273,279,282,],[-151,-7,-6,-8,-151,-77,59,-9,-11,-10,-16,59,-64,-62,-61,-59,-60,-63,-151,-123,59,-151,-151,59,59,-151,59,-129,-151,59,]),'EQUALS':([65,102,128,135,165,211,],[-66,-67,-151,-69,203,-68,]),'ELSE':([39,47,48,49,62,90,96,97,98,99,100,101,104,108,238,],[-151,-9,-11,-10,-151,-64,-62,-29,-27,-28,-61,-59,-60,-63,252,]),'FUNC':([0,2,7,8,10,26,27,28,39,40,47,48,49,50,89,182,183,184,221,223,258,274,275,280,],[-129,9,9,9,-151,-7,-6,-8,-151,-77,-9,-11,-10,-16,-39,-44,-46,-45,-47,-43,-48,-51,-49,-50,]),'FROM':([95,127,],[-143,164,]),'RIGHT_PARENTHESIS':([35,41,51,53,55,72,73,74,76,77,78,80,81,82,83,85,87,91,93,94,109,110,111,112,114,115,125,126,129,133,135,137,140,142,145,146,157,158,160,163,166,167,168,169,178,189,205,206,207,211,212,213,214,215,216,217,218,224,225,226,234,236,237,245,248,259,261,270,271,277,],[-121,-151,-137,-139,86,-120,-113,-149,-121,-117,-103,-118,-97,-150,-119,-111,117,119,-86,-80,-121,-112,-151,-151,-151,-138,-151,-151,169,-116,-69,-102,-108,178,-96,-100,-85,-88,-79,-83,-36,-30,206,-34,-115,-87,-151,-34,-33,-68,-105,-104,-106,-107,-110,-99,-98,-56,-81,-82,-35,-38,-32,-151,-37,-55,-58,-77,-57,-53,]),'TIMES':([72,73,74,76,77,78,80,82,83,85,109,110,111,112,133,135,167,169,178,206,207,211,216,237,],[-120,-113,-149,-121,-117,-103,-118,-150,-119,-111,-121,-112,-151,138,-116,-69,-30,-34,-115,-34,-33,-68,-110,-32,]),'ID':([10,13,14,15,16,17,23,24,25,26,27,28,30,32,39,40,42,46,47,48,49,50,52,58,59,62,67,68,75,79,90,96,100,101,104,106,108,113,116,129,130,134,136,138,139,141,143,144,147,148,149,151,152,153,154,155,156,159,161,162,164,170,174,175,176,177,179,180,181,186,187,190,191,192,193,194,195,196,197,199,200,201,202,203,204,208,209,220,228,229,230,231,232,235,239,246,273,279,282,],[-151,-14,-12,-13,-15,-17,-41,-40,-17,-7,-6,-8,35,37,-151,-77,35,65,-9,-11,-10,-16,76,76,95,65,76,-146,109,-114,-64,-62,-61,-59,-60,76,-63,76,-151,76,-123,76,-109,-109,-109,-109,-101,-101,65,-151,-17,76,-89,-89,-89,-89,-89,-89,-84,-84,76,-151,76,76,76,76,76,76,76,65,35,-90,-92,-95,-93,-94,-91,76,76,-75,-75,-75,-75,-75,76,65,-151,76,-74,-73,-71,-72,-70,76,65,76,-129,-151,65,]),'IF':([10,26,27,28,39,40,46,47,48,49,50,62,90,96,100,101,104,108,116,130,147,148,170,186,208,209,239,273,279,282,],[-151,-7,-6,-8,-151,-77,67,-9,-11,-10,-16,67,-64,-62,-61,-59,-60,-63,-151,-123,67,-151,-151,67,67,-151,67,-129,-151,67,]),'AND':([72,73,74,76,77,78,80,81,82,83,85,93,94,109,110,111,112,114,125,126,133,135,137,140,145,146,157,158,167,169,178,189,206,207,211,212,213,214,215,216,217,218,237,],[-120,-113,-149,-121,-117,-103,-118,-97,-150,-119,-111,-86,-80,-121,-112,-151,-151,-151,-151,161,-116,-69,-102,-108,-96,-100,-85,-88,-30,-34,-115,-87,-34,-33,-68,-105,-104,-106,-107,-110,-99,-98,-32,]),'FALSE':([52,58,67,68,75,79,106,113,129,134,136,138,139,141,143,144,151,152,153,154,155,156,159,161,162,164,174,175,176,177,179,180,181,190,191,192,193,194,195,196,197,199,200,201,202,203,204,220,228,229,230,231,232,235,246,],[82,82,82,-146,82,-114,82,82,82,82,-109,-109,-109,-109,-101,-101,82,-89,-89,-89,-89,-89,-89,-84,-84,82,82,82,82,82,82,82,82,-90,-92,-95,-93,-94,-91,82,82,-75,-75,-75,-75,-75,82,82,-74,-73,-71,-72,-70,82,82,]),'GREATER':([72,73,74,76,77,78,80,81,82,83,85,93,109,110,111,112,114,125,133,135,137,140,145,146,167,169,178,206,207,211,212,213,214,215,216,217,218,237,],[-120,-113,-149,-121,-117,-103,-118,-97,-150,-119,-111,-86,-121,-112,-151,-151,-151,159,-116,-69,-102,-108,-96,-100,-30,-34,-115,-34,-33,-68,-105,-104,-106,-107,-110,-99,-98,-32,]),'INT':([0,2,6,9,10,38,39,40,47,48,49,50,55,88,116,118,148,260,],[-129,-78,14,14,-78,-78,-151,-77,-9,-11,-10,-16,-78,-54,-78,14,-78,-78,]),'DOUBLE':([0,2,6,9,10,38,39,40,47,48,49,50,55,88,116,118,148,260,],[-129,-78,15,15,-78,-78,-151,-77,-9,-11,-10,-16,-78,-54,-78,15,-78,-78,]),'DIVIDE_EQUALS':([65,102,128,135,165,211,],[-66,-67,-151,-69,202,-68,]),'BOOL':([0,2,6,9,10,38,39,40,47,48,49,50,55,88,116,118,148,260,],[-129,-78,16,16,-78,-78,-151,-77,-9,-11,-10,-16,-78,-54,-78,16,-78,-78,]),'STRING_CONSTANT':([52,58,67,68,75,79,106,113,121,129,134,136,138,139,141,143,144,151,152,153,154,155,156,159,161,162,164,174,175,176,177,179,180,181,190,191,192,193,194,195,196,197,199,200,201,202,203,204,220,228,229,230,231,232,235,246,],[83,83,83,-146,83,-114,83,83,150,83,83,-109,-109,-109,-109,-101,-101,83,-89,-89,-89,-89,-89,-89,-84,-84,83,83,83,83,83,83,83,83,-90,-92,-95,-93,-94,-91,83,83,-75,-75,-75,-75,-75,83,83,-74,-73,-71,-72,-70,83,83,]),'TIMES_EQUALS':([65,102,128,135,165,211,],[-66,-67,-151,-69,201,-68,]),'LEFT_BRACKET':([35,41,65,76,102,109,111,128,],[-121,52,-66,-121,-67,-121,134,134,]),'MAIN':([0,2,3,7,8,10,18,19,20,21,26,27,28,39,40,47,48,49,50,89,182,183,184,221,223,258,274,275,280,],[-129,11,11,-151,11,-151,-21,-22,-23,11,-7,-6,-8,-151,-77,-9,-11,-10,-16,-39,-44,-46,-45,-47,-43,-48,-51,-49,-50,]),'OR':([72,73,74,76,77,78,80,81,82,83,85,93,94,109,110,111,112,114,125,126,133,135,137,140,145,146,157,158,167,169,178,189,206,207,211,212,213,214,215,216,217,218,237,],[-120,-113,-149,-121,-117,-103,-118,-97,-150,-119,-111,-86,-80,-121,-112,-151,-151,-151,-151,162,-116,-69,-102,-108,-96,-100,-85,-88,-30,-34,-115,-87,-34,-33,-68,-105,-104,-106,-107,-110,-99,-98,-32,]),'MOD':([72,73,74,76,77,78,80,82,83,85,109,110,111,112,133,135,167,169,178,206,207,211,216,237,],[-120,-113,-149,-121,-117,-103,-118,-150,-119,-111,-121,-112,-151,141,-116,-69,-30,-34,-115,-34,-33,-68,-110,-32,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'relational_operator':([125,],[151,]),'post_function':([55,],[89,]),'push_assignment':([199,200,201,202,203,],[228,229,230,231,232,]),'parameters':([55,260,],[87,271,]),'increase_call_arguments':([166,],[205,]),'post_variables':([10,116,148,],[27,147,186,]),'finish_params':([259,],[270,]),'init':([0,],[1,]),'program':([2,],[4,]),'factor':([52,58,67,106,113,129,134,151,164,174,175,176,177,179,180,181,196,197,204,220,235,246,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'main':([2,3,8,21,],[5,12,22,31,]),'finish_evaluating':([2,10,38,55,116,148,260,],[6,6,6,88,6,6,88,]),'read':([46,62,147,186,208,239,282,],[61,61,61,61,61,61,61,]),'post_term':([112,],[137,]),'print_mod':([92,],[123,]),'condition':([46,62,147,186,208,239,282,],[66,66,66,66,66,66,66,]),'term':([52,58,67,106,113,129,134,151,164,174,175,176,177,179,180,181,196,197,204,220,235,246,],[81,81,81,81,81,81,81,81,81,212,213,214,215,81,81,81,81,81,81,81,81,81,]),'push_end':([107,],[132,]),'post_void_return':([185,],[221,]),'push_term':([136,138,139,141,],[174,175,176,177,]),'register_function':([37,],[45,]),'identifier':([30,42,187,],[36,36,224,]),'push_paren':([79,],[113,]),'BOOL_CONSTANT':([52,58,67,75,106,113,129,134,151,164,174,175,176,177,179,180,181,196,197,204,220,235,246,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'call_function':([46,52,58,62,67,106,113,129,134,147,151,164,174,175,176,177,179,180,181,186,196,197,204,208,220,235,239,246,282,],[56,73,73,56,73,73,73,73,73,56,73,73,73,73,73,73,73,73,73,56,73,73,73,56,73,73,56,73,56,]),'reset_scope':([222,255,256,269,],[244,267,268,276,]),'push_relop':([152,153,154,155,156,159,],[190,191,192,193,194,195,]),'post_parameters':([245,],[259,]),'start_evaluating':([40,270,],[50,277,]),'post_print':([92,],[120,]),'fill_goto':([11,210,238,283,],[29,240,249,284,]),'for':([46,62,147,186,208,239,282,],[60,60,60,60,60,60,60,]),'post_exp':([114,],[145,]),'assignment':([46,62,147,186,208,239,282,],[64,64,64,64,64,64,64,]),'print':([46,62,147,186,208,239,282,],[63,63,63,63,63,63,63,]),'push_exp':([143,144,],[179,180,]),'set_type':([17,25,149,],[30,32,187,]),'inter_declaration':([30,42,],[34,54,]),'void_return':([147,186,],[184,184,]),'pop_paren':([178,],[216,]),'push_gotoF':([130,131,],[170,171,]),'assignment_operator':([165,],[204,]),'expression':([58,67,106,113,129,151,181,196,197,204,220,235,],[94,94,94,94,94,189,94,94,94,94,94,94,]),'pop_exp':([81,],[114,]),'block':([46,62,147,186,208,239,282,],[70,99,185,185,238,253,283,]),'optional_eol':([39,132,170,209,279,],[47,172,208,239,282,]),'post_functions':([7,],[18,]),'pop_term':([78,],[112,]),'required_eol':([33,34,39,56,61,63,64,66,71,86,117,132,170,209,219,220,243,244,267,268,276,279,],[38,40,48,90,96,100,101,104,108,116,148,48,48,48,241,242,257,258,274,275,280,48,]),'push_goto':([0,273,],[2,279,]),'post_arguments':([205,],[234,]),'validate_function_call':([65,76,],[103,103,]),'post_cycle':([171,272,],[210,278,]),'post_cond':([126,],[160,]),'func_return':([147,186,],[182,223,]),'post_call_function':([129,],[167,]),'validate_var':([65,],[102,]),'push_cycle':([68,262,],[106,272,]),'process_variable':([35,76,109,],[41,111,111,]),'empty':([7,10,36,39,41,62,92,111,112,114,116,125,126,128,132,148,170,205,209,245,249,279,],[20,28,43,49,53,97,124,135,140,146,28,158,163,135,49,28,49,236,49,261,263,49,]),'function':([2,7,8,],[7,7,7,]),'statement':([46,62,147,186,208,239,282,],[62,62,62,62,62,62,62,]),'pre_variables':([2,10,38,116,148,],[8,26,46,26,26,]),'else':([238,],[251,]),'value_return':([147,186,],[183,183,]),'cycle_declaration':([36,],[44,]),'declaration':([2,10,38,116,148,],[10,10,10,10,10,]),'set_main_scope':([29,],[33,]),'init_var':([198,],[227,]),'push_op_and_or':([161,162,],[196,197,]),'fill_goto_else':([252,],[265,]),'while':([46,62,147,186,208,239,282,],[69,69,69,69,69,69,69,]),'post_expression':([125,],[157,]),'loop':([46,62,147,186,208,239,282,],[71,71,71,71,71,71,71,]),'validate_call_arguments':([169,206,],[207,237,]),'cond':([58,67,106,113,129,181,196,197,204,220,235,],[92,105,131,142,166,219,225,226,233,243,166,]),'functions':([2,7,8,],[3,19,21,]),'pop_op_and_or':([94,],[126,]),'arguments':([129,235,],[168,248,]),'pop_relop':([93,],[125,]),'exp':([52,58,67,106,113,129,134,151,164,179,180,181,196,197,204,220,235,246,],[84,93,93,93,93,93,173,93,198,217,218,93,93,93,93,93,93,262,]),'post_condition':([238,],[250,]),'print_post_mod':([150,],[188,]),'post_identifier':([41,],[51,]),'pop_assignment':([233,],[247,]),'post_block':([62,],[98,]),'func_types':([9,],[25,]),'types':([6,9,118,],[17,24,149,]),'create_pending_goto':([240,278,],[254,281,]),'update_function_parameters':([224,],[245,]),'array_notation':([111,128,],[133,165,]),'add_var':([95,],[127,]),'push_var':([102,],[128,]),'start_params':([88,],[118,]),'print_default':([92,],[122,]),'variable_constant':([52,58,67,75,106,113,129,134,151,164,174,175,176,177,179,180,181,196,197,204,220,235,246,],[85,85,85,110,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> push_goto program','init',2,'p_init','parser.py',25),
  ('program -> pre_variables functions main','program',3,'p_program','parser.py',28),
  ('program -> functions main','program',2,'p_program','parser.py',29),
  ('program -> pre_variables main','program',2,'p_program','parser.py',30),
  ('program -> main','program',1,'p_program','parser.py',31),
  ('pre_variables -> declaration post_variables','pre_variables',2,'p_pre_variables','parser.py',37),
  ('post_variables -> pre_variables','post_variables',1,'p_post_variables','parser.py',40),
  ('post_variables -> empty','post_variables',1,'p_post_variables','parser.py',41),
  ('required_eol -> EOL optional_eol','required_eol',2,'p_required_eol','parser.py',45),
  ('optional_eol -> empty','optional_eol',1,'p_optional_eol','parser.py',48),
  ('optional_eol -> required_eol','optional_eol',1,'p_optional_eol','parser.py',49),
  ('types -> INT','types',1,'p_types','parser.py',53),
  ('types -> DOUBLE','types',1,'p_types','parser.py',54),
  ('types -> STRING','types',1,'p_types','parser.py',55),
  ('types -> BOOL','types',1,'p_types','parser.py',56),
  ('declaration -> finish_evaluating types set_type inter_declaration required_eol start_evaluating','declaration',6,'p_declaration','parser.py',61),
  ('set_type -> <empty>','set_type',0,'p_set_type','parser.py',64),
  ('inter_declaration -> identifier cycle_declaration','inter_declaration',2,'p_inter_declaration','parser.py',67),
  ('cycle_declaration -> COMMA inter_declaration','cycle_declaration',2,'p_cycle_declaration','parser.py',70),
  ('cycle_declaration -> empty','cycle_declaration',1,'p_cycle_declaration','parser.py',71),
  ('functions -> function post_functions','functions',2,'p_functions','parser.py',75),
  ('post_functions -> functions','post_functions',1,'p_post_functions','parser.py',78),
  ('post_functions -> empty','post_functions',1,'p_post_functions','parser.py',79),
  ('main -> MAIN fill_goto set_main_scope required_eol pre_variables block END_MAIN push_end optional_eol','main',9,'p_main','parser.py',83),
  ('push_end -> <empty>','push_end',0,'p_push_end','parser.py',86),
  ('set_main_scope -> <empty>','set_main_scope',0,'p_set_main_scope','parser.py',90),
  ('block -> statement post_block','block',2,'p_block','parser.py',97),
  ('post_block -> block','post_block',1,'p_post_block','parser.py',100),
  ('post_block -> empty','post_block',1,'p_post_block','parser.py',101),
  ('call_function -> ID validate_function_call LEFT_PARENTHESIS post_call_function','call_function',4,'p_call_function','parser.py',105),
  ('validate_function_call -> <empty>','validate_function_call',0,'p_validate_function_call','parser.py',109),
  ('post_call_function -> arguments RIGHT_PARENTHESIS validate_call_arguments','post_call_function',3,'p_post_call_function','parser.py',117),
  ('post_call_function -> RIGHT_PARENTHESIS validate_call_arguments','post_call_function',2,'p_post_call_function','parser.py',118),
  ('validate_call_arguments -> <empty>','validate_call_arguments',0,'p_validate_call_arguments','parser.py',121),
  ('arguments -> cond increase_call_arguments post_arguments','arguments',3,'p_arguments','parser.py',127),
  ('increase_call_arguments -> <empty>','increase_call_arguments',0,'p_increase_call_arguments','parser.py',131),
  ('post_arguments -> COMMA arguments','post_arguments',2,'p_post_arguments','parser.py',139),
  ('post_arguments -> empty','post_arguments',1,'p_post_arguments','parser.py',140),
  ('function -> FUNC func_types set_type ID register_function LEFT_PARENTHESIS post_function','function',7,'p_function','parser.py',144),
  ('func_types -> types','func_types',1,'p_func_types','parser.py',147),
  ('func_types -> VOID','func_types',1,'p_func_types','parser.py',148),
  ('register_function -> <empty>','register_function',0,'p_register_function','parser.py',154),
  ('post_function -> parameters RIGHT_PARENTHESIS required_eol post_variables func_return','post_function',5,'p_post_function','parser.py',162),
  ('post_function -> RIGHT_PARENTHESIS required_eol post_variables func_return','post_function',4,'p_post_function','parser.py',163),
  ('func_return -> void_return','func_return',1,'p_func_return','parser.py',166),
  ('func_return -> value_return','func_return',1,'p_func_return','parser.py',167),
  ('void_return -> block post_void_return','void_return',2,'p_void_return','parser.py',170),
  ('post_void_return -> END reset_scope required_eol','post_void_return',3,'p_post_void_return','parser.py',173),
  ('post_void_return -> RETURN required_eol END reset_scope required_eol','post_void_return',5,'p_post_void_return','parser.py',174),
  ('value_return -> block RETURN cond required_eol END reset_scope required_eol','value_return',7,'p_value_return','parser.py',177),
  ('value_return -> RETURN cond required_eol END reset_scope required_eol','value_return',6,'p_value_return','parser.py',178),
  ('reset_scope -> <empty>','reset_scope',0,'p_reset_scope','parser.py',181),
  ('parameters -> finish_evaluating start_params types set_type identifier update_function_parameters post_parameters finish_params start_evaluating','parameters',9,'p_parameters','parser.py',187),
  ('start_params -> <empty>','start_params',0,'p_start_params','parser.py',190),
  ('finish_params -> <empty>','finish_params',0,'p_finish_params','parser.py',194),
  ('update_function_parameters -> <empty>','update_function_parameters',0,'p_update_function_parameters','parser.py',199),
  ('post_parameters -> COMMA parameters','post_parameters',2,'p_post_parameters','parser.py',203),
  ('post_parameters -> empty','post_parameters',1,'p_post_parameters','parser.py',204),
  ('statement -> assignment required_eol','statement',2,'p_statement','parser.py',208),
  ('statement -> condition required_eol','statement',2,'p_statement','parser.py',209),
  ('statement -> print required_eol','statement',2,'p_statement','parser.py',210),
  ('statement -> read required_eol','statement',2,'p_statement','parser.py',211),
  ('statement -> loop required_eol','statement',2,'p_statement','parser.py',212),
  ('statement -> call_function required_eol','statement',2,'p_statement','parser.py',213),
  ('assignment -> ID validate_var push_var array_notation assignment_operator cond pop_assignment','assignment',7,'p_assignment','parser.py',218),
  ('validate_var -> <empty>','validate_var',0,'p_validate_var','parser.py',221),
  ('push_var -> <empty>','push_var',0,'p_push_var','parser.py',225),
  ('array_notation -> LEFT_BRACKET exp RIGHT_BRACKET','array_notation',3,'p_array_notation','parser.py',234),
  ('array_notation -> empty','array_notation',1,'p_array_notation','parser.py',235),
  ('assignment_operator -> EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',239),
  ('assignment_operator -> TIMES_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',240),
  ('assignment_operator -> DIVIDE_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',241),
  ('assignment_operator -> PLUS_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',242),
  ('assignment_operator -> MINUS_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',243),
  ('push_assignment -> <empty>','push_assignment',0,'p_push_assignment','parser.py',246),
  ('pop_assignment -> <empty>','pop_assignment',0,'p_pop_assignment','parser.py',250),
  ('start_evaluating -> <empty>','start_evaluating',0,'p_start_evaluating','parser.py',256),
  ('finish_evaluating -> <empty>','finish_evaluating',0,'p_finish_evaluating','parser.py',260),
  ('cond -> expression pop_op_and_or post_cond','cond',3,'p_cond','parser.py',265),
  ('pop_op_and_or -> <empty>','pop_op_and_or',0,'p_pop_op_and_or','parser.py',268),
  ('post_cond -> AND push_op_and_or cond','post_cond',3,'p_post_cond','parser.py',273),
  ('post_cond -> OR push_op_and_or cond','post_cond',3,'p_post_cond','parser.py',274),
  ('post_cond -> empty','post_cond',1,'p_post_cond','parser.py',275),
  ('push_op_and_or -> <empty>','push_op_and_or',0,'p_push_op_and_or','parser.py',278),
  ('expression -> exp pop_relop post_expression','expression',3,'p_expression','parser.py',283),
  ('pop_relop -> <empty>','pop_relop',0,'p_pop_relop','parser.py',286),
  ('post_expression -> relational_operator expression','post_expression',2,'p_post_expression','parser.py',292),
  ('post_expression -> empty','post_expression',1,'p_post_expression','parser.py',293),
  ('push_relop -> <empty>','push_relop',0,'p_push_relop','parser.py',296),
  ('relational_operator -> LESS push_relop','relational_operator',2,'p_relational_operator','parser.py',301),
  ('relational_operator -> GREATER push_relop','relational_operator',2,'p_relational_operator','parser.py',302),
  ('relational_operator -> GREATER_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',303),
  ('relational_operator -> LESS_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',304),
  ('relational_operator -> EQUALS_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',305),
  ('relational_operator -> NOT_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',306),
  ('exp -> term pop_exp post_exp','exp',3,'p_exp','parser.py',310),
  ('pop_exp -> <empty>','pop_exp',0,'p_pop_exp','parser.py',313),
  ('post_exp -> PLUS push_exp exp','post_exp',3,'p_post_exp','parser.py',318),
  ('post_exp -> MINUS push_exp exp','post_exp',3,'p_post_exp','parser.py',319),
  ('post_exp -> empty','post_exp',1,'p_post_exp','parser.py',320),
  ('push_exp -> <empty>','push_exp',0,'p_push_exp','parser.py',323),
  ('term -> factor pop_term post_term','term',3,'p_term','parser.py',328),
  ('pop_term -> <empty>','pop_term',0,'p_pop_term','parser.py',331),
  ('post_term -> TIMES push_term term','post_term',3,'p_post_term','parser.py',337),
  ('post_term -> DIVIDE push_term term','post_term',3,'p_post_term','parser.py',338),
  ('post_term -> PERCENTAGE push_term term','post_term',3,'p_post_term','parser.py',339),
  ('post_term -> MOD push_term term','post_term',3,'p_post_term','parser.py',340),
  ('post_term -> empty','post_term',1,'p_post_term','parser.py',341),
  ('push_term -> <empty>','push_term',0,'p_push_term','parser.py',344),
  ('factor -> LEFT_PARENTHESIS push_paren cond RIGHT_PARENTHESIS pop_paren','factor',5,'p_factor','parser.py',349),
  ('factor -> variable_constant','factor',1,'p_factor','parser.py',350),
  ('factor -> MINUS variable_constant','factor',2,'p_factor','parser.py',351),
  ('factor -> call_function','factor',1,'p_factor','parser.py',352),
  ('push_paren -> <empty>','push_paren',0,'p_push_paren','parser.py',355),
  ('pop_paren -> <empty>','pop_paren',0,'p_pop_paren','parser.py',359),
  ('variable_constant -> ID process_variable array_notation','variable_constant',3,'p_variable_constant','parser.py',364),
  ('variable_constant -> INT_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',365),
  ('variable_constant -> DOUBLE_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',366),
  ('variable_constant -> STRING_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',367),
  ('variable_constant -> BOOL_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',368),
  ('process_variable -> <empty>','process_variable',0,'p_process_variable','parser.py',381),
  ('condition -> IF cond COLON push_gotoF optional_eol block post_condition END','condition',8,'p_condition','parser.py',392),
  ('push_gotoF -> <empty>','push_gotoF',0,'p_push_gotoF','parser.py',395),
  ('fill_goto -> <empty>','fill_goto',0,'p_fill_goto','parser.py',399),
  ('post_condition -> else','post_condition',1,'p_post_condition','parser.py',404),
  ('post_condition -> fill_goto empty','post_condition',2,'p_post_condition','parser.py',405),
  ('else -> ELSE fill_goto_else COLON push_goto optional_eol block fill_goto','else',7,'p_else','parser.py',409),
  ('fill_goto_else -> <empty>','fill_goto_else',0,'p_fill_goto_else','parser.py',412),
  ('push_goto -> <empty>','push_goto',0,'p_push_goto','parser.py',416),
  ('print -> PRINT cond post_print','print',3,'p_print','parser.py',421),
  ('post_print -> print_mod','post_print',1,'p_post_print','parser.py',424),
  ('post_print -> print_default','post_print',1,'p_post_print','parser.py',425),
  ('print_mod -> COMMA STRING_CONSTANT print_post_mod','print_mod',3,'p_print_mod','parser.py',428),
  ('print_post_mod -> <empty>','print_post_mod',0,'p_print_post_mod','parser.py',431),
  ('print_default -> empty','print_default',1,'p_print_default','parser.py',435),
  ('read -> READ LEFT_PARENTHESIS RIGHT_PARENTHESIS','read',3,'p_read','parser.py',440),
  ('identifier -> ID process_variable post_identifier','identifier',3,'p_identifier','parser.py',444),
  ('post_identifier -> LEFT_BRACKET exp RIGHT_BRACKET','post_identifier',3,'p_post_identifier','parser.py',447),
  ('post_identifier -> empty','post_identifier',1,'p_post_identifier','parser.py',448),
  ('loop -> for','loop',1,'p_loop','parser.py',452),
  ('loop -> while','loop',1,'p_loop','parser.py',453),
  ('for -> FOR ID add_var FROM exp init_var TO exp push_cycle post_cycle create_pending_goto','for',11,'p_for','parser.py',457),
  ('add_var -> <empty>','add_var',0,'p_add_var','parser.py',460),
  ('init_var -> <empty>','init_var',0,'p_init_var','parser.py',466),
  ('while -> WHILE push_cycle cond push_gotoF post_cycle fill_goto create_pending_goto','while',7,'p_while','parser.py',471),
  ('push_cycle -> <empty>','push_cycle',0,'p_push_cycle','parser.py',474),
  ('create_pending_goto -> <empty>','create_pending_goto',0,'p_create_pending_goto','parser.py',478),
  ('post_cycle -> COLON optional_eol block END','post_cycle',4,'p_post_cycle','parser.py',483),
  ('BOOL_CONSTANT -> TRUE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',486),
  ('BOOL_CONSTANT -> FALSE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',487),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',490),
]
