
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'ADBBD0F6228D584C81E09E2AC9876DF1'
    
_lr_action_items = {'RETURN':([8,23,24,25,28,35,36,37,39,51,66,71,72,73,74,75,76,78,98,160,184,185,208,209,],[-127,-6,-5,-7,-127,-8,-10,-9,-15,-127,-57,-55,-26,-24,-25,-54,-52,-53,-56,-127,204,-127,216,204,]),'LESS':([33,43,63,65,79,81,83,84,85,86,87,89,90,91,92,93,94,112,113,115,116,124,131,133,136,139,144,145,170,176,193,194,195,196,197,198,199,],[-108,-127,-117,-119,-107,-125,-100,-105,-108,-104,-90,-84,-126,-106,-98,-73,-103,-99,-127,-127,147,-118,-27,-30,-89,-95,-83,-87,-29,-102,-92,-91,-93,-94,-97,-86,-85,]),'READ':([8,23,24,25,28,34,35,36,37,39,51,66,71,75,76,78,98,111,134,160,182,184,185,203,209,213,223,],[-127,-6,-5,-7,-127,45,-8,-10,-9,-15,45,-57,-55,-54,-52,-53,-56,-127,45,-127,-127,45,-127,45,45,-127,45,]),'VOID':([7,],[20,]),'RIGHT_BRACKET':([33,43,63,65,79,81,83,84,85,86,87,89,90,91,92,94,100,112,113,115,124,131,133,136,139,144,145,170,176,193,194,195,196,197,198,199,],[-108,-127,-117,-119,-107,-125,-100,-105,-108,-104,-90,-84,-126,-106,-98,-103,124,-99,-127,-127,-118,-27,-30,-89,-95,-83,-87,-29,-102,-92,-91,-93,-94,-97,-86,-85,]),'EOL':([13,28,31,32,33,41,42,43,44,49,50,52,53,55,58,60,62,63,65,79,81,83,84,85,86,87,89,90,91,92,93,94,95,97,101,108,111,112,113,115,116,117,120,124,125,126,128,131,133,136,139,144,145,151,153,155,158,161,163,164,165,170,176,182,183,193,194,195,196,197,198,199,200,201,202,211,212,213,215,216,218,224,227,228,231,232,235,236,237,240,],[28,28,28,-127,-108,-19,-17,-127,28,-120,28,28,28,28,-121,28,-18,-117,-119,-107,-125,-100,-105,-108,-104,-90,-84,-126,-106,-98,-73,-103,-67,28,-116,-127,28,-99,-127,-127,-127,-127,28,-118,-65,-65,-115,-27,-30,-89,-95,-83,-87,-72,-75,-66,-70,28,-58,-113,-114,-29,-102,28,-123,-92,-91,-93,-94,-97,-86,-85,-74,-68,-69,-122,-109,28,28,28,-47,-124,28,28,-47,-47,28,28,-47,28,]),'EQUALS_EQUALS':([33,43,63,65,79,81,83,84,85,86,87,89,90,91,92,93,94,112,113,115,116,124,131,133,136,139,144,145,170,176,193,194,195,196,197,198,199,],[-108,-127,-117,-119,-107,-125,-100,-105,-108,-104,-90,-84,-126,-106,-98,-73,-103,-99,-127,-127,150,-118,-27,-30,-89,-95,-83,-87,-29,-102,-92,-91,-93,-94,-97,-86,-85,]),'WHILE':([8,23,24,25,28,34,35,36,37,39,51,66,71,75,76,78,98,111,134,160,182,184,185,203,209,213,223,],[-127,-6,-5,-7,-127,57,-8,-10,-9,-15,57,-57,-55,-54,-52,-53,-56,-127,57,-127,-127,57,-127,57,57,-127,57,]),'PRINT':([8,23,24,25,28,34,35,36,37,39,51,66,71,75,76,78,98,111,134,160,182,184,185,203,209,213,223,],[-127,-6,-5,-7,-127,47,-8,-10,-9,-15,47,-57,-55,-54,-52,-53,-56,-127,47,-127,-127,47,-127,47,47,-127,47,]),'GREATER_EQUALS':([33,43,63,65,79,81,83,84,85,86,87,89,90,91,92,93,94,112,113,115,116,124,131,133,136,139,144,145,170,176,193,194,195,196,197,198,199,],[-108,-127,-117,-119,-107,-125,-100,-105,-108,-104,-90,-84,-126,-106,-98,-73,-103,-99,-127,-127,152,-118,-27,-30,-89,-95,-83,-87,-29,-102,-92,-91,-93,-94,-97,-86,-85,]),'MINUS':([33,43,47,56,57,63,64,65,69,79,81,83,84,85,86,87,88,89,90,91,92,94,96,102,103,104,105,106,107,109,110,112,113,114,115,124,131,133,135,136,137,138,139,140,142,143,146,147,148,149,150,152,154,156,157,166,168,170,172,173,174,175,176,177,178,179,180,181,193,194,195,196,197,204,216,],[-108,-127,-64,82,-64,-117,82,-119,82,-107,-125,-100,-105,-108,-104,-90,-101,-84,-126,-106,-98,-103,82,-63,-60,-61,-59,82,-62,82,82,-99,-127,82,142,-118,-27,-30,-96,-89,-96,-96,-95,-96,-88,-88,-76,-77,-82,-80,-81,-79,-78,-71,-71,82,82,-29,82,82,82,82,-102,82,82,82,82,82,-92,-91,-93,-94,-97,82,82,]),'DIVIDE':([33,43,63,65,79,81,83,84,85,86,87,90,91,92,94,112,113,124,131,133,170,176,197,],[-108,-127,-117,-119,-107,-125,-100,-105,-108,-104,-90,-126,-106,-98,-103,-99,135,-118,-27,-30,-29,-102,-97,]),'MINUS_EQUALS':([33,43,63,65,68,124,],[-108,-127,-117,-119,102,-118,]),'END_MAIN':([28,35,36,37,51,59,66,71,72,73,74,75,76,78,98,],[-127,-8,-10,-9,-127,97,-57,-55,-26,-24,-25,-54,-52,-53,-56,]),'NOT_EQUALS':([33,43,63,65,79,81,83,84,85,86,87,89,90,91,92,93,94,112,113,115,116,124,131,133,136,139,144,145,170,176,193,194,195,196,197,198,199,],[-108,-127,-117,-119,-107,-125,-100,-105,-108,-104,-90,-84,-126,-106,-98,-73,-103,-99,-127,-127,148,-118,-27,-30,-89,-95,-83,-87,-29,-102,-92,-91,-93,-94,-97,-86,-85,]),'DOUBLE_CONSTANT':([47,56,57,64,69,82,88,96,102,103,104,105,106,107,109,110,114,135,137,138,140,142,143,146,147,148,149,150,152,154,156,157,166,168,172,173,174,175,177,178,179,180,181,204,216,],[-64,84,-64,84,84,84,-101,84,-63,-60,-61,-59,84,-62,84,84,84,-96,-96,-96,-96,-88,-88,-76,-77,-82,-80,-81,-79,-78,-71,-71,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'LESS_EQUALS':([33,43,63,65,79,81,83,84,85,86,87,89,90,91,92,93,94,112,113,115,116,124,131,133,136,139,144,145,170,176,193,194,195,196,197,198,199,],[-108,-127,-117,-119,-107,-125,-100,-105,-108,-104,-90,-84,-126,-106,-98,-73,-103,-99,-127,-127,149,-118,-27,-30,-89,-95,-83,-87,-29,-102,-92,-91,-93,-94,-97,-86,-85,]),'PLUS':([33,43,63,65,79,81,83,84,85,86,87,89,90,91,92,94,112,113,115,124,131,133,136,139,170,176,193,194,195,196,197,],[-108,-127,-117,-119,-107,-125,-100,-105,-108,-104,-90,-84,-126,-106,-98,-103,-99,-127,143,-118,-27,-30,-89,-95,-29,-102,-92,-91,-93,-94,-97,]),'TO':([33,43,63,65,79,81,83,84,85,86,87,89,90,91,92,94,112,113,115,124,129,131,133,136,139,144,145,170,176,193,194,195,196,197,198,199,],[-108,-127,-117,-119,-107,-125,-100,-105,-108,-104,-90,-84,-126,-106,-98,-103,-99,-127,-127,-118,166,-27,-30,-89,-95,-83,-87,-29,-102,-92,-91,-93,-94,-97,-86,-85,]),'INT_CONSTANT':([47,56,57,64,69,82,88,96,102,103,104,105,106,107,109,110,114,135,137,138,140,142,143,146,147,148,149,150,152,154,156,157,166,168,172,173,174,175,177,178,179,180,181,204,216,],[-64,86,-64,86,86,86,-101,86,-63,-60,-61,-59,86,-62,86,86,86,-96,-96,-96,-96,-88,-88,-76,-77,-82,-80,-81,-79,-78,-71,-71,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'COLON':([5,10,11,12,20,21,22,33,43,63,65,79,80,81,83,84,85,86,87,89,90,91,92,93,94,95,112,113,115,116,117,118,124,131,133,136,139,144,145,151,153,155,158,159,170,176,187,192,193,194,195,196,197,198,199,200,201,202,],[-13,-11,-12,-14,-36,-35,30,-108,-127,-117,-119,-107,111,-125,-100,-105,-108,-104,-90,-84,-126,-106,-98,-73,-103,-67,-99,-127,-127,-127,-127,-65,-118,-27,-30,-89,-95,-83,-87,-72,-75,-66,-70,182,-29,-102,182,213,-92,-91,-93,-94,-97,-86,-85,-74,-68,-69,]),'COMMA':([32,33,43,63,65,79,81,83,84,85,86,87,89,90,91,92,93,94,95,108,112,113,115,116,117,124,130,131,133,136,139,144,145,151,153,155,158,170,176,186,193,194,195,196,197,198,199,200,201,202,210,],[40,-108,-127,-117,-119,-107,-125,-100,-105,-108,-104,-90,-84,-126,-106,-98,-73,-103,-67,127,-99,-127,-127,-127,-127,-118,168,-27,-30,-89,-95,-83,-87,-72,-75,-66,-70,-29,-102,-49,-92,-91,-93,-94,-97,-86,-85,-74,-68,-69,221,]),'PERCENTAGE':([33,43,63,65,79,81,83,84,85,86,87,90,91,92,94,112,113,124,131,133,170,176,197,],[-108,-127,-117,-119,-107,-125,-100,-105,-108,-104,-90,-126,-106,-98,-103,-99,138,-118,-27,-30,-29,-102,-97,]),'PLUS_EQUALS':([33,43,63,65,68,124,],[-108,-127,-117,-119,107,-118,]),'LEFT_PARENTHESIS':([38,45,47,54,56,57,61,64,69,77,85,88,96,102,103,104,105,106,107,109,110,114,135,137,138,140,142,143,146,147,148,149,150,152,154,156,157,166,168,172,173,174,175,177,178,179,180,181,204,216,],[-37,67,-64,-28,88,-64,99,88,88,110,-28,-101,88,-63,-60,-61,-59,88,-62,88,88,88,-96,-96,-96,-96,-88,-88,-76,-77,-82,-80,-81,-79,-78,-71,-71,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'$end':([2,3,14,19,28,29,35,36,37,97,119,],[0,-4,-2,-3,-127,-1,-8,-10,-9,-127,-23,]),'END':([28,35,36,37,51,66,71,72,73,74,75,76,78,98,171,189,190,191,208,214,225,226,230,233,],[-127,-8,-10,-9,-127,-57,-55,-26,-24,-25,-54,-52,-53,-56,-127,212,-110,-111,218,224,231,232,-112,237,]),'STRING':([0,7,8,27,28,35,36,37,39,99,160,185,221,],[5,5,5,5,-127,-8,-10,-9,-15,5,5,5,5,]),'FOR':([8,23,24,25,28,34,35,36,37,39,51,66,71,75,76,78,98,111,134,160,182,184,185,203,209,213,223,],[-127,-6,-5,-7,-127,48,-8,-10,-9,-15,48,-57,-55,-54,-52,-53,-56,-127,48,-127,-127,48,-127,48,48,-127,48,]),'EQUALS':([33,43,63,65,68,124,],[-108,-127,-117,-119,105,-118,]),'ELSE':([28,35,36,37,51,66,71,72,73,74,75,76,78,98,171,],[-127,-8,-10,-9,-127,-57,-55,-26,-24,-25,-54,-52,-53,-56,192,]),'FUNC':([0,4,6,8,23,24,25,28,35,36,37,39,122,205,206,207,217,219,234,238,239,241,],[7,7,7,-127,-6,-5,-7,-127,-8,-10,-9,-15,-34,-39,-41,-40,-42,-38,-43,-46,-44,-45,]),'FALSE':([47,56,57,64,69,82,88,96,102,103,104,105,106,107,109,110,114,135,137,138,140,142,143,146,147,148,149,150,152,154,156,157,166,168,172,173,174,175,177,178,179,180,181,204,216,],[-64,90,-64,90,90,90,-101,90,-63,-60,-61,-59,90,-62,90,90,90,-96,-96,-96,-96,-88,-88,-76,-77,-82,-80,-81,-79,-78,-71,-71,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'RIGHT_PARENTHESIS':([33,43,63,65,67,79,81,83,84,85,86,87,89,90,91,92,93,94,95,99,110,112,113,115,116,117,121,124,130,131,132,133,136,139,141,144,145,151,153,155,158,167,169,170,176,186,188,193,194,195,196,197,198,199,200,201,202,210,220,222,229,],[-108,-127,-117,-119,101,-107,-125,-100,-105,-108,-104,-90,-84,-126,-106,-98,-73,-103,-67,120,133,-99,-127,-127,-127,-127,161,-118,-127,-27,170,-30,-89,-95,176,-83,-87,-72,-75,-66,-70,-31,-33,-29,-102,-49,-32,-92,-91,-93,-94,-97,-86,-85,-74,-68,-69,-127,-48,-51,-50,]),'TIMES':([33,43,63,65,79,81,83,84,85,86,87,90,91,92,94,112,113,124,131,133,170,176,197,],[-108,-127,-117,-119,-107,-125,-100,-105,-108,-104,-90,-126,-106,-98,-103,-99,137,-118,-27,-30,-29,-102,-97,]),'ID':([5,8,9,10,11,12,23,24,25,26,28,30,34,35,36,37,39,40,46,47,48,51,56,57,64,66,69,71,75,76,78,82,88,96,98,102,103,104,105,106,107,109,110,111,114,123,134,135,137,138,140,142,143,146,147,148,149,150,152,154,156,157,160,162,166,168,172,173,174,175,177,178,179,180,181,182,184,185,203,204,209,213,216,223,],[-13,-127,-16,-11,-12,-14,-6,-5,-7,33,-127,38,54,-8,-10,-9,-15,33,33,-64,33,54,85,-64,85,-57,85,-55,-54,-52,-53,33,-101,85,-56,-63,-60,-61,-59,85,-62,85,85,-127,85,-16,54,-96,-96,-96,-96,-88,-88,-76,-77,-82,-80,-81,-79,-78,-71,-71,-127,33,85,85,85,85,85,85,85,85,85,85,85,-127,54,-127,54,85,54,-127,85,54,]),'TRUE':([47,56,57,64,69,82,88,96,102,103,104,105,106,107,109,110,114,135,137,138,140,142,143,146,147,148,149,150,152,154,156,157,166,168,172,173,174,175,177,178,179,180,181,204,216,],[-64,81,-64,81,81,81,-101,81,-63,-60,-61,-59,81,-62,81,81,81,-96,-96,-96,-96,-88,-88,-76,-77,-82,-80,-81,-79,-78,-71,-71,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'IF':([8,23,24,25,28,34,35,36,37,39,51,66,71,75,76,78,98,111,134,160,182,184,185,203,209,213,223,],[-127,-6,-5,-7,-127,56,-8,-10,-9,-15,56,-57,-55,-54,-52,-53,-56,-127,56,-127,-127,56,-127,56,56,-127,56,]),'AND':([33,43,63,65,79,81,83,84,85,86,87,89,90,91,92,93,94,95,112,113,115,116,117,124,131,133,136,139,144,145,151,153,170,176,193,194,195,196,197,198,199,200,],[-108,-127,-117,-119,-107,-125,-100,-105,-108,-104,-90,-84,-126,-106,-98,-73,-103,-67,-99,-127,-127,-127,156,-118,-27,-30,-89,-95,-83,-87,-72,-75,-29,-102,-92,-91,-93,-94,-97,-86,-85,-74,]),'FROM':([33,43,63,65,70,124,],[-108,-127,-117,-119,109,-118,]),'GREATER':([33,43,63,65,79,81,83,84,85,86,87,89,90,91,92,93,94,112,113,115,116,124,131,133,136,139,144,145,170,176,193,194,195,196,197,198,199,],[-108,-127,-117,-119,-107,-125,-100,-105,-108,-104,-90,-84,-126,-106,-98,-73,-103,-99,-127,-127,154,-118,-27,-30,-89,-95,-83,-87,-29,-102,-92,-91,-93,-94,-97,-86,-85,]),'INT':([0,7,8,27,28,35,36,37,39,99,160,185,221,],[10,10,10,10,-127,-8,-10,-9,-15,10,10,10,10,]),'DOUBLE':([0,7,8,27,28,35,36,37,39,99,160,185,221,],[11,11,11,11,-127,-8,-10,-9,-15,11,11,11,11,]),'DIVIDE_EQUALS':([33,43,63,65,68,124,],[-108,-127,-117,-119,104,-118,]),'BOOL':([0,7,8,27,28,35,36,37,39,99,160,185,221,],[12,12,12,12,-127,-8,-10,-9,-15,12,12,12,12,]),'STRING_CONSTANT':([47,56,57,64,69,82,88,96,102,103,104,105,106,107,109,110,114,127,135,137,138,140,142,143,146,147,148,149,150,152,154,156,157,166,168,172,173,174,175,177,178,179,180,181,204,216,],[-64,91,-64,91,91,91,-101,91,-63,-60,-61,-59,91,-62,91,91,91,165,-96,-96,-96,-96,-88,-88,-76,-77,-82,-80,-81,-79,-78,-71,-71,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'TIMES_EQUALS':([33,43,63,65,68,124,],[-108,-127,-117,-119,103,-118,]),'LEFT_BRACKET':([33,43,85,],[-108,64,-108,]),'MAIN':([0,1,4,6,8,15,16,17,18,23,24,25,28,35,36,37,39,122,205,206,207,217,219,234,238,239,241,],[13,13,-127,13,-127,-20,-21,-22,13,-6,-5,-7,-127,-8,-10,-9,-15,-34,-39,-41,-40,-42,-38,-43,-46,-44,-45,]),'OR':([33,43,63,65,79,81,83,84,85,86,87,89,90,91,92,93,94,95,112,113,115,116,117,124,131,133,136,139,144,145,151,153,170,176,193,194,195,196,197,198,199,200,],[-108,-127,-117,-119,-107,-125,-100,-105,-108,-104,-90,-84,-126,-106,-98,-73,-103,-67,-99,-127,-127,-127,157,-118,-27,-30,-89,-95,-83,-87,-72,-75,-29,-102,-92,-91,-93,-94,-97,-86,-85,-74,]),'MOD':([33,43,63,65,79,81,83,84,85,86,87,90,91,92,94,112,113,124,131,133,170,176,197,],[-108,-127,-117,-119,-107,-125,-100,-105,-108,-104,-90,-126,-106,-98,-103,-99,140,-118,-27,-30,-29,-102,-97,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'optional_eol':([28,97,111,182,213,],[35,119,134,203,223,]),'post_functions':([4,],[15,]),'relational_operator':([116,],[146,]),'call_function':([34,51,56,64,69,96,106,109,110,114,134,166,168,172,173,174,175,177,178,179,180,181,184,203,204,209,216,223,],[44,44,83,83,83,83,83,83,83,83,44,83,83,83,83,83,83,83,83,83,83,83,44,44,83,44,83,44,]),'reset_scope':([218,231,232,237,],[228,235,236,240,]),'BOOL_CONSTANT':([56,64,69,82,96,106,109,110,114,166,168,172,173,174,175,177,178,179,180,181,204,216,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'required_eol':([13,28,31,44,50,52,53,55,60,97,111,120,161,182,213,215,216,227,228,235,236,240,],[27,36,39,66,71,75,76,78,98,36,36,160,185,36,36,225,226,233,234,238,239,241,]),'push_relop':([146,],[179,]),'post_print':([108,],[126,]),'validate_function_call':([54,85,],[77,77,]),'start_evaluating':([34,47,51,57,134,184,203,209,223,],[46,69,46,96,46,46,46,46,46,]),'cond':([56,69,96,106,110,114,168,180,181,204,216,],[80,108,118,125,130,141,130,201,202,215,227,]),'post_function':([99,],[122,]),'post_cycle':([159,187,],[183,211,]),'post_cond':([117,],[155,]),'functions':([0,4,6,],[1,16,18,]),'pop_term':([87,],[113,]),'for':([34,51,134,184,203,209,223,],[49,49,49,49,49,49,49,]),'pop_op_and_or':([95,],[117,]),'arguments':([110,168,],[132,188,]),'pop_exp':([89,],[115,]),'post_variables':([8,160,185,],[24,184,209,]),'read':([34,51,134,184,203,209,223,],[50,50,50,50,50,50,50,]),'program':([0,],[2,]),'condition':([34,51,134,184,203,209,223,],[55,55,55,55,55,55,55,]),'process_variable':([33,85,],[43,43,]),'factor':([56,64,69,96,106,109,110,114,166,168,172,173,174,175,177,178,179,180,181,204,216,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'print':([34,51,134,184,203,209,223,],[52,52,52,52,52,52,52,]),'main':([0,1,6,18,],[3,14,19,29,]),'finish_evaluating':([118,125,126,],[159,163,164,]),'empty':([4,8,28,32,43,51,97,108,111,113,115,116,117,130,160,171,182,185,210,213,],[17,25,37,41,65,72,37,128,37,139,145,153,158,169,25,191,37,25,222,37,]),'assignment_operator':([68,],[106,]),'function':([0,4,6,],[4,4,4,]),'pop_relop':([93,],[116,]),'push_exp':([142,143,],[177,178,]),'statement':([34,51,134,184,203,209,223,],[51,51,51,51,51,51,51,]),'post_condition':([171,],[189,]),'pre_variables':([0,8,27,160,185,],[6,23,34,23,23,]),'assignment':([34,51,134,184,203,209,223,],[53,53,53,53,53,53,53,]),'post_term':([113,],[136,]),'set_type':([9,123,],[26,162,]),'value_return':([184,209,],[206,206,]),'inter_declaration':([26,40,],[31,62,]),'post_identifier':([43,],[63,]),'void_return':([184,209,],[207,207,]),'cycle_declaration':([32,],[42,]),'declaration':([0,8,27,160,185,],[8,8,8,8,8,]),'variable_constant':([56,64,69,82,96,106,109,110,114,166,168,172,173,174,175,177,178,179,180,181,204,216,],[92,92,92,112,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'post_block':([51,],[73,]),'else':([171,],[190,]),'pop_paren':([176,],[197,]),'types':([0,7,8,27,99,160,185,221,],[9,21,9,9,123,9,9,123,]),'term':([56,64,69,96,106,109,110,114,166,168,172,173,174,175,177,178,179,180,181,204,216,],[89,89,89,89,89,89,89,89,89,89,193,194,195,196,89,89,89,89,89,89,89,]),'update_function_parameters':([186,],[210,]),'parameters':([99,221,],[121,229,]),'push_op_and_or':([156,157,],[180,181,]),'post_arguments':([130,],[167,]),'post_void_return':([208,],[217,]),'post_parameters':([210,],[220,]),'push_term':([135,137,138,140,],[172,173,174,175,]),'func_return':([184,209,],[205,219,]),'while':([34,51,134,184,203,209,223,],[58,58,58,58,58,58,58,]),'register_function':([38,],[61,]),'post_expression':([116,],[151,]),'loop':([34,51,134,184,203,209,223,],[60,60,60,60,60,60,60,]),'exp':([56,64,69,96,106,109,110,114,166,168,177,178,179,180,181,204,216,],[93,100,93,93,93,129,93,93,187,93,198,199,200,93,93,93,93,]),'post_exp':([115,],[144,]),'func_types':([7,],[22,]),'identifier':([26,40,46,48,56,64,69,82,96,106,109,110,114,162,166,168,172,173,174,175,177,178,179,180,181,204,216,],[32,32,68,70,94,94,94,94,94,94,94,94,94,186,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'expression':([56,69,96,106,110,114,168,180,181,204,216,],[95,95,95,95,95,95,95,95,95,95,95,]),'post_call_function':([110,],[131,]),'block':([34,51,134,184,203,209,223,],[59,74,171,208,214,208,230,]),'push_paren':([88,],[114,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> pre_variables functions main','program',3,'p_program','parser.py',24),
  ('program -> functions main','program',2,'p_program','parser.py',25),
  ('program -> pre_variables main','program',2,'p_program','parser.py',26),
  ('program -> main','program',1,'p_program','parser.py',27),
  ('pre_variables -> declaration post_variables','pre_variables',2,'p_pre_variables','parser.py',31),
  ('post_variables -> pre_variables','post_variables',1,'p_post_variables','parser.py',34),
  ('post_variables -> empty','post_variables',1,'p_post_variables','parser.py',35),
  ('required_eol -> EOL optional_eol','required_eol',2,'p_required_eol','parser.py',39),
  ('optional_eol -> empty','optional_eol',1,'p_optional_eol','parser.py',42),
  ('optional_eol -> required_eol','optional_eol',1,'p_optional_eol','parser.py',43),
  ('types -> INT','types',1,'p_types','parser.py',47),
  ('types -> DOUBLE','types',1,'p_types','parser.py',48),
  ('types -> STRING','types',1,'p_types','parser.py',49),
  ('types -> BOOL','types',1,'p_types','parser.py',50),
  ('declaration -> types set_type inter_declaration required_eol','declaration',4,'p_declaration','parser.py',54),
  ('set_type -> <empty>','set_type',0,'p_set_type','parser.py',57),
  ('inter_declaration -> identifier cycle_declaration','inter_declaration',2,'p_inter_declaration','parser.py',61),
  ('cycle_declaration -> COMMA inter_declaration','cycle_declaration',2,'p_cycle_declaration','parser.py',64),
  ('cycle_declaration -> empty','cycle_declaration',1,'p_cycle_declaration','parser.py',65),
  ('functions -> function post_functions','functions',2,'p_functions','parser.py',69),
  ('post_functions -> functions','post_functions',1,'p_post_functions','parser.py',73),
  ('post_functions -> empty','post_functions',1,'p_post_functions','parser.py',74),
  ('main -> MAIN required_eol pre_variables block END_MAIN optional_eol','main',6,'p_main','parser.py',78),
  ('block -> statement post_block','block',2,'p_block','parser.py',82),
  ('post_block -> block','post_block',1,'p_post_block','parser.py',85),
  ('post_block -> empty','post_block',1,'p_post_block','parser.py',86),
  ('call_function -> ID validate_function_call LEFT_PARENTHESIS post_call_function','call_function',4,'p_call_function','parser.py',90),
  ('validate_function_call -> <empty>','validate_function_call',0,'p_validate_function_call','parser.py',94),
  ('post_call_function -> arguments RIGHT_PARENTHESIS','post_call_function',2,'p_post_call_function','parser.py',98),
  ('post_call_function -> RIGHT_PARENTHESIS','post_call_function',1,'p_post_call_function','parser.py',99),
  ('arguments -> cond post_arguments','arguments',2,'p_arguments','parser.py',103),
  ('post_arguments -> COMMA arguments','post_arguments',2,'p_post_arguments','parser.py',106),
  ('post_arguments -> empty','post_arguments',1,'p_post_arguments','parser.py',107),
  ('function -> FUNC func_types COLON ID register_function LEFT_PARENTHESIS post_function','function',7,'p_function','parser.py',111),
  ('func_types -> types','func_types',1,'p_func_types','parser.py',116),
  ('func_types -> VOID','func_types',1,'p_func_types','parser.py',117),
  ('register_function -> <empty>','register_function',0,'p_register_function','parser.py',120),
  ('post_function -> parameters RIGHT_PARENTHESIS required_eol post_variables func_return','post_function',5,'p_post_function','parser.py',126),
  ('post_function -> RIGHT_PARENTHESIS required_eol post_variables func_return','post_function',4,'p_post_function','parser.py',127),
  ('func_return -> void_return','func_return',1,'p_func_return','parser.py',130),
  ('func_return -> value_return','func_return',1,'p_func_return','parser.py',131),
  ('void_return -> block post_void_return','void_return',2,'p_void_return','parser.py',134),
  ('post_void_return -> END reset_scope required_eol','post_void_return',3,'p_post_void_return','parser.py',137),
  ('post_void_return -> RETURN required_eol END reset_scope required_eol','post_void_return',5,'p_post_void_return','parser.py',138),
  ('value_return -> block RETURN cond required_eol END reset_scope required_eol','value_return',7,'p_value_return','parser.py',141),
  ('value_return -> RETURN cond required_eol END reset_scope required_eol','value_return',6,'p_value_return','parser.py',142),
  ('reset_scope -> <empty>','reset_scope',0,'p_reset_scope','parser.py',145),
  ('parameters -> types set_type identifier update_function_parameters post_parameters','parameters',5,'p_parameters','parser.py',164),
  ('update_function_parameters -> <empty>','update_function_parameters',0,'p_update_function_parameters','parser.py',168),
  ('post_parameters -> COMMA parameters','post_parameters',2,'p_post_parameters','parser.py',174),
  ('post_parameters -> empty','post_parameters',1,'p_post_parameters','parser.py',175),
  ('statement -> assignment required_eol','statement',2,'p_statement','parser.py',179),
  ('statement -> condition required_eol','statement',2,'p_statement','parser.py',180),
  ('statement -> print required_eol','statement',2,'p_statement','parser.py',181),
  ('statement -> read required_eol','statement',2,'p_statement','parser.py',182),
  ('statement -> loop required_eol','statement',2,'p_statement','parser.py',183),
  ('statement -> call_function required_eol','statement',2,'p_statement','parser.py',184),
  ('assignment -> start_evaluating identifier assignment_operator cond finish_evaluating','assignment',5,'p_assignment','parser.py',189),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',193),
  ('assignment_operator -> TIMES_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',194),
  ('assignment_operator -> DIVIDE_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',195),
  ('assignment_operator -> PLUS_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',196),
  ('assignment_operator -> MINUS_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',197),
  ('start_evaluating -> <empty>','start_evaluating',0,'p_start_evaluating','parser.py',200),
  ('finish_evaluating -> <empty>','finish_evaluating',0,'p_finish_evaluating','parser.py',204),
  ('cond -> expression pop_op_and_or post_cond','cond',3,'p_cond','parser.py',209),
  ('pop_op_and_or -> <empty>','pop_op_and_or',0,'p_pop_op_and_or','parser.py',212),
  ('post_cond -> AND push_op_and_or cond','post_cond',3,'p_post_cond','parser.py',217),
  ('post_cond -> OR push_op_and_or cond','post_cond',3,'p_post_cond','parser.py',218),
  ('post_cond -> empty','post_cond',1,'p_post_cond','parser.py',219),
  ('push_op_and_or -> <empty>','push_op_and_or',0,'p_push_op_and_or','parser.py',222),
  ('expression -> exp pop_relop post_expression','expression',3,'p_expression','parser.py',227),
  ('pop_relop -> <empty>','pop_relop',0,'p_pop_relop','parser.py',230),
  ('post_expression -> relational_operator push_relop exp','post_expression',3,'p_post_expression','parser.py',236),
  ('post_expression -> empty','post_expression',1,'p_post_expression','parser.py',237),
  ('push_relop -> <empty>','push_relop',0,'p_push_relop','parser.py',240),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',245),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',246),
  ('relational_operator -> GREATER_EQUALS','relational_operator',1,'p_relational_operator','parser.py',247),
  ('relational_operator -> LESS_EQUALS','relational_operator',1,'p_relational_operator','parser.py',248),
  ('relational_operator -> EQUALS_EQUALS','relational_operator',1,'p_relational_operator','parser.py',249),
  ('relational_operator -> NOT_EQUALS','relational_operator',1,'p_relational_operator','parser.py',250),
  ('exp -> term pop_exp post_exp','exp',3,'p_exp','parser.py',254),
  ('pop_exp -> <empty>','pop_exp',0,'p_pop_exp','parser.py',257),
  ('post_exp -> PLUS push_exp exp','post_exp',3,'p_post_exp','parser.py',262),
  ('post_exp -> MINUS push_exp exp','post_exp',3,'p_post_exp','parser.py',263),
  ('post_exp -> empty','post_exp',1,'p_post_exp','parser.py',264),
  ('push_exp -> <empty>','push_exp',0,'p_push_exp','parser.py',267),
  ('term -> factor pop_term post_term','term',3,'p_term','parser.py',272),
  ('pop_term -> <empty>','pop_term',0,'p_pop_term','parser.py',275),
  ('post_term -> TIMES push_term term','post_term',3,'p_post_term','parser.py',281),
  ('post_term -> DIVIDE push_term term','post_term',3,'p_post_term','parser.py',282),
  ('post_term -> PERCENTAGE push_term term','post_term',3,'p_post_term','parser.py',283),
  ('post_term -> MOD push_term term','post_term',3,'p_post_term','parser.py',284),
  ('post_term -> empty','post_term',1,'p_post_term','parser.py',285),
  ('push_term -> <empty>','push_term',0,'p_push_term','parser.py',288),
  ('factor -> LEFT_PARENTHESIS push_paren cond RIGHT_PARENTHESIS pop_paren','factor',5,'p_factor','parser.py',293),
  ('factor -> variable_constant','factor',1,'p_factor','parser.py',294),
  ('factor -> MINUS variable_constant','factor',2,'p_factor','parser.py',295),
  ('factor -> call_function','factor',1,'p_factor','parser.py',296),
  ('push_paren -> <empty>','push_paren',0,'p_push_paren','parser.py',299),
  ('pop_paren -> <empty>','pop_paren',0,'p_pop_paren','parser.py',303),
  ('variable_constant -> identifier','variable_constant',1,'p_variable_constant','parser.py',308),
  ('variable_constant -> INT_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',309),
  ('variable_constant -> DOUBLE_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',310),
  ('variable_constant -> STRING_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',311),
  ('variable_constant -> BOOL_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',312),
  ('process_variable -> <empty>','process_variable',0,'p_process_variable','parser.py',315),
  ('condition -> IF cond COLON optional_eol block post_condition END','condition',7,'p_condition','parser.py',324),
  ('post_condition -> else','post_condition',1,'p_post_condition','parser.py',328),
  ('post_condition -> empty','post_condition',1,'p_post_condition','parser.py',329),
  ('else -> ELSE COLON optional_eol block','else',4,'p_else','parser.py',333),
  ('print -> PRINT start_evaluating cond post_print finish_evaluating','print',5,'p_print','parser.py',337),
  ('post_print -> COMMA STRING_CONSTANT','post_print',2,'p_post_print','parser.py',340),
  ('post_print -> empty','post_print',1,'p_post_print','parser.py',341),
  ('read -> READ LEFT_PARENTHESIS RIGHT_PARENTHESIS','read',3,'p_read','parser.py',345),
  ('identifier -> ID process_variable post_identifier','identifier',3,'p_identifier','parser.py',349),
  ('post_identifier -> LEFT_BRACKET exp RIGHT_BRACKET','post_identifier',3,'p_post_identifier','parser.py',352),
  ('post_identifier -> empty','post_identifier',1,'p_post_identifier','parser.py',353),
  ('loop -> for','loop',1,'p_loop','parser.py',357),
  ('loop -> while','loop',1,'p_loop','parser.py',358),
  ('for -> FOR identifier FROM exp TO exp post_cycle','for',7,'p_for','parser.py',362),
  ('while -> WHILE start_evaluating cond finish_evaluating post_cycle','while',5,'p_while','parser.py',366),
  ('post_cycle -> COLON optional_eol block END','post_cycle',4,'p_post_cycle','parser.py',370),
  ('BOOL_CONSTANT -> TRUE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',373),
  ('BOOL_CONSTANT -> FALSE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',374),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',377),
]
