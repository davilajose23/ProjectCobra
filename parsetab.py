
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '69154E670B3642E604FC9043D6F07DF8'
    
_lr_action_items = {'RETURN':([21,37,38,39,65,109,114,115,116,117,118,119,120,123,125,157,162,],[-106,-6,-8,-7,-106,-44,-17,-15,-16,-41,-42,-39,-40,-43,158,158,173,]),'LESS':([9,22,24,40,41,42,44,45,46,48,49,50,51,53,54,57,78,80,83,87,90,91,129,130,131,132,133,135,136,137,138,164,],[-106,-94,-96,-82,-77,-104,-80,-79,-106,-106,-106,-105,-81,-78,-75,97,-76,-68,-73,-64,-67,-95,-70,-69,-71,-72,-74,-18,-20,-65,-66,-19,]),'READ':([21,31,37,38,39,65,109,117,118,119,120,123,125,147,155,157,166,170,195,199,],[-106,60,-6,-8,-7,60,-44,-41,-42,-39,-40,-43,60,-106,-106,60,60,60,-106,60,]),'FOR':([21,31,37,38,39,65,109,117,118,119,120,123,125,147,155,157,166,170,195,199,],[-106,63,-6,-8,-7,63,-44,-41,-42,-39,-40,-43,63,-106,-106,63,63,63,-106,63,]),'RIGHT_BRACKET':([9,22,24,40,41,42,44,45,46,48,49,50,51,52,53,54,55,57,58,78,80,83,87,90,91,93,94,101,103,105,108,129,130,131,132,133,135,136,137,138,139,141,143,144,145,164,165,],[-106,-94,-96,-82,-77,-104,-80,-79,-106,-106,-106,-105,-81,91,-78,-75,92,-106,-106,-76,-68,-73,-64,-67,-95,-106,142,-55,-57,-51,-54,-70,-69,-71,-72,-74,-18,-20,-65,-66,-21,-23,-56,-52,-53,-19,-22,]),'EOL':([6,8,9,11,12,21,22,24,40,41,42,44,45,46,48,49,50,51,53,54,56,57,58,59,64,66,67,68,69,71,73,76,78,80,83,87,90,91,92,95,101,103,105,108,112,122,124,129,130,131,132,133,135,136,137,138,142,143,144,145,146,147,148,149,151,153,155,164,167,172,173,175,178,182,184,190,191,193,194,195,198,],[-37,21,-106,-38,31,21,-94,-96,-82,-77,-104,-80,-79,-106,-106,-106,-105,-81,-78,-75,-45,-106,-106,21,-97,21,21,21,21,-98,21,21,-76,-68,-73,-64,-67,-95,-93,-91,-55,-57,-51,-54,-106,21,21,-70,-69,-71,-72,-74,-18,-20,-65,-66,-92,-56,-52,-53,-90,21,-102,-87,-89,-99,21,-19,-88,21,21,21,-100,21,-103,21,21,-101,-83,21,21,]),'EQUALS_EQUALS':([9,22,24,40,41,42,44,45,46,48,49,50,51,53,54,57,78,80,83,87,90,91,129,130,131,132,133,135,136,137,138,164,],[-106,-94,-96,-82,-77,-104,-80,-79,-106,-106,-106,-105,-81,-78,-75,100,-76,-68,-73,-64,-67,-95,-70,-69,-71,-72,-74,-18,-20,-65,-66,-19,]),'WHILE':([21,31,37,38,39,65,109,117,118,119,120,123,125,147,155,157,166,170,195,199,],[-106,61,-6,-8,-7,61,-44,-41,-42,-39,-40,-43,61,-106,-106,61,61,61,-106,61,]),'PRINT':([21,31,37,38,39,65,109,117,118,119,120,123,125,147,155,157,166,170,195,199,],[-106,62,-6,-8,-7,62,-44,-41,-42,-39,-40,-43,62,-106,-106,62,62,62,-106,62,]),'GREATER_EQUALS':([9,22,24,40,41,42,44,45,46,48,49,50,51,53,54,57,78,80,83,87,90,91,129,130,131,132,133,135,136,137,138,164,],[-106,-94,-96,-82,-77,-104,-80,-79,-106,-106,-106,-105,-81,-78,-75,102,-76,-68,-73,-64,-67,-95,-70,-69,-71,-72,-74,-18,-20,-65,-66,-19,]),'MINUS':([9,22,23,24,25,26,27,28,29,30,40,41,42,44,45,46,47,48,49,50,51,53,54,55,61,62,70,78,79,80,81,82,83,84,86,88,89,91,96,97,98,99,100,102,104,106,107,129,130,131,132,133,135,136,140,152,158,164,173,177,],[-106,-94,43,-96,-50,-47,-48,-46,43,-49,-82,-77,-104,-80,-79,-106,43,-106,89,-105,-81,-78,-75,43,43,43,43,-76,43,-68,43,43,-73,43,43,43,43,-95,-59,-58,-63,-61,-62,-60,43,43,43,-70,-69,-71,-72,-74,-18,-20,43,43,43,-19,43,43,]),'MINUS_EQUALS':([9,10,22,24,48,91,],[-106,25,-94,-96,-106,-95,]),'END_MAIN':([21,37,38,39,65,72,109,114,115,116,117,118,119,120,123,],[-106,-6,-8,-7,-106,122,-44,-17,-15,-16,-41,-42,-39,-40,-43,]),'NOT_EQUALS':([9,22,24,40,41,42,44,45,46,48,49,50,51,53,54,57,78,80,83,87,90,91,129,130,131,132,133,135,136,137,138,164,],[-106,-94,-96,-82,-77,-104,-80,-79,-106,-106,-106,-105,-81,-78,-75,98,-76,-68,-73,-64,-67,-95,-70,-69,-71,-72,-74,-18,-20,-65,-66,-19,]),'DOUBLE_CONSTANT':([23,25,26,27,28,29,30,43,47,55,61,62,70,79,81,82,84,86,88,89,96,97,98,99,100,102,104,106,107,140,152,158,173,177,],[44,-50,-47,-48,-46,44,-49,44,44,44,44,44,44,44,44,44,44,44,44,44,-59,-58,-63,-61,-62,-60,44,44,44,44,44,44,44,44,]),'LESS_EQUALS':([9,22,24,40,41,42,44,45,46,48,49,50,51,53,54,57,78,80,83,87,90,91,129,130,131,132,133,135,136,137,138,164,],[-106,-94,-96,-82,-77,-104,-80,-79,-106,-106,-106,-105,-81,-78,-75,99,-76,-68,-73,-64,-67,-95,-70,-69,-71,-72,-74,-18,-20,-65,-66,-19,]),'TO':([9,22,24,40,41,42,44,45,46,48,49,50,51,53,54,78,80,83,87,90,91,129,130,131,132,133,135,136,137,138,164,168,],[-106,-94,-96,-82,-77,-104,-80,-79,-106,-106,-106,-105,-81,-78,-75,-76,-68,-73,-64,-67,-95,-70,-69,-71,-72,-74,-18,-20,-65,-66,-19,177,]),'INT_CONSTANT':([23,25,26,27,28,29,30,43,47,55,61,62,70,79,81,82,84,86,88,89,96,97,98,99,100,102,104,106,107,140,152,158,173,177,],[45,-50,-47,-48,-46,45,-49,45,45,45,45,45,45,45,45,45,45,45,45,45,-59,-58,-63,-61,-62,-60,45,45,45,45,45,45,45,45,]),'COLON':([9,22,24,40,41,42,44,45,46,48,49,50,51,53,54,57,58,78,80,83,87,90,91,101,103,105,108,111,121,129,130,131,132,133,135,136,137,138,143,144,145,164,169,185,189,],[-106,-94,-96,-82,-77,-104,-80,-79,-106,-106,-106,-105,-81,-78,-75,-106,-106,-76,-68,-73,-64,-67,-95,-55,-57,-51,-54,147,155,-70,-69,-71,-72,-74,-18,-20,-65,-66,-56,-52,-53,-19,147,147,195,]),'PLUS':([9,22,24,40,41,42,44,45,46,48,49,50,51,53,54,78,80,83,91,129,130,131,132,133,135,136,164,],[-106,-94,-96,-82,-77,-104,-80,-79,-106,-106,88,-105,-81,-78,-75,-76,-68,-73,-95,-70,-69,-71,-72,-74,-18,-20,-19,]),'PERCENTAGE':([9,22,24,40,41,42,44,45,46,48,50,51,53,54,78,91,133,135,136,164,],[-106,-94,-96,-82,-77,-104,-80,-79,82,-106,-105,-81,-78,-75,-76,-95,-74,-18,-20,-19,]),'IF':([21,31,37,38,39,65,109,117,118,119,120,123,125,147,155,157,166,170,195,199,],[-106,70,-6,-8,-7,70,-44,-41,-42,-39,-40,-43,70,-106,-106,70,70,70,-106,70,]),'LEFT_PARENTHESIS':([19,23,25,26,27,28,29,30,47,48,55,60,61,62,70,79,81,82,84,86,88,89,96,97,98,99,100,102,104,106,107,140,152,158,173,177,],[33,47,-50,-47,-48,-46,47,-49,47,86,47,110,47,47,47,47,47,47,47,47,47,47,-59,-58,-63,-61,-62,-60,47,47,47,47,47,47,47,47,]),'$end':([2,3,13,18,21,32,37,38,39,122,156,],[0,-4,-2,-3,-106,-1,-6,-8,-7,-106,-14,]),'END':([21,37,38,39,65,109,114,115,116,117,118,119,120,123,162,176,179,180,181,186,187,188,192,201,],[-106,-6,-8,-7,-106,-44,-17,-15,-16,-41,-42,-39,-40,-43,175,184,-106,190,191,194,-84,-85,198,-86,]),'DIVIDE':([9,22,24,40,41,42,44,45,46,48,50,51,53,54,78,91,133,135,136,164,],[-106,-94,-96,-82,-77,-104,-80,-79,79,-106,-105,-81,-78,-75,-76,-95,-74,-18,-20,-19,]),'TIMES_EQUALS':([9,10,22,24,48,91,],[-106,26,-94,-96,-106,-95,]),'EQUALS':([9,10,22,24,48,91,],[-106,28,-94,-96,-106,-95,]),'TIMES':([9,22,24,40,41,42,44,45,46,48,50,51,53,54,78,91,133,135,136,164,],[-106,-94,-96,-82,-77,-104,-80,-79,81,-106,-105,-81,-78,-75,-76,-95,-74,-18,-20,-19,]),'FUNC':([0,4,5,20,21,34,35,36,37,38,39,75,159,160,161,171,174,183,196,197,200,],[7,7,7,-106,-106,-9,-5,-10,-6,-8,-7,-24,-26,-28,-27,-25,-29,-30,-33,-31,-32,]),'IN':([9,22,24,91,113,],[-106,-94,-96,-95,154,]),'FALSE':([23,25,26,27,28,29,30,43,47,55,61,62,70,79,81,82,84,86,88,89,96,97,98,99,100,102,104,106,107,140,152,158,173,177,],[50,-50,-47,-48,-46,50,-49,50,50,50,50,50,50,50,50,50,50,50,50,50,-59,-58,-63,-61,-62,-60,50,50,50,50,50,50,50,50,]),'RIGHT_PARENTHESIS':([9,22,24,33,40,41,42,44,45,46,48,49,50,51,53,54,57,58,74,77,78,80,83,85,86,87,90,91,93,101,103,105,108,110,126,128,129,130,131,132,133,134,135,136,137,138,139,141,143,144,145,163,164,165,],[-106,-94,-96,76,-82,-77,-104,-80,-79,-106,-106,-106,-105,-81,-78,-75,-106,-106,124,-106,-76,-68,-73,133,136,-64,-67,-95,-106,-55,-57,-51,-54,146,-34,-36,-70,-69,-71,-72,-74,164,-18,-20,-65,-66,-21,-23,-56,-52,-53,-35,-19,-22,]),'ELSE':([21,37,38,39,65,109,114,115,116,117,118,119,120,123,179,],[-106,-6,-8,-7,-106,-44,-17,-15,-16,-41,-42,-39,-40,-43,189,]),'ID':([0,7,20,21,23,25,26,27,28,29,30,31,33,37,38,39,43,47,55,61,62,63,65,70,79,81,82,84,86,88,89,96,97,98,99,100,102,104,106,107,109,117,118,119,120,123,125,127,140,147,152,154,155,157,158,166,170,173,177,195,199,],[9,19,9,-106,48,-50,-47,-48,-46,48,-49,48,9,-6,-8,-7,9,48,48,48,48,9,48,48,48,48,48,48,48,48,48,-59,-58,-63,-61,-62,-60,48,48,48,-44,-41,-42,-39,-40,-43,48,9,48,-106,48,9,-106,48,48,48,48,48,48,-106,48,]),'TRUE':([23,25,26,27,28,29,30,43,47,55,61,62,70,79,81,82,84,86,88,89,96,97,98,99,100,102,104,106,107,140,152,158,173,177,],[42,-50,-47,-48,-46,42,-49,42,42,42,42,42,42,42,42,42,42,42,42,42,-59,-58,-63,-61,-62,-60,42,42,42,42,42,42,42,42,]),'PLUS_EQUALS':([9,10,22,24,48,91,],[-106,30,-94,-96,-106,-95,]),'AND':([9,22,24,40,41,42,44,45,46,48,49,50,51,53,54,57,58,78,80,83,87,90,91,101,103,129,130,131,132,133,135,136,137,138,143,164,],[-106,-94,-96,-82,-77,-104,-80,-79,-106,-106,-106,-105,-81,-78,-75,-106,106,-76,-68,-73,-64,-67,-95,-55,-57,-70,-69,-71,-72,-74,-18,-20,-65,-66,-56,-19,]),'MAIN':([0,1,4,5,14,15,16,17,20,21,34,35,36,37,38,39,75,159,160,161,171,174,183,196,197,200,],[12,12,-106,12,-11,-12,-13,12,-106,-106,-9,-5,-10,-6,-8,-7,-24,-26,-28,-27,-25,-29,-30,-33,-31,-32,]),'FROM':([9,22,24,91,113,],[-106,-94,-96,-95,152,]),'GREATER':([9,22,24,40,41,42,44,45,46,48,49,50,51,53,54,57,78,80,83,87,90,91,129,130,131,132,133,135,136,137,138,164,],[-106,-94,-96,-82,-77,-104,-80,-79,-106,-106,-106,-105,-81,-78,-75,96,-76,-68,-73,-64,-67,-95,-70,-69,-71,-72,-74,-18,-20,-65,-66,-19,]),'DIVIDE_EQUALS':([9,10,22,24,48,91,],[-106,27,-94,-96,-106,-95,]),'STRING_CONSTANT':([23,25,26,27,28,29,30,43,47,55,61,62,70,79,81,82,84,86,88,89,96,97,98,99,100,102,104,106,107,140,150,152,158,173,177,],[51,-50,-47,-48,-46,51,-49,51,51,51,51,51,51,51,51,51,51,51,51,51,-59,-58,-63,-61,-62,-60,51,51,51,51,167,51,51,51,51,]),'LEFT_BRACKET':([9,28,48,],[23,55,23,]),'COMMA':([9,22,24,40,41,42,44,45,46,48,49,50,51,53,54,57,58,77,78,80,83,87,90,91,93,101,103,105,108,112,129,130,131,132,133,135,136,137,138,143,144,145,164,],[-106,-94,-96,-82,-77,-104,-80,-79,-106,-106,-106,-105,-81,-78,-75,-106,-106,127,-76,-68,-73,-64,-67,-95,140,-55,-57,-51,-54,150,-70,-69,-71,-72,-74,-18,-20,-65,-66,-56,-52,-53,-19,]),'OR':([9,22,24,40,41,42,44,45,46,48,49,50,51,53,54,57,58,78,80,83,87,90,91,101,103,129,130,131,132,133,135,136,137,138,143,164,],[-106,-94,-96,-82,-77,-104,-80,-79,-106,-106,-106,-105,-81,-78,-75,-106,107,-76,-68,-73,-64,-67,-95,-55,-57,-70,-69,-71,-72,-74,-18,-20,-65,-66,-56,-19,]),'MOD':([9,22,24,40,41,42,44,45,46,48,50,51,53,54,78,91,133,135,136,164,],[-106,-94,-96,-82,-77,-104,-80,-79,84,-106,-105,-81,-78,-75,-76,-95,-74,-18,-20,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'optional_eol':([21,122,147,155,195,],[37,156,166,170,199,]),'post_functions':([4,],[14,]),'relational_operator':([57,],[104,]),'call_function':([23,29,31,47,55,61,62,65,70,79,81,82,84,86,88,89,104,106,107,125,140,152,157,158,166,170,173,177,199,],[41,41,59,41,41,41,41,59,41,41,41,41,41,41,41,41,41,41,41,59,41,41,59,41,59,59,41,41,59,]),'post_void_return':([162,],[174,]),'BOOL_CONSTANT':([23,29,43,47,55,61,62,70,79,81,82,84,86,88,89,104,106,107,140,152,158,173,177,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'required_eol':([8,21,59,66,67,68,69,73,76,122,124,147,155,172,173,175,182,190,191,195,198,],[20,38,109,117,118,119,120,123,125,38,157,38,38,180,181,183,192,196,197,38,200,]),'post_print':([112,],[149,]),'post_parameters':([77,],[126,]),'cond':([29,47,55,61,62,70,86,106,107,140,158,173,],[56,85,93,111,112,121,93,144,145,93,172,182,]),'loop':([31,65,125,157,166,170,199,],[73,73,73,73,73,73,73,]),'post_function':([33,],[75,]),'post_cycle':([111,169,185,],[148,178,193,]),'post_cond':([58,],[105,]),'functions':([0,4,5,],[1,15,17,]),'call_parameters':([55,86,140,],[94,134,165,]),'post_condition':([179,],[186,]),'for':([31,65,125,157,166,170,199,],[64,64,64,64,64,64,64,]),'post_call_parameters':([93,],[139,]),'post_exp':([49,],[87,]),'post_variables':([20,],[35,]),'read':([31,65,125,157,166,170,199,],[67,67,67,67,67,67,67,]),'program':([0,],[2,]),'statement':([31,65,125,157,166,170,199,],[65,65,65,65,65,65,65,]),'factor':([23,29,47,55,61,62,70,79,81,82,84,86,88,89,104,106,107,140,152,158,173,177,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'print':([31,65,125,157,166,170,199,],[66,66,66,66,66,66,66,]),'main':([0,1,5,17,],[3,13,18,32,]),'empty':([4,9,20,21,46,48,49,57,58,65,77,93,112,122,147,155,179,195,],[16,24,36,39,83,24,90,103,108,114,128,141,151,39,39,39,188,39,]),'function':([0,4,5,],[4,4,4,]),'post_for':([113,],[153,]),'pre_variables':([0,20,],[5,34,]),'assignment':([0,20,31,65,125,157,166,170,199,],[6,6,6,6,6,6,6,6,6,]),'post_term':([46,],[80,]),'else':([179,],[187,]),'value_return':([125,157,],[160,160,]),'post_identifier':([9,48,],[22,22,]),'void_return':([125,157,],[161,161,]),'variable':([0,20,31,65,125,157,166,170,199,],[8,8,68,68,68,68,68,68,68,]),'post_block':([65,],[115,]),'condition':([31,65,125,157,166,170,199,],[69,69,69,69,69,69,69,]),'term':([23,29,47,55,61,62,70,79,81,82,84,86,88,89,104,106,107,140,152,158,173,177,],[49,49,49,49,49,49,49,129,130,131,132,49,49,49,49,49,49,49,49,49,49,49,]),'post_list':([55,],[95,]),'parameters':([33,127,],[74,163,]),'list':([0,20,31,65,125,157,166,170,199,],[11,11,11,11,11,11,11,11,11,]),'func_return':([125,157,],[159,171,]),'while':([31,65,125,157,166,170,199,],[71,71,71,71,71,71,71,]),'block':([31,65,125,157,166,170,199,],[72,116,162,162,176,179,201,]),'post_expression':([57,],[101,]),'assignment_operator':([10,],[29,]),'exp':([23,29,47,55,61,62,70,86,88,89,104,106,107,140,152,158,173,177,],[52,57,57,57,57,57,57,57,137,138,143,57,57,57,168,57,57,185,]),'identifier':([0,20,23,29,31,33,43,47,55,61,62,63,65,70,79,81,82,84,86,88,89,104,106,107,125,127,140,152,154,157,158,166,170,173,177,199,],[10,10,53,53,10,77,53,53,53,53,53,113,10,53,53,53,53,53,53,53,53,53,53,53,10,77,53,53,169,10,53,10,10,53,53,10,]),'expression':([29,47,55,61,62,70,86,106,107,140,158,173,],[58,58,58,58,58,58,58,58,58,58,58,58,]),'post_call_function':([86,],[135,]),'variable_constant':([23,29,43,47,55,61,62,70,79,81,82,84,86,88,89,104,106,107,140,152,158,173,177,],[54,54,78,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> pre_variables functions main','program',3,'p_program','parser.py',19),
  ('program -> functions main','program',2,'p_program','parser.py',20),
  ('program -> pre_variables main','program',2,'p_program','parser.py',21),
  ('program -> main','program',1,'p_program','parser.py',22),
  ('pre_variables -> variable required_eol post_variables','pre_variables',3,'p_pre_variables','parser.py',26),
  ('required_eol -> EOL optional_eol','required_eol',2,'p_required_eol','parser.py',29),
  ('optional_eol -> empty','optional_eol',1,'p_optional_eol','parser.py',32),
  ('optional_eol -> required_eol','optional_eol',1,'p_optional_eol','parser.py',33),
  ('post_variables -> pre_variables','post_variables',1,'p_post_variables','parser.py',36),
  ('post_variables -> empty','post_variables',1,'p_post_variables','parser.py',37),
  ('functions -> function post_functions','functions',2,'p_functions','parser.py',41),
  ('post_functions -> functions','post_functions',1,'p_post_functions','parser.py',45),
  ('post_functions -> empty','post_functions',1,'p_post_functions','parser.py',46),
  ('main -> MAIN EOL block END_MAIN optional_eol','main',5,'p_main','parser.py',50),
  ('block -> statement post_block','block',2,'p_block','parser.py',54),
  ('post_block -> block','post_block',1,'p_post_block','parser.py',57),
  ('post_block -> empty','post_block',1,'p_post_block','parser.py',58),
  ('call_function -> ID LEFT_PARENTHESIS post_call_function','call_function',3,'p_call_function','parser.py',62),
  ('post_call_function -> call_parameters RIGHT_PARENTHESIS','post_call_function',2,'p_post_call_function','parser.py',65),
  ('post_call_function -> RIGHT_PARENTHESIS','post_call_function',1,'p_post_call_function','parser.py',66),
  ('call_parameters -> cond post_call_parameters','call_parameters',2,'p_call_parameters','parser.py',70),
  ('post_call_parameters -> COMMA call_parameters','post_call_parameters',2,'p_post_call_parameters','parser.py',73),
  ('post_call_parameters -> empty','post_call_parameters',1,'p_post_call_parameters','parser.py',74),
  ('function -> FUNC ID LEFT_PARENTHESIS post_function','function',4,'p_function','parser.py',78),
  ('post_function -> parameters RIGHT_PARENTHESIS required_eol func_return','post_function',4,'p_post_function','parser.py',81),
  ('post_function -> RIGHT_PARENTHESIS required_eol func_return','post_function',3,'p_post_function','parser.py',82),
  ('func_return -> void_return','func_return',1,'p_func_return','parser.py',85),
  ('func_return -> value_return','func_return',1,'p_func_return','parser.py',86),
  ('void_return -> block post_void_return','void_return',2,'p_void_return','parser.py',89),
  ('post_void_return -> END required_eol','post_void_return',2,'p_post_void_return','parser.py',92),
  ('post_void_return -> RETURN required_eol END required_eol','post_void_return',4,'p_post_void_return','parser.py',93),
  ('value_return -> block RETURN cond required_eol END required_eol','value_return',6,'p_value_return','parser.py',96),
  ('value_return -> RETURN cond required_eol END required_eol','value_return',5,'p_value_return','parser.py',97),
  ('parameters -> identifier post_parameters','parameters',2,'p_parameters','parser.py',102),
  ('post_parameters -> COMMA parameters','post_parameters',2,'p_post_parameters','parser.py',105),
  ('post_parameters -> empty','post_parameters',1,'p_post_parameters','parser.py',106),
  ('variable -> assignment','variable',1,'p_variable','parser.py',110),
  ('variable -> list','variable',1,'p_variable','parser.py',111),
  ('statement -> variable required_eol','statement',2,'p_statement','parser.py',115),
  ('statement -> condition required_eol','statement',2,'p_statement','parser.py',116),
  ('statement -> print required_eol','statement',2,'p_statement','parser.py',117),
  ('statement -> read required_eol','statement',2,'p_statement','parser.py',118),
  ('statement -> loop required_eol','statement',2,'p_statement','parser.py',119),
  ('statement -> call_function required_eol','statement',2,'p_statement','parser.py',120),
  ('assignment -> identifier assignment_operator cond','assignment',3,'p_assignment','parser.py',125),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',129),
  ('assignment_operator -> TIMES_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',130),
  ('assignment_operator -> DIVIDE_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',131),
  ('assignment_operator -> PLUS_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',132),
  ('assignment_operator -> MINUS_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',133),
  ('cond -> expression post_cond','cond',2,'p_cond','parser.py',137),
  ('post_cond -> AND cond','post_cond',2,'p_post_cond','parser.py',140),
  ('post_cond -> OR cond','post_cond',2,'p_post_cond','parser.py',141),
  ('post_cond -> empty','post_cond',1,'p_post_cond','parser.py',142),
  ('expression -> exp post_expression','expression',2,'p_expression','parser.py',146),
  ('post_expression -> relational_operator exp','post_expression',2,'p_post_expression','parser.py',149),
  ('post_expression -> empty','post_expression',1,'p_post_expression','parser.py',150),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',154),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',155),
  ('relational_operator -> GREATER_EQUALS','relational_operator',1,'p_relational_operator','parser.py',156),
  ('relational_operator -> LESS_EQUALS','relational_operator',1,'p_relational_operator','parser.py',157),
  ('relational_operator -> EQUALS_EQUALS','relational_operator',1,'p_relational_operator','parser.py',158),
  ('relational_operator -> NOT_EQUALS','relational_operator',1,'p_relational_operator','parser.py',159),
  ('exp -> term post_exp','exp',2,'p_exp','parser.py',163),
  ('post_exp -> PLUS exp','post_exp',2,'p_post_exp','parser.py',166),
  ('post_exp -> MINUS exp','post_exp',2,'p_post_exp','parser.py',167),
  ('post_exp -> empty','post_exp',1,'p_post_exp','parser.py',168),
  ('term -> factor post_term','term',2,'p_term','parser.py',172),
  ('post_term -> TIMES term','post_term',2,'p_post_term','parser.py',175),
  ('post_term -> DIVIDE term','post_term',2,'p_post_term','parser.py',176),
  ('post_term -> PERCENTAGE term','post_term',2,'p_post_term','parser.py',177),
  ('post_term -> MOD term','post_term',2,'p_post_term','parser.py',178),
  ('post_term -> empty','post_term',1,'p_post_term','parser.py',179),
  ('factor -> LEFT_PARENTHESIS cond RIGHT_PARENTHESIS','factor',3,'p_factor','parser.py',183),
  ('factor -> variable_constant','factor',1,'p_factor','parser.py',184),
  ('factor -> MINUS variable_constant','factor',2,'p_factor','parser.py',185),
  ('factor -> call_function','factor',1,'p_factor','parser.py',186),
  ('variable_constant -> identifier','variable_constant',1,'p_variable_constant','parser.py',190),
  ('variable_constant -> INT_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',191),
  ('variable_constant -> DOUBLE_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',192),
  ('variable_constant -> STRING_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',193),
  ('variable_constant -> BOOL_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',194),
  ('condition -> IF cond COLON optional_eol block post_condition END','condition',7,'p_condition','parser.py',198),
  ('post_condition -> else','post_condition',1,'p_post_condition','parser.py',202),
  ('post_condition -> empty','post_condition',1,'p_post_condition','parser.py',203),
  ('else -> ELSE COLON optional_eol block','else',4,'p_else','parser.py',207),
  ('print -> PRINT cond post_print','print',3,'p_print','parser.py',211),
  ('post_print -> COMMA STRING_CONSTANT','post_print',2,'p_post_print','parser.py',214),
  ('post_print -> empty','post_print',1,'p_post_print','parser.py',215),
  ('read -> READ LEFT_PARENTHESIS RIGHT_PARENTHESIS','read',3,'p_read','parser.py',219),
  ('list -> identifier EQUALS LEFT_BRACKET post_list','list',4,'p_list','parser.py',223),
  ('post_list -> call_parameters RIGHT_BRACKET','post_list',2,'p_post_list','parser.py',226),
  ('post_list -> RIGHT_BRACKET','post_list',1,'p_post_list','parser.py',227),
  ('identifier -> ID post_identifier','identifier',2,'p_identifier','parser.py',231),
  ('post_identifier -> LEFT_BRACKET exp RIGHT_BRACKET','post_identifier',3,'p_post_identifier','parser.py',234),
  ('post_identifier -> empty','post_identifier',1,'p_post_identifier','parser.py',235),
  ('loop -> for','loop',1,'p_loop','parser.py',239),
  ('loop -> while','loop',1,'p_loop','parser.py',240),
  ('for -> FOR identifier post_for','for',3,'p_for','parser.py',244),
  ('post_for -> IN identifier post_cycle','post_for',3,'p_post_for','parser.py',247),
  ('post_for -> FROM exp TO exp post_cycle','post_for',5,'p_post_for','parser.py',248),
  ('while -> WHILE cond post_cycle','while',3,'p_while','parser.py',252),
  ('post_cycle -> COLON optional_eol block END','post_cycle',4,'p_post_cycle','parser.py',256),
  ('BOOL_CONSTANT -> TRUE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',259),
  ('BOOL_CONSTANT -> FALSE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',260),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',263),
]
