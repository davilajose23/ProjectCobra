
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '000DE5E9BD3F73D6E30E04C710EBAA74'
    
_lr_action_items = {'RETURN':([8,24,25,26,32,38,39,40,41,53,63,69,88,89,90,91,92,93,96,100,125,164,165,201,202,],[-144,-6,-5,-7,-144,-8,-10,-9,-73,-144,-15,-60,-58,-27,-25,-26,-57,-55,-56,-59,-144,197,-144,229,197,]),'LESS':([71,72,74,76,77,78,80,81,82,83,84,86,110,111,112,113,115,116,129,131,133,136,141,142,159,161,172,192,193,204,205,206,207,208,209,210,211,224,],[-116,-109,-142,-117,-113,-99,-114,-93,-143,-115,-82,-107,-117,-108,-144,-144,-144,144,-112,-65,-98,-104,-92,-96,-28,-32,-111,-32,-31,-64,-101,-100,-102,-103,-106,-95,-94,-30,]),'READ':([8,24,25,26,32,37,38,39,40,41,53,63,69,88,92,93,96,100,121,125,162,164,165,194,195,202,226,261,266,271,],[-144,-6,-5,-7,-144,48,-8,-10,-9,-73,48,-15,-60,-58,-57,-55,-56,-59,-119,-144,-144,48,-144,48,-144,48,48,-124,-144,48,]),'VOID':([7,],[21,]),'RIGHT_BRACKET':([71,72,74,76,77,78,80,81,82,83,86,101,110,111,112,113,115,129,131,133,136,141,142,159,161,167,172,192,193,204,205,206,207,208,209,210,211,224,],[-116,-109,-142,-117,-113,-99,-114,-93,-143,-115,-107,124,-117,-108,-144,-144,-144,-112,-65,-98,-104,-92,-96,-28,-32,204,-111,-32,-31,-64,-101,-100,-102,-103,-106,-95,-94,-30,]),'EOL':([9,27,32,33,34,35,42,44,45,47,51,52,54,55,57,60,62,64,66,67,71,72,73,74,76,77,78,80,81,82,83,84,85,86,99,102,106,107,109,110,111,112,113,115,116,117,121,124,126,128,129,131,133,136,141,142,149,150,152,155,159,161,162,172,175,192,193,195,196,204,205,206,207,208,209,210,211,212,213,220,224,227,228,229,231,235,239,242,243,252,253,254,260,261,262,263,264,265,266,269,270,],[-24,32,32,32,-117,-144,-144,-19,-17,32,-133,32,32,32,32,-134,32,-130,-132,-18,-116,-109,-144,-142,-117,-113,-99,-114,-93,-143,-115,-82,-76,-107,32,32,-129,-125,-127,-117,-108,-144,-144,-144,-144,-144,-119,-131,32,-126,-112,-65,-98,-104,-92,-96,-81,-84,-75,-79,-28,-32,32,-111,-83,-32,-31,32,-120,-64,-101,-100,-102,-103,-106,-95,-94,-77,-78,-72,-30,-140,32,32,-50,-61,-138,32,32,-141,-50,-50,-118,-124,32,32,-50,-140,32,32,-135,]),'EQUALS_EQUALS':([71,72,74,76,77,78,80,81,82,83,84,86,110,111,112,113,115,116,129,131,133,136,141,142,159,161,172,192,193,204,205,206,207,208,209,210,211,224,],[-116,-109,-142,-117,-113,-99,-114,-93,-143,-115,-82,-107,-117,-108,-144,-144,-144,148,-112,-65,-98,-104,-92,-96,-28,-32,-111,-32,-31,-64,-101,-100,-102,-103,-106,-95,-94,-30,]),'WHILE':([8,24,25,26,32,37,38,39,40,41,53,63,69,88,92,93,96,100,121,125,162,164,165,194,195,202,226,261,266,271,],[-144,-6,-5,-7,-144,59,-8,-10,-9,-73,59,-15,-60,-58,-57,-55,-56,-59,-119,-144,-144,59,-144,59,-144,59,59,-124,-144,59,]),'COLON':([71,72,74,76,77,78,80,81,82,83,84,85,86,97,110,111,112,113,115,116,117,122,129,131,133,136,141,142,149,150,152,155,159,161,163,172,175,192,193,204,205,206,207,208,209,210,211,212,213,224,247,251,259,],[-116,-109,-142,-117,-113,-99,-114,-93,-143,-115,-82,-76,-107,121,-117,-108,-144,-144,-144,-144,-144,-119,-112,-65,-98,-104,-92,-96,-81,-84,-75,-79,-28,-32,195,-111,-83,-32,-31,-64,-101,-100,-102,-103,-106,-95,-94,-77,-78,-30,-139,261,195,]),'PRINT':([8,24,25,26,32,37,38,39,40,41,53,63,69,88,92,93,96,100,121,125,162,164,165,194,195,202,226,261,266,271,],[-144,-6,-5,-7,-144,49,-8,-10,-9,-73,49,-15,-60,-58,-57,-55,-56,-59,-119,-144,-144,49,-144,49,-144,49,49,-124,-144,49,]),'TRUE':([49,58,59,65,75,79,98,114,120,130,132,134,135,137,139,140,143,144,145,146,147,148,151,153,154,156,168,169,170,171,173,174,176,177,178,179,180,181,182,183,185,186,187,188,189,190,197,215,216,217,218,219,222,229,234,],[74,74,-139,74,74,-110,74,74,74,74,-105,-105,-105,-105,-97,-97,74,-85,-85,-85,-85,-85,-85,-80,-80,74,74,74,74,74,74,74,-86,-88,-91,-89,-90,-87,74,74,-71,-71,-71,-71,-71,74,74,-70,-69,-67,-68,-66,74,74,74,]),'MINUS':([49,58,59,65,71,72,74,76,77,78,79,80,81,82,83,86,98,110,111,112,113,114,115,120,129,130,131,132,133,134,135,136,137,139,140,143,144,145,146,147,148,151,153,154,156,159,161,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,185,186,187,188,189,190,192,193,197,204,205,206,207,208,209,215,216,217,218,219,222,224,229,234,],[75,75,-139,75,-116,-109,-142,-117,-113,-99,-110,-114,-93,-143,-115,-107,75,-117,-108,-144,-144,75,139,75,-112,75,-65,-105,-98,-105,-105,-104,-105,-97,-97,75,-85,-85,-85,-85,-85,-85,-80,-80,75,-28,-32,75,75,75,75,-111,75,75,-86,-88,-91,-89,-90,-87,75,75,-71,-71,-71,-71,-71,75,-32,-31,75,-64,-101,-100,-102,-103,-106,-70,-69,-67,-68,-66,75,-30,75,75,]),'DIVIDE':([71,72,74,76,77,78,80,82,83,86,110,111,112,113,129,131,159,161,172,192,193,204,209,224,],[-116,-109,-142,-117,-113,-99,-114,-143,-115,-107,-117,-108,-144,132,-112,-65,-28,-32,-111,-32,-31,-64,-106,-30,]),'MINUS_EQUALS':([56,94,119,131,157,204,],[-62,-63,-144,-65,185,-64,]),'END_MAIN':([32,38,39,40,53,61,69,88,89,90,91,92,93,96,100,],[-144,-8,-10,-9,-144,99,-60,-58,-27,-25,-26,-57,-55,-56,-59,]),'NOT_EQUALS':([71,72,74,76,77,78,80,81,82,83,84,86,110,111,112,113,115,116,129,131,133,136,141,142,159,161,172,192,193,204,205,206,207,208,209,210,211,224,],[-116,-109,-142,-117,-113,-99,-114,-93,-143,-115,-82,-107,-117,-108,-144,-144,-144,146,-112,-65,-98,-104,-92,-96,-28,-32,-111,-32,-31,-64,-101,-100,-102,-103,-106,-95,-94,-30,]),'DOUBLE_CONSTANT':([49,58,59,65,75,79,98,114,120,130,132,134,135,137,139,140,143,144,145,146,147,148,151,153,154,156,168,169,170,171,173,174,176,177,178,179,180,181,182,183,185,186,187,188,189,190,197,215,216,217,218,219,222,229,234,],[80,80,-139,80,80,-110,80,80,80,80,-105,-105,-105,-105,-97,-97,80,-85,-85,-85,-85,-85,-85,-80,-80,80,80,80,80,80,80,80,-86,-88,-91,-89,-90,-87,80,80,-71,-71,-71,-71,-71,80,80,-70,-69,-67,-68,-66,80,80,80,]),'GREATER_EQUALS':([71,72,74,76,77,78,80,81,82,83,84,86,110,111,112,113,115,116,129,131,133,136,141,142,159,161,172,192,193,204,205,206,207,208,209,210,211,224,],[-116,-109,-142,-117,-113,-99,-114,-93,-143,-115,-82,-107,-117,-108,-144,-144,-144,145,-112,-65,-98,-104,-92,-96,-28,-32,-111,-32,-31,-64,-101,-100,-102,-103,-106,-95,-94,-30,]),'LESS_EQUALS':([71,72,74,76,77,78,80,81,82,83,84,86,110,111,112,113,115,116,129,131,133,136,141,142,159,161,172,192,193,204,205,206,207,208,209,210,211,224,],[-116,-109,-142,-117,-113,-99,-114,-93,-143,-115,-82,-107,-117,-108,-144,-144,-144,147,-112,-65,-98,-104,-92,-96,-28,-32,-111,-32,-31,-64,-101,-100,-102,-103,-106,-95,-94,-30,]),'TO':([71,72,74,76,77,78,80,81,82,83,86,110,111,112,113,115,129,131,133,136,141,142,159,161,172,184,192,193,204,205,206,207,208,209,210,211,214,224,],[-116,-109,-142,-117,-113,-99,-114,-93,-143,-115,-107,-117,-108,-144,-144,-144,-112,-65,-98,-104,-92,-96,-28,-32,-111,-137,-32,-31,-64,-101,-100,-102,-103,-106,-95,-94,234,-30,]),'INT_CONSTANT':([49,58,59,65,75,79,98,114,120,130,132,134,135,137,139,140,143,144,145,146,147,148,151,153,154,156,168,169,170,171,173,174,176,177,178,179,180,181,182,183,185,186,187,188,189,190,197,215,216,217,218,219,222,229,234,],[77,77,-139,77,77,-110,77,77,77,77,-105,-105,-105,-105,-97,-97,77,-85,-85,-85,-85,-85,-85,-80,-80,77,77,77,77,77,77,77,-86,-88,-91,-89,-90,-87,77,77,-71,-71,-71,-71,-71,77,77,-70,-69,-67,-68,-66,77,77,77,]),'COMMA':([34,35,42,64,66,71,72,73,74,76,77,78,80,81,82,83,84,85,86,110,111,112,113,115,116,117,124,129,131,133,136,141,142,149,150,152,155,158,159,161,172,175,191,192,193,203,204,205,206,207,208,209,210,211,212,213,224,233,],[-117,43,-144,-130,-132,-116,-109,108,-142,-117,-113,-99,-114,-93,-143,-115,-82,-76,-107,-117,-108,-144,-144,-144,-144,-144,-131,-112,-65,-98,-104,-92,-96,-81,-84,-75,-79,-34,-28,-32,-111,-83,222,-32,-31,-52,-64,-101,-100,-102,-103,-106,-95,-94,-77,-78,-30,245,]),'PLUS':([71,72,74,76,77,78,80,81,82,83,86,110,111,112,113,115,129,131,133,136,159,161,172,192,193,204,205,206,207,208,209,224,],[-116,-109,-142,-117,-113,-99,-114,-93,-143,-115,-107,-117,-108,-144,-144,140,-112,-65,-98,-104,-28,-32,-111,-32,-31,-64,-101,-100,-102,-103,-106,-30,]),'PERCENTAGE':([71,72,74,76,77,78,80,82,83,86,110,111,112,113,129,131,159,161,172,192,193,204,209,224,],[-116,-109,-142,-117,-113,-99,-114,-143,-115,-107,-117,-108,-144,135,-112,-65,-28,-32,-111,-32,-31,-64,-106,-30,]),'PLUS_EQUALS':([56,94,119,131,157,204,],[-62,-63,-144,-65,186,-64,]),'LEFT_PARENTHESIS':([36,46,48,49,56,58,59,65,76,79,95,98,114,120,130,132,134,135,137,139,140,143,144,145,146,147,148,151,153,154,156,168,169,170,171,173,174,176,177,178,179,180,181,182,183,185,186,187,188,189,190,197,215,216,217,218,219,222,229,234,],[-40,68,70,79,-29,79,-139,79,-29,-110,120,79,79,79,79,-105,-105,-105,-105,-97,-97,79,-85,-85,-85,-85,-85,-85,-80,-80,79,79,79,79,79,79,79,-86,-88,-91,-89,-90,-87,79,79,-71,-71,-71,-71,-71,79,79,-70,-69,-67,-68,-66,79,79,79,]),'$end':([2,3,10,20,29,32,38,39,40,99,123,],[0,-4,-2,-3,-1,-144,-8,-10,-9,-144,-23,]),'END':([32,38,39,40,53,69,88,89,90,91,92,93,96,100,201,225,237,238,240,241,248,249,250,255,273,274,],[-144,-8,-10,-9,-144,-60,-58,-27,-25,-26,-57,-55,-56,-59,231,-120,-144,252,253,254,260,-121,-122,264,-120,-123,]),'STRING':([0,4,7,8,31,32,38,39,40,41,63,68,104,125,165,245,],[-74,11,11,-74,-74,-144,-8,-10,-9,-73,-15,-74,11,-74,-74,-74,]),'FOR':([8,24,25,26,32,37,38,39,40,41,53,63,69,88,92,93,96,100,121,125,162,164,165,194,195,202,226,261,266,271,],[-144,-6,-5,-7,-144,50,-8,-10,-9,-73,50,-15,-60,-58,-57,-55,-56,-59,-119,-144,-144,50,-144,50,-144,50,50,-124,-144,50,]),'EQUALS':([56,94,119,131,157,204,],[-62,-63,-144,-65,189,-64,]),'ELSE':([32,38,39,40,53,69,88,89,90,91,92,93,96,100,225,237,],[-144,-8,-10,-9,-144,-60,-58,-27,-25,-26,-57,-55,-56,-59,-120,251,]),'FUNC':([0,5,6,8,24,25,26,32,38,39,40,41,63,105,198,199,200,230,232,256,267,268,272,],[7,7,7,-144,-6,-5,-7,-144,-8,-10,-9,-73,-15,-37,-42,-44,-43,-45,-41,-46,-49,-47,-48,]),'FROM':([87,118,],[-136,156,]),'RIGHT_PARENTHESIS':([34,42,64,66,68,70,71,72,74,76,77,78,80,81,82,83,84,85,86,103,110,111,112,113,115,116,117,120,124,129,131,133,136,138,141,142,149,150,152,155,158,159,160,161,172,175,191,192,193,203,204,205,206,207,208,209,210,211,212,213,221,223,224,233,236,244,246,257,258,],[-117,-144,-130,-132,102,106,-116,-109,-142,-117,-113,-99,-114,-93,-143,-115,-82,-76,-107,126,-117,-108,-144,-144,-144,-144,-144,161,-131,-112,-65,-98,-104,172,-92,-96,-81,-84,-75,-79,-34,-28,192,-32,-111,-83,-144,-32,-31,-52,-64,-101,-100,-102,-103,-106,-95,-94,-77,-78,-33,-36,-30,-144,-35,-73,-54,-51,-53,]),'TIMES':([71,72,74,76,77,78,80,82,83,86,110,111,112,113,129,131,159,161,172,192,193,204,209,224,],[-116,-109,-142,-117,-113,-99,-114,-143,-115,-107,-117,-108,-144,134,-112,-65,-28,-32,-111,-32,-31,-64,-106,-30,]),'ID':([8,11,12,13,14,15,21,22,23,24,25,26,28,30,32,37,38,39,40,41,43,49,50,53,58,59,63,65,69,75,79,88,92,93,96,98,100,114,120,121,125,127,130,132,134,135,137,139,140,143,144,145,146,147,148,151,153,154,156,162,164,165,166,168,169,170,171,173,174,176,177,178,179,180,181,182,183,185,186,187,188,189,190,194,195,197,202,215,216,217,218,219,222,226,229,234,261,266,271,],[-144,-13,-11,-12,-14,-16,-39,-38,-16,-6,-5,-7,34,36,-144,56,-8,-10,-9,-73,34,76,87,56,76,-139,-15,76,-60,110,-110,-58,-57,-55,-56,76,-59,76,76,-119,-144,-16,76,-105,-105,-105,-105,-97,-97,76,-85,-85,-85,-85,-85,-85,-80,-80,76,-144,56,-144,34,76,76,76,76,76,76,-86,-88,-91,-89,-90,-87,76,76,-71,-71,-71,-71,-71,76,56,-144,76,56,-70,-69,-67,-68,-66,76,56,76,76,-124,-144,56,]),'IF':([8,24,25,26,32,37,38,39,40,41,53,63,69,88,92,93,96,100,121,125,162,164,165,194,195,202,226,261,266,271,],[-144,-6,-5,-7,-144,58,-8,-10,-9,-73,58,-15,-60,-58,-57,-55,-56,-59,-119,-144,-144,58,-144,58,-144,58,58,-124,-144,58,]),'AND':([71,72,74,76,77,78,80,81,82,83,84,85,86,110,111,112,113,115,116,117,129,131,133,136,141,142,149,150,159,161,172,175,192,193,204,205,206,207,208,209,210,211,224,],[-116,-109,-142,-117,-113,-99,-114,-93,-143,-115,-82,-76,-107,-117,-108,-144,-144,-144,-144,153,-112,-65,-98,-104,-92,-96,-81,-84,-28,-32,-111,-83,-32,-31,-64,-101,-100,-102,-103,-106,-95,-94,-30,]),'FALSE':([49,58,59,65,75,79,98,114,120,130,132,134,135,137,139,140,143,144,145,146,147,148,151,153,154,156,168,169,170,171,173,174,176,177,178,179,180,181,182,183,185,186,187,188,189,190,197,215,216,217,218,219,222,229,234,],[82,82,-139,82,82,-110,82,82,82,82,-105,-105,-105,-105,-97,-97,82,-85,-85,-85,-85,-85,-85,-80,-80,82,82,82,82,82,82,82,-86,-88,-91,-89,-90,-87,82,82,-71,-71,-71,-71,-71,82,82,-70,-69,-67,-68,-66,82,82,82,]),'GREATER':([71,72,74,76,77,78,80,81,82,83,84,86,110,111,112,113,115,116,129,131,133,136,141,142,159,161,172,192,193,204,205,206,207,208,209,210,211,224,],[-116,-109,-142,-117,-113,-99,-114,-93,-143,-115,-82,-107,-117,-108,-144,-144,-144,151,-112,-65,-98,-104,-92,-96,-28,-32,-111,-32,-31,-64,-101,-100,-102,-103,-106,-95,-94,-30,]),'INT':([0,4,7,8,31,32,38,39,40,41,63,68,104,125,165,245,],[-74,12,12,-74,-74,-144,-8,-10,-9,-73,-15,-74,12,-74,-74,-74,]),'DOUBLE':([0,4,7,8,31,32,38,39,40,41,63,68,104,125,165,245,],[-74,13,13,-74,-74,-144,-8,-10,-9,-73,-15,-74,13,-74,-74,-74,]),'DIVIDE_EQUALS':([56,94,119,131,157,204,],[-62,-63,-144,-65,188,-64,]),'BOOL':([0,4,7,8,31,32,38,39,40,41,63,68,104,125,165,245,],[-74,14,14,-74,-74,-144,-8,-10,-9,-73,-15,-74,14,-74,-74,-74,]),'STRING_CONSTANT':([49,58,59,65,75,79,98,108,114,120,130,132,134,135,137,139,140,143,144,145,146,147,148,151,153,154,156,168,169,170,171,173,174,176,177,178,179,180,181,182,183,185,186,187,188,189,190,197,215,216,217,218,219,222,229,234,],[83,83,-139,83,83,-110,83,128,83,83,83,-105,-105,-105,-105,-97,-97,83,-85,-85,-85,-85,-85,-85,-80,-80,83,83,83,83,83,83,83,-86,-88,-91,-89,-90,-87,83,83,-71,-71,-71,-71,-71,83,83,-70,-69,-67,-68,-66,83,83,83,]),'TIMES_EQUALS':([56,94,119,131,157,204,],[-62,-63,-144,-65,187,-64,]),'LEFT_BRACKET':([34,42,56,76,94,110,112,119,],[-117,65,-62,-117,-63,-117,130,130,]),'MAIN':([0,1,5,6,8,16,17,18,19,24,25,26,32,38,39,40,41,63,105,198,199,200,230,232,256,267,268,272,],[9,9,-144,9,-144,-20,-21,-22,9,-6,-5,-7,-144,-8,-10,-9,-73,-15,-37,-42,-44,-43,-45,-41,-46,-49,-47,-48,]),'OR':([71,72,74,76,77,78,80,81,82,83,84,85,86,110,111,112,113,115,116,117,129,131,133,136,141,142,149,150,159,161,172,175,192,193,204,205,206,207,208,209,210,211,224,],[-116,-109,-142,-117,-113,-99,-114,-93,-143,-115,-82,-76,-107,-117,-108,-144,-144,-144,-144,154,-112,-65,-98,-104,-92,-96,-81,-84,-28,-32,-111,-83,-32,-31,-64,-101,-100,-102,-103,-106,-95,-94,-30,]),'MOD':([71,72,74,76,77,78,80,82,83,86,110,111,112,113,129,131,159,161,172,192,193,204,209,224,],[-116,-109,-142,-117,-113,-99,-114,-143,-115,-107,-117,-108,-144,137,-112,-65,-28,-32,-111,-32,-31,-64,-106,-30,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'relational_operator':([116,],[143,]),'post_function':([68,],[105,]),'push_assignment':([185,186,187,188,189,],[215,216,217,218,219,]),'parameters':([68,245,],[103,258,]),'increase_call_arguments':([158,],[191,]),'post_variables':([8,125,165,],[25,164,202,]),'program':([0,],[2,]),'factor':([49,58,65,98,114,120,130,143,156,168,169,170,171,173,174,182,183,190,197,222,229,234,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'main':([0,1,6,19,],[3,10,20,29,]),'finish_evaluating':([0,8,31,68,125,165,245,],[4,4,4,104,4,4,104,]),'read':([37,53,164,194,202,226,271,],[52,52,52,52,52,52,52,]),'post_term':([113,],[133,]),'condition':([37,53,164,194,202,226,271,],[57,57,57,57,57,57,57,]),'term':([49,58,65,98,114,120,130,143,156,168,169,170,171,173,174,182,183,190,197,222,229,234,],[81,81,81,81,81,81,81,81,81,205,206,207,208,81,81,81,81,81,81,81,81,81,]),'post_void_return':([201,],[230,]),'push_term':([132,134,135,137,],[168,169,170,171,]),'register_function':([36,],[46,]),'identifier':([28,43,166,],[35,35,203,]),'push_paren':([79,],[114,]),'BOOL_CONSTANT':([49,58,65,75,98,114,120,130,143,156,168,169,170,171,173,174,182,183,190,197,222,229,234,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'call_function':([37,49,53,58,65,98,114,120,130,143,156,164,168,169,170,171,173,174,182,183,190,194,197,202,222,226,229,234,271,],[47,72,47,72,72,72,72,72,72,72,72,47,72,72,72,72,72,72,72,72,72,47,72,47,72,47,72,72,47,]),'reset_scope':([231,253,254,264,],[243,262,263,269,]),'push_relop':([144,145,146,147,148,151,],[176,177,178,179,180,181,]),'post_parameters':([233,],[244,]),'start_evaluating':([41,244,],[63,257,]),'post_print':([73,],[107,]),'fill_goto':([196,225,273,],[227,237,274,]),'for':([37,53,164,194,202,226,271,],[51,51,51,51,51,51,51,]),'post_exp':([115,],[141,]),'print':([37,53,164,194,202,226,271,],[54,54,54,54,54,54,54,]),'push_exp':([139,140,],[173,174,]),'set_type':([15,23,127,],[28,30,166,]),'inter_declaration':([28,43,],[33,67,]),'void_return':([164,202,],[200,200,]),'pop_paren':([172,],[209,]),'push_gotoF':([121,122,],[162,163,]),'assignment_operator':([157,],[190,]),'expression':([49,58,98,114,120,143,182,183,190,197,222,229,],[85,85,85,85,85,175,85,85,85,85,85,85,]),'pop_exp':([81,],[115,]),'block':([37,53,164,194,202,226,271,],[61,91,201,225,201,238,273,]),'optional_eol':([32,99,162,195,266,],[38,123,194,226,271,]),'post_functions':([5,],[16,]),'pop_term':([78,],[113,]),'required_eol':([27,32,33,47,52,54,55,57,62,99,102,126,162,195,228,229,242,243,262,263,266,269,],[31,39,41,69,88,92,93,96,100,39,125,165,39,39,240,241,255,256,267,268,39,272,]),'push_goto':([261,],[266,]),'post_arguments':([191,],[221,]),'validate_function_call':([56,76,],[95,95,]),'post_cycle':([163,259,],[196,265,]),'post_cond':([117,],[152,]),'func_return':([164,202,],[198,232,]),'post_call_function':([120,],[159,]),'validate_var':([56,],[94,]),'push_cycle':([59,247,],[98,259,]),'process_variable':([34,76,110,],[42,112,112,]),'empty':([5,8,32,35,42,53,73,99,112,113,115,116,117,119,125,162,165,191,195,233,237,266,],[18,26,40,44,66,89,109,40,131,136,142,150,155,131,26,40,26,223,40,246,250,40,]),'function':([0,5,6,],[5,5,5,]),'statement':([37,53,164,194,202,226,271,],[53,53,53,53,53,53,53,]),'pre_variables':([0,8,31,125,165,],[6,24,37,24,24,]),'else':([237,],[249,]),'value_return':([164,202,],[199,199,]),'cycle_declaration':([35,],[45,]),'declaration':([0,8,31,125,165,],[8,8,8,8,8,]),'validate_call_arguments':([161,192,],[193,224,]),'init_var':([184,],[214,]),'push_op_and_or':([153,154,],[182,183,]),'while':([37,53,164,194,202,226,271,],[60,60,60,60,60,60,60,]),'post_expression':([116,],[149,]),'loop':([37,53,164,194,202,226,271,],[62,62,62,62,62,62,62,]),'set_main_scope':([9,],[27,]),'cond':([49,58,98,114,120,182,183,190,197,222,229,],[73,97,122,138,158,212,213,220,228,158,242,]),'functions':([0,5,6,],[1,17,19,]),'pop_op_and_or':([85,],[117,]),'arguments':([120,222,],[160,236,]),'pop_relop':([84,],[116,]),'exp':([49,58,65,98,114,120,130,143,156,173,174,182,183,190,197,222,229,234,],[84,84,101,84,84,84,167,84,184,210,211,84,84,84,84,84,84,247,]),'post_condition':([237,],[248,]),'assignment':([37,53,164,194,202,226,271,],[55,55,55,55,55,55,55,]),'post_identifier':([42,],[64,]),'pop_assignment':([220,],[235,]),'post_block':([53,],[90,]),'types':([4,7,104,],[15,22,127,]),'create_pending_goto':([227,265,],[239,270,]),'update_function_parameters':([203,],[233,]),'array_notation':([112,119,],[129,157,]),'add_var':([87,],[118,]),'push_var':([94,],[119,]),'func_types':([7,],[23,]),'variable_constant':([49,58,65,75,98,114,120,130,143,156,168,169,170,171,173,174,182,183,190,197,222,229,234,],[86,86,86,111,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> pre_variables functions main','program',3,'p_program','parser.py',24),
  ('program -> functions main','program',2,'p_program','parser.py',25),
  ('program -> pre_variables main','program',2,'p_program','parser.py',26),
  ('program -> main','program',1,'p_program','parser.py',27),
  ('pre_variables -> declaration post_variables','pre_variables',2,'p_pre_variables','parser.py',33),
  ('post_variables -> pre_variables','post_variables',1,'p_post_variables','parser.py',36),
  ('post_variables -> empty','post_variables',1,'p_post_variables','parser.py',37),
  ('required_eol -> EOL optional_eol','required_eol',2,'p_required_eol','parser.py',41),
  ('optional_eol -> empty','optional_eol',1,'p_optional_eol','parser.py',44),
  ('optional_eol -> required_eol','optional_eol',1,'p_optional_eol','parser.py',45),
  ('types -> INT','types',1,'p_types','parser.py',49),
  ('types -> DOUBLE','types',1,'p_types','parser.py',50),
  ('types -> STRING','types',1,'p_types','parser.py',51),
  ('types -> BOOL','types',1,'p_types','parser.py',52),
  ('declaration -> finish_evaluating types set_type inter_declaration required_eol start_evaluating','declaration',6,'p_declaration','parser.py',57),
  ('set_type -> <empty>','set_type',0,'p_set_type','parser.py',60),
  ('inter_declaration -> identifier cycle_declaration','inter_declaration',2,'p_inter_declaration','parser.py',63),
  ('cycle_declaration -> COMMA inter_declaration','cycle_declaration',2,'p_cycle_declaration','parser.py',66),
  ('cycle_declaration -> empty','cycle_declaration',1,'p_cycle_declaration','parser.py',67),
  ('functions -> function post_functions','functions',2,'p_functions','parser.py',71),
  ('post_functions -> functions','post_functions',1,'p_post_functions','parser.py',75),
  ('post_functions -> empty','post_functions',1,'p_post_functions','parser.py',76),
  ('main -> MAIN set_main_scope required_eol pre_variables block END_MAIN optional_eol','main',7,'p_main','parser.py',80),
  ('set_main_scope -> <empty>','set_main_scope',0,'p_set_main_scope','parser.py',83),
  ('block -> statement post_block','block',2,'p_block','parser.py',90),
  ('post_block -> block','post_block',1,'p_post_block','parser.py',93),
  ('post_block -> empty','post_block',1,'p_post_block','parser.py',94),
  ('call_function -> ID validate_function_call LEFT_PARENTHESIS post_call_function','call_function',4,'p_call_function','parser.py',98),
  ('validate_function_call -> <empty>','validate_function_call',0,'p_validate_function_call','parser.py',102),
  ('post_call_function -> arguments RIGHT_PARENTHESIS validate_call_arguments','post_call_function',3,'p_post_call_function','parser.py',109),
  ('post_call_function -> RIGHT_PARENTHESIS validate_call_arguments','post_call_function',2,'p_post_call_function','parser.py',110),
  ('validate_call_arguments -> <empty>','validate_call_arguments',0,'p_validate_call_arguments','parser.py',113),
  ('arguments -> cond increase_call_arguments post_arguments','arguments',3,'p_arguments','parser.py',118),
  ('increase_call_arguments -> <empty>','increase_call_arguments',0,'p_increase_call_arguments','parser.py',122),
  ('post_arguments -> COMMA arguments','post_arguments',2,'p_post_arguments','parser.py',126),
  ('post_arguments -> empty','post_arguments',1,'p_post_arguments','parser.py',127),
  ('function -> FUNC func_types set_type ID register_function LEFT_PARENTHESIS post_function','function',7,'p_function','parser.py',131),
  ('func_types -> types','func_types',1,'p_func_types','parser.py',135),
  ('func_types -> VOID','func_types',1,'p_func_types','parser.py',136),
  ('register_function -> <empty>','register_function',0,'p_register_function','parser.py',142),
  ('post_function -> parameters RIGHT_PARENTHESIS required_eol post_variables func_return','post_function',5,'p_post_function','parser.py',149),
  ('post_function -> RIGHT_PARENTHESIS required_eol post_variables func_return','post_function',4,'p_post_function','parser.py',150),
  ('func_return -> void_return','func_return',1,'p_func_return','parser.py',153),
  ('func_return -> value_return','func_return',1,'p_func_return','parser.py',154),
  ('void_return -> block post_void_return','void_return',2,'p_void_return','parser.py',157),
  ('post_void_return -> END reset_scope required_eol','post_void_return',3,'p_post_void_return','parser.py',160),
  ('post_void_return -> RETURN required_eol END reset_scope required_eol','post_void_return',5,'p_post_void_return','parser.py',161),
  ('value_return -> block RETURN cond required_eol END reset_scope required_eol','value_return',7,'p_value_return','parser.py',164),
  ('value_return -> RETURN cond required_eol END reset_scope required_eol','value_return',6,'p_value_return','parser.py',165),
  ('reset_scope -> <empty>','reset_scope',0,'p_reset_scope','parser.py',168),
  ('parameters -> finish_evaluating types set_type identifier update_function_parameters post_parameters start_evaluating','parameters',7,'p_parameters','parser.py',173),
  ('update_function_parameters -> <empty>','update_function_parameters',0,'p_update_function_parameters','parser.py',177),
  ('post_parameters -> COMMA parameters','post_parameters',2,'p_post_parameters','parser.py',181),
  ('post_parameters -> empty','post_parameters',1,'p_post_parameters','parser.py',182),
  ('statement -> assignment required_eol','statement',2,'p_statement','parser.py',186),
  ('statement -> condition required_eol','statement',2,'p_statement','parser.py',187),
  ('statement -> print required_eol','statement',2,'p_statement','parser.py',188),
  ('statement -> read required_eol','statement',2,'p_statement','parser.py',189),
  ('statement -> loop required_eol','statement',2,'p_statement','parser.py',190),
  ('statement -> call_function required_eol','statement',2,'p_statement','parser.py',191),
  ('assignment -> ID validate_var push_var array_notation assignment_operator cond pop_assignment','assignment',7,'p_assignment','parser.py',196),
  ('validate_var -> <empty>','validate_var',0,'p_validate_var','parser.py',199),
  ('push_var -> <empty>','push_var',0,'p_push_var','parser.py',204),
  ('array_notation -> LEFT_BRACKET exp RIGHT_BRACKET','array_notation',3,'p_array_notation','parser.py',213),
  ('array_notation -> empty','array_notation',1,'p_array_notation','parser.py',214),
  ('assignment_operator -> EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',219),
  ('assignment_operator -> TIMES_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',220),
  ('assignment_operator -> DIVIDE_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',221),
  ('assignment_operator -> PLUS_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',222),
  ('assignment_operator -> MINUS_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',223),
  ('push_assignment -> <empty>','push_assignment',0,'p_push_assignment','parser.py',226),
  ('pop_assignment -> <empty>','pop_assignment',0,'p_pop_assignment','parser.py',230),
  ('start_evaluating -> <empty>','start_evaluating',0,'p_start_evaluating','parser.py',236),
  ('finish_evaluating -> <empty>','finish_evaluating',0,'p_finish_evaluating','parser.py',240),
  ('cond -> expression pop_op_and_or post_cond','cond',3,'p_cond','parser.py',245),
  ('pop_op_and_or -> <empty>','pop_op_and_or',0,'p_pop_op_and_or','parser.py',248),
  ('post_cond -> AND push_op_and_or cond','post_cond',3,'p_post_cond','parser.py',253),
  ('post_cond -> OR push_op_and_or cond','post_cond',3,'p_post_cond','parser.py',254),
  ('post_cond -> empty','post_cond',1,'p_post_cond','parser.py',255),
  ('push_op_and_or -> <empty>','push_op_and_or',0,'p_push_op_and_or','parser.py',258),
  ('expression -> exp pop_relop post_expression','expression',3,'p_expression','parser.py',263),
  ('pop_relop -> <empty>','pop_relop',0,'p_pop_relop','parser.py',266),
  ('post_expression -> relational_operator expression','post_expression',2,'p_post_expression','parser.py',272),
  ('post_expression -> empty','post_expression',1,'p_post_expression','parser.py',273),
  ('push_relop -> <empty>','push_relop',0,'p_push_relop','parser.py',276),
  ('relational_operator -> LESS push_relop','relational_operator',2,'p_relational_operator','parser.py',280),
  ('relational_operator -> GREATER push_relop','relational_operator',2,'p_relational_operator','parser.py',281),
  ('relational_operator -> GREATER_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',282),
  ('relational_operator -> LESS_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',283),
  ('relational_operator -> EQUALS_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',284),
  ('relational_operator -> NOT_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',285),
  ('exp -> term pop_exp post_exp','exp',3,'p_exp','parser.py',291),
  ('pop_exp -> <empty>','pop_exp',0,'p_pop_exp','parser.py',294),
  ('post_exp -> PLUS push_exp exp','post_exp',3,'p_post_exp','parser.py',299),
  ('post_exp -> MINUS push_exp exp','post_exp',3,'p_post_exp','parser.py',300),
  ('post_exp -> empty','post_exp',1,'p_post_exp','parser.py',301),
  ('push_exp -> <empty>','push_exp',0,'p_push_exp','parser.py',304),
  ('term -> factor pop_term post_term','term',3,'p_term','parser.py',309),
  ('pop_term -> <empty>','pop_term',0,'p_pop_term','parser.py',312),
  ('post_term -> TIMES push_term term','post_term',3,'p_post_term','parser.py',318),
  ('post_term -> DIVIDE push_term term','post_term',3,'p_post_term','parser.py',319),
  ('post_term -> PERCENTAGE push_term term','post_term',3,'p_post_term','parser.py',320),
  ('post_term -> MOD push_term term','post_term',3,'p_post_term','parser.py',321),
  ('post_term -> empty','post_term',1,'p_post_term','parser.py',322),
  ('push_term -> <empty>','push_term',0,'p_push_term','parser.py',325),
  ('factor -> LEFT_PARENTHESIS push_paren cond RIGHT_PARENTHESIS pop_paren','factor',5,'p_factor','parser.py',330),
  ('factor -> variable_constant','factor',1,'p_factor','parser.py',331),
  ('factor -> MINUS variable_constant','factor',2,'p_factor','parser.py',332),
  ('factor -> call_function','factor',1,'p_factor','parser.py',333),
  ('push_paren -> <empty>','push_paren',0,'p_push_paren','parser.py',336),
  ('pop_paren -> <empty>','pop_paren',0,'p_pop_paren','parser.py',340),
  ('variable_constant -> ID process_variable array_notation','variable_constant',3,'p_variable_constant','parser.py',345),
  ('variable_constant -> INT_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',346),
  ('variable_constant -> DOUBLE_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',347),
  ('variable_constant -> STRING_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',348),
  ('variable_constant -> BOOL_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',349),
  ('process_variable -> <empty>','process_variable',0,'p_process_variable','parser.py',363),
  ('condition -> IF cond COLON push_gotoF optional_eol block fill_goto post_condition END','condition',9,'p_condition','parser.py',372),
  ('push_gotoF -> <empty>','push_gotoF',0,'p_push_gotoF','parser.py',375),
  ('fill_goto -> <empty>','fill_goto',0,'p_fill_goto','parser.py',379),
  ('post_condition -> else','post_condition',1,'p_post_condition','parser.py',384),
  ('post_condition -> empty','post_condition',1,'p_post_condition','parser.py',385),
  ('else -> ELSE COLON push_goto optional_eol block fill_goto','else',6,'p_else','parser.py',389),
  ('push_goto -> <empty>','push_goto',0,'p_push_goto','parser.py',392),
  ('print -> PRINT cond post_print','print',3,'p_print','parser.py',397),
  ('post_print -> COMMA STRING_CONSTANT','post_print',2,'p_post_print','parser.py',400),
  ('post_print -> empty','post_print',1,'p_post_print','parser.py',401),
  ('push_print -> <empty>','push_print',0,'p_push_print','parser.py',404),
  ('read -> READ LEFT_PARENTHESIS RIGHT_PARENTHESIS','read',3,'p_read','parser.py',409),
  ('identifier -> ID process_variable post_identifier','identifier',3,'p_identifier','parser.py',413),
  ('post_identifier -> LEFT_BRACKET exp RIGHT_BRACKET','post_identifier',3,'p_post_identifier','parser.py',416),
  ('post_identifier -> empty','post_identifier',1,'p_post_identifier','parser.py',417),
  ('loop -> for','loop',1,'p_loop','parser.py',421),
  ('loop -> while','loop',1,'p_loop','parser.py',422),
  ('for -> FOR ID add_var FROM exp init_var TO exp push_cycle post_cycle create_pending_goto','for',11,'p_for','parser.py',426),
  ('add_var -> <empty>','add_var',0,'p_add_var','parser.py',429),
  ('init_var -> <empty>','init_var',0,'p_init_var','parser.py',435),
  ('while -> WHILE push_cycle cond push_gotoF post_cycle fill_goto create_pending_goto','while',7,'p_while','parser.py',440),
  ('push_cycle -> <empty>','push_cycle',0,'p_push_cycle','parser.py',443),
  ('create_pending_goto -> <empty>','create_pending_goto',0,'p_create_pending_goto','parser.py',447),
  ('post_cycle -> COLON optional_eol block END','post_cycle',4,'p_post_cycle','parser.py',452),
  ('BOOL_CONSTANT -> TRUE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',455),
  ('BOOL_CONSTANT -> FALSE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',456),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',459),
]
