
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '7A3D3901B18AD3A43D0157717EDC90F0'
    
_lr_action_items = {'RETURN':([11,27,28,29,38,40,43,44,45,47,57,76,95,96,97,98,99,100,103,107,110,138,139,181,182,],[-163,-8,-7,-9,-163,-84,-10,-12,-11,-17,-163,-69,-33,-31,-32,-66,-67,-64,-65,-68,-163,177,-163,219,177,]),'LESS':([78,79,81,83,84,85,87,88,89,90,91,93,114,120,121,122,123,124,126,127,128,129,144,146,148,151,156,157,192,212,214,229,230,231,232,233,234,235,246,247,257,263,264,279,282,],[-128,-120,-161,-129,-128,-110,-128,-104,-162,-128,-93,-118,-127,-129,-119,-163,-124,-163,-125,-163,-126,159,-123,-74,-109,-115,-103,-107,-122,-34,-122,-112,-111,-113,-114,-117,-106,-105,-122,-38,-76,-38,-37,-73,-36,]),'READ':([11,27,28,29,38,39,40,43,44,45,46,47,57,76,98,99,100,103,107,110,134,138,139,174,182,215,216,249,293,299,303,],[-163,-8,-7,-9,-163,-163,-84,-10,-12,-11,53,-17,53,-69,-66,-67,-64,-65,-68,-163,-131,53,-163,-163,53,53,-163,53,-137,-163,53,]),'VOID':([10,],[24,]),'RIGHT_BRACKET':([68,78,79,81,83,84,85,87,88,89,90,93,108,114,120,121,122,123,124,126,127,128,144,146,148,151,156,157,192,212,214,228,229,230,231,232,233,234,235,246,247,256,257,263,264,279,282,],[-22,-128,-120,-161,-129,-128,-110,-128,-104,-162,-128,-118,137,-127,-129,-119,-163,-124,-163,-125,-163,-126,-123,-74,-109,-115,-103,-107,-122,-34,-122,257,-112,-111,-113,-114,-117,-106,-105,-122,-38,278,-76,-38,-37,-73,-36,]),'EOL':([12,30,34,35,36,38,41,49,50,52,56,58,59,60,62,65,67,70,71,72,78,79,80,81,83,84,85,87,88,89,90,91,92,93,106,109,111,114,115,117,118,119,120,121,122,123,124,126,127,128,129,130,134,136,137,143,144,146,148,151,156,157,164,165,167,170,174,184,186,192,195,212,214,216,217,218,219,221,224,229,230,231,232,233,234,235,236,237,244,246,247,250,251,253,254,257,259,263,264,270,272,273,279,282,284,286,287,288,293,294,296,298,299,301,302,],[-132,-30,38,38,-129,38,-163,-163,-21,38,-150,38,38,38,38,-151,38,-19,-24,38,-128,-120,-163,-161,-129,-128,-110,-128,-104,-162,-128,-93,-87,-118,-29,-23,38,-127,-138,-140,-139,-143,-129,-119,-163,-124,-163,-125,-163,-126,-163,-163,-131,38,-20,-142,-123,-74,-109,-115,-103,-107,-92,-95,-86,-90,38,-146,-141,-122,-94,-34,-122,38,-136,-56,38,-57,-144,-112,-111,-113,-114,-117,-106,-105,-88,-89,-83,-122,-38,-159,38,-56,38,-76,-70,-38,-37,-157,-57,38,-73,-36,-130,-160,-57,38,-137,38,-57,-156,38,38,-152,]),'EQUALS_EQUALS':([78,79,81,83,84,85,87,88,89,90,91,93,114,120,121,122,123,124,126,127,128,129,144,146,148,151,156,157,192,212,214,229,230,231,232,233,234,235,246,247,257,263,264,279,282,],[-128,-120,-161,-129,-128,-110,-128,-104,-162,-128,-93,-118,-127,-129,-119,-163,-124,-163,-125,-163,-126,163,-123,-74,-109,-115,-103,-107,-122,-34,-122,-112,-111,-113,-114,-117,-106,-105,-122,-38,-76,-38,-37,-73,-36,]),'WHILE':([11,27,28,29,38,39,40,43,44,45,46,47,57,76,98,99,100,103,107,110,134,138,139,174,182,215,216,249,293,299,303,],[-163,-8,-7,-9,-163,-163,-84,-10,-12,-11,64,-17,64,-69,-66,-67,-64,-65,-68,-163,-131,64,-163,-163,64,64,-163,64,-137,-163,64,]),'PRINT':([11,27,28,29,38,39,40,43,44,45,46,47,57,76,98,99,100,103,107,110,134,138,139,174,182,215,216,249,293,299,303,],[-163,-8,-7,-9,-163,-163,-84,-10,-12,-11,54,-17,54,-69,-66,-67,-64,-65,-68,-163,-131,54,-163,-163,54,54,-163,54,-137,-163,54,]),'TRUE':([54,63,64,82,86,105,125,133,145,147,149,150,152,154,155,158,159,160,161,162,163,166,168,169,171,173,177,187,188,189,190,191,193,194,196,197,198,199,200,201,202,203,205,206,207,208,209,210,219,226,239,240,241,242,243,258,261,],[81,81,-158,81,-121,81,81,-121,-75,-116,-116,-116,-116,-108,-108,81,-96,-96,-96,-96,-96,-96,-91,-91,81,81,81,81,81,81,81,81,81,81,-97,-99,-102,-100,-101,-98,81,81,-82,-82,-82,-82,-82,81,81,81,-81,-80,-78,-79,-77,81,81,]),'MINUS':([54,63,64,78,79,81,83,84,85,86,87,88,89,90,93,105,114,120,121,122,123,124,125,126,127,128,133,144,145,146,147,148,149,150,151,152,154,155,158,159,160,161,162,163,166,168,169,171,173,177,187,188,189,190,191,192,193,194,196,197,198,199,200,201,202,203,205,206,207,208,209,210,212,214,219,226,229,230,231,232,233,239,240,241,242,243,246,247,257,258,261,263,264,279,282,],[82,82,-158,-128,-120,-161,-129,-128,-110,-121,-128,-104,-162,-128,-118,82,-127,-129,-119,-163,-124,-163,82,-125,154,-126,-121,-123,-75,-74,-116,-109,-116,-116,-115,-116,-108,-108,82,-96,-96,-96,-96,-96,-96,-91,-91,82,82,82,82,82,82,82,82,-122,82,82,-97,-99,-102,-100,-101,-98,82,82,-82,-82,-82,-82,-82,82,-34,-122,82,82,-112,-111,-113,-114,-117,-81,-80,-78,-79,-77,-122,-38,-76,82,82,-38,-37,-73,-36,]),'DIVIDE':([78,79,81,83,84,85,87,89,90,93,114,120,121,122,123,124,126,128,144,146,192,212,214,233,246,247,257,263,264,279,282,],[-128,-120,-161,-129,-128,-110,-128,-162,-128,-118,-127,-129,-119,-163,-124,147,-125,-126,-123,-74,-122,-34,-122,-117,-122,-38,-76,-38,-37,-73,-36,]),'MINUS_EQUALS':([61,101,132,146,172,257,279,],[-71,-72,-163,-74,205,-76,-73,]),'END_MAIN':([38,43,44,45,57,66,76,95,96,97,98,99,100,103,107,],[-163,-10,-12,-11,-163,106,-69,-33,-31,-32,-66,-67,-64,-65,-68,]),'NOT_EQUALS':([78,79,81,83,84,85,87,88,89,90,91,93,114,120,121,122,123,124,126,127,128,129,144,146,148,151,156,157,192,212,214,229,230,231,232,233,234,235,246,247,257,263,264,279,282,],[-128,-120,-161,-129,-128,-110,-128,-104,-162,-128,-93,-118,-127,-129,-119,-163,-124,-163,-125,-163,-126,161,-123,-74,-109,-115,-103,-107,-122,-34,-122,-112,-111,-113,-114,-117,-106,-105,-122,-38,-76,-38,-37,-73,-36,]),'DOUBLE_CONSTANT':([54,63,64,82,86,105,125,133,145,147,149,150,152,154,155,158,159,160,161,162,163,166,168,169,171,173,177,187,188,189,190,191,193,194,196,197,198,199,200,201,202,203,205,206,207,208,209,210,219,226,239,240,241,242,243,258,261,],[87,87,-158,87,-121,87,87,-121,-75,-116,-116,-116,-116,-108,-108,87,-96,-96,-96,-96,-96,-96,-91,-91,87,87,87,87,87,87,87,87,87,87,-97,-99,-102,-100,-101,-98,87,87,-82,-82,-82,-82,-82,87,87,87,-81,-80,-78,-79,-77,87,87,]),'GREATER_EQUALS':([78,79,81,83,84,85,87,88,89,90,91,93,114,120,121,122,123,124,126,127,128,129,144,146,148,151,156,157,192,212,214,229,230,231,232,233,234,235,246,247,257,263,264,279,282,],[-128,-120,-161,-129,-128,-110,-128,-104,-162,-128,-93,-118,-127,-129,-119,-163,-124,-163,-125,-163,-126,160,-123,-74,-109,-115,-103,-107,-122,-34,-122,-112,-111,-113,-114,-117,-106,-105,-122,-38,-76,-38,-37,-73,-36,]),'LESS_EQUALS':([78,79,81,83,84,85,87,88,89,90,91,93,114,120,121,122,123,124,126,127,128,129,144,146,148,151,156,157,192,212,214,229,230,231,232,233,234,235,246,247,257,263,264,279,282,],[-128,-120,-161,-129,-128,-110,-128,-104,-162,-128,-93,-118,-127,-129,-119,-163,-124,-163,-125,-163,-126,162,-123,-74,-109,-115,-103,-107,-122,-34,-122,-112,-111,-113,-114,-117,-106,-105,-122,-38,-76,-38,-37,-73,-36,]),'PLUS':([78,79,81,83,84,85,87,88,89,90,93,114,120,121,122,123,124,126,127,128,144,146,148,151,192,212,214,229,230,231,232,233,246,247,257,263,264,279,282,],[-128,-120,-161,-129,-128,-110,-128,-104,-162,-128,-118,-127,-129,-119,-163,-124,-163,-125,155,-126,-123,-74,-109,-115,-122,-34,-122,-112,-111,-113,-114,-117,-122,-38,-76,-38,-37,-73,-36,]),'TO':([78,79,81,83,84,85,87,88,89,90,93,114,120,121,122,123,124,126,127,128,144,146,148,151,156,157,192,204,212,214,229,230,231,232,233,234,235,238,246,247,257,263,264,279,282,],[-128,-120,-161,-129,-128,-110,-128,-104,-162,-128,-118,-127,-129,-119,-163,-124,-163,-125,-163,-126,-123,-74,-109,-115,-103,-107,-122,-154,-34,-122,-112,-111,-113,-114,-117,-106,-105,258,-122,-38,-76,-38,-37,-73,-36,]),'INT_CONSTANT':([48,54,63,64,82,86,105,125,133,145,147,149,150,152,154,155,158,159,160,161,162,163,166,168,169,171,173,177,187,188,189,190,191,193,194,196,197,198,199,200,201,202,203,205,206,207,208,209,210,219,226,239,240,241,242,243,258,261,],[68,84,84,-158,84,-121,84,84,-121,-75,-116,-116,-116,-116,-108,-108,84,-96,-96,-96,-96,-96,-96,-91,-91,84,84,84,84,84,84,84,84,84,84,-97,-99,-102,-100,-101,-98,84,84,-82,-82,-82,-82,-82,84,84,84,-81,-80,-78,-79,-77,84,84,]),'COMMA':([36,41,49,50,78,79,80,81,83,84,85,87,88,89,90,91,92,93,114,120,121,122,123,124,126,127,128,129,130,137,142,144,146,148,151,156,157,164,165,167,170,185,192,195,211,212,214,223,225,227,229,230,231,232,233,234,235,236,237,245,246,247,255,257,263,264,278,279,282,],[-129,-163,69,-21,-128,-120,116,-161,-129,-128,-110,-128,-104,-162,-128,-93,-87,-118,-127,-129,-119,-163,-124,-163,-125,-163,-126,-163,-163,-20,-129,-123,-74,-109,-115,-103,-107,-92,-95,-86,-90,-163,-122,-94,-40,-34,-122,-61,-147,-149,-112,-111,-113,-114,-117,-106,-105,-88,-89,261,-122,-38,276,-76,-38,-37,-148,-73,-36,]),'COLON':([78,79,81,83,84,85,87,88,89,90,91,92,93,104,114,120,121,122,123,124,126,127,128,129,130,135,144,146,148,151,156,157,164,165,167,170,175,192,195,212,214,229,230,231,232,233,234,235,236,237,246,247,257,263,264,268,279,280,282,285,292,],[-128,-120,-161,-129,-128,-110,-128,-104,-162,-128,-93,-87,-118,134,-127,-129,-119,-163,-124,-163,-125,-163,-126,-163,-163,-131,-123,-74,-109,-115,-103,-107,-92,-95,-86,-90,216,-122,-94,-34,-122,-112,-111,-113,-114,-117,-106,-105,-88,-89,-122,-38,-76,-38,-37,-136,-73,-155,-36,293,216,]),'PERCENTAGE':([78,79,81,83,84,85,87,89,90,93,114,120,121,122,123,124,126,128,144,146,192,212,214,233,246,247,257,263,264,279,282,],[-128,-120,-161,-129,-128,-110,-128,-162,-128,-118,-127,-129,-119,-163,-124,150,-125,-126,-123,-74,-122,-34,-122,-117,-122,-38,-76,-38,-37,-73,-36,]),'PLUS_EQUALS':([61,101,132,146,172,257,279,],[-71,-72,-163,-74,206,-76,-73,]),'LEFT_PARENTHESIS':([37,42,53,54,61,63,64,77,83,86,102,105,125,133,145,147,149,150,152,154,155,158,159,160,161,162,163,166,168,169,171,173,177,187,188,189,190,191,193,194,196,197,198,199,200,201,202,203,205,206,207,208,209,210,219,226,239,240,241,242,243,258,261,],[-46,51,-145,86,-35,86,-158,113,-35,-121,133,86,86,-121,-75,-116,-116,-116,-116,-108,-108,86,-96,-96,-96,-96,-96,-96,-91,-91,86,86,86,86,86,86,86,86,86,86,-97,-99,-102,-100,-101,-98,86,86,-82,-82,-82,-82,-82,86,86,86,-81,-80,-78,-79,-77,86,86,]),'$end':([1,5,6,13,23,32,38,43,44,45,106,136,176,],[0,-1,-6,-4,-5,-3,-163,-10,-12,-11,-29,-163,-28,]),'END':([38,43,44,45,57,76,95,96,97,98,99,100,103,107,181,248,252,265,266,267,269,271,283,289,305,306,],[-163,-10,-12,-11,-163,-69,-33,-31,-32,-66,-67,-64,-65,-68,221,-132,272,-163,284,-133,286,287,-134,296,-132,-135,]),'STRING':([0,2,3,7,10,11,38,39,40,43,44,45,47,51,74,110,112,139,276,],[-137,-2,-85,14,14,-85,-163,-85,-84,-10,-12,-11,-17,-85,-59,-85,14,-85,-85,]),'FOR':([11,27,28,29,38,39,40,43,44,45,46,47,57,76,98,99,100,103,107,110,134,138,139,174,182,215,216,249,293,299,303,],[-163,-8,-7,-9,-163,-163,-84,-10,-12,-11,55,-17,55,-69,-66,-67,-64,-65,-68,-163,-131,55,-163,-163,55,55,-163,55,-137,-163,55,]),'EQUALS':([61,101,132,146,172,257,279,],[-71,-72,-163,-74,209,-76,-73,]),'ELSE':([38,43,44,45,57,76,95,96,97,98,99,100,103,107,248,],[-163,-10,-12,-11,-163,-69,-33,-31,-32,-66,-67,-64,-65,-68,268,]),'FUNC':([0,2,3,8,9,11,27,28,29,38,40,43,44,45,47,75,178,179,180,220,222,274,295,300,304,],[-137,-2,10,10,10,-163,-8,-7,-9,-163,-84,-10,-12,-11,-17,-43,-48,-50,-49,-51,-47,-52,-53,-55,-54,]),'FROM':([94,131,],[-153,171,]),'RIGHT_PARENTHESIS':([51,73,78,79,81,83,84,85,87,88,89,90,91,92,93,114,120,121,122,123,124,126,127,128,129,130,133,141,142,144,146,148,151,153,156,157,164,165,167,170,173,185,192,195,211,212,213,214,223,225,227,229,230,231,232,233,234,235,236,237,245,246,247,255,257,260,262,263,264,275,277,278,279,281,282,290,291,297,],[72,111,-128,-120,-161,-129,-128,-110,-128,-104,-162,-128,-93,-87,-118,-127,-129,-119,-163,-124,-163,-125,-163,-126,-163,-163,-121,184,-129,-123,-74,-109,-115,192,-103,-107,-92,-95,-86,-90,214,-163,-122,-94,-40,-34,246,-122,-61,-147,-149,-112,-111,-113,-114,-117,-106,-105,-88,-89,-163,-122,-38,-163,-76,-39,-42,-38,-37,-60,-63,-148,-73,-41,-36,-84,-62,-58,]),'TIMES':([78,79,81,83,84,85,87,89,90,93,114,120,121,122,123,124,126,128,144,146,192,212,214,233,246,247,257,263,264,279,282,],[-128,-120,-161,-129,-128,-110,-128,-162,-128,-118,-127,-129,-119,-163,-124,149,-125,-126,-123,-74,-122,-34,-122,-117,-122,-38,-76,-38,-37,-73,-36,]),'ID':([11,14,15,16,17,18,24,25,26,27,28,29,31,33,38,39,40,43,44,45,46,47,54,55,57,63,64,69,76,82,86,98,99,100,103,105,107,110,113,125,133,134,138,139,140,145,147,149,150,152,154,155,158,159,160,161,162,163,166,168,169,171,173,174,177,182,183,187,188,189,190,191,193,194,196,197,198,199,200,201,202,203,205,206,207,208,209,210,215,216,219,226,239,240,241,242,243,249,258,261,293,299,303,],[-163,-15,-13,-14,-16,-18,-45,-44,-18,-8,-7,-9,36,37,-163,-163,-84,-10,-12,-11,61,-17,83,94,61,83,-158,36,-69,120,-121,-66,-67,-64,-65,83,-68,-163,142,83,-121,-131,61,-163,-18,-75,-116,-116,-116,-116,-108,-108,83,-96,-96,-96,-96,-96,-96,-91,-91,83,83,-163,83,61,142,83,83,83,83,83,83,83,-97,-99,-102,-100,-101,-98,83,83,-82,-82,-82,-82,-82,83,61,-163,83,83,-81,-80,-78,-79,-77,61,83,83,-137,-163,61,]),'IF':([11,27,28,29,38,39,40,43,44,45,46,47,57,76,98,99,100,103,107,110,134,138,139,174,182,215,216,249,293,299,303,],[-163,-8,-7,-9,-163,-163,-84,-10,-12,-11,63,-17,63,-69,-66,-67,-64,-65,-68,-163,-131,63,-163,-163,63,63,-163,63,-137,-163,63,]),'AND':([78,79,81,83,84,85,87,88,89,90,91,92,93,114,120,121,122,123,124,126,127,128,129,130,144,146,148,151,156,157,164,165,192,195,212,214,229,230,231,232,233,234,235,246,247,257,263,264,279,282,],[-128,-120,-161,-129,-128,-110,-128,-104,-162,-128,-93,-87,-118,-127,-129,-119,-163,-124,-163,-125,-163,-126,-163,168,-123,-74,-109,-115,-103,-107,-92,-95,-122,-94,-34,-122,-112,-111,-113,-114,-117,-106,-105,-122,-38,-76,-38,-37,-73,-36,]),'FALSE':([54,63,64,82,86,105,125,133,145,147,149,150,152,154,155,158,159,160,161,162,163,166,168,169,171,173,177,187,188,189,190,191,193,194,196,197,198,199,200,201,202,203,205,206,207,208,209,210,219,226,239,240,241,242,243,258,261,],[89,89,-158,89,-121,89,89,-121,-75,-116,-116,-116,-116,-108,-108,89,-96,-96,-96,-96,-96,-96,-91,-91,89,89,89,89,89,89,89,89,89,89,-97,-99,-102,-100,-101,-98,89,89,-82,-82,-82,-82,-82,89,89,89,-81,-80,-78,-79,-77,89,89,]),'GREATER':([78,79,81,83,84,85,87,88,89,90,91,93,114,120,121,122,123,124,126,127,128,129,144,146,148,151,156,157,192,212,214,229,230,231,232,233,234,235,246,247,257,263,264,279,282,],[-128,-120,-161,-129,-128,-110,-128,-104,-162,-128,-93,-118,-127,-129,-119,-163,-124,-163,-125,-163,-126,166,-123,-74,-109,-115,-103,-107,-122,-34,-122,-112,-111,-113,-114,-117,-106,-105,-122,-38,-76,-38,-37,-73,-36,]),'INT':([0,2,3,7,10,11,38,39,40,43,44,45,47,51,74,110,112,139,276,],[-137,-2,-85,15,15,-85,-163,-85,-84,-10,-12,-11,-17,-85,-59,-85,15,-85,-85,]),'DOUBLE':([0,2,3,7,10,11,38,39,40,43,44,45,47,51,74,110,112,139,276,],[-137,-2,-85,16,16,-85,-163,-85,-84,-10,-12,-11,-17,-85,-59,-85,16,-85,-85,]),'DIVIDE_EQUALS':([61,101,132,146,172,257,279,],[-71,-72,-163,-74,208,-76,-73,]),'BOOL':([0,2,3,7,10,11,38,39,40,43,44,45,47,51,74,110,112,139,276,],[-137,-2,-85,17,17,-85,-163,-85,-84,-10,-12,-11,-17,-85,-59,-85,17,-85,-85,]),'STRING_CONSTANT':([54,63,64,82,86,105,116,125,133,145,147,149,150,152,154,155,158,159,160,161,162,163,166,168,169,171,173,177,187,188,189,190,191,193,194,196,197,198,199,200,201,202,203,205,206,207,208,209,210,219,226,239,240,241,242,243,258,261,],[90,90,-158,90,-121,90,143,90,-121,-75,-116,-116,-116,-116,-108,-108,90,-96,-96,-96,-96,-96,-96,-91,-91,90,90,90,90,90,90,90,90,90,90,-97,-99,-102,-100,-101,-98,90,90,-82,-82,-82,-82,-82,90,90,90,-81,-80,-78,-79,-77,90,90,]),'TIMES_EQUALS':([61,101,132,146,172,257,279,],[-71,-72,-163,-74,207,-76,-73,]),'LEFT_BRACKET':([36,41,61,83,101,120,122,132,142,185,],[-129,48,-71,-129,-72,-129,145,145,-129,226,]),'MAIN':([0,2,3,4,8,9,11,19,20,21,22,27,28,29,38,40,43,44,45,47,75,178,179,180,220,222,274,295,300,304,],[-137,-2,12,12,-163,12,-163,-25,-26,-27,12,-8,-7,-9,-163,-84,-10,-12,-11,-17,-43,-48,-50,-49,-51,-47,-52,-53,-55,-54,]),'OR':([78,79,81,83,84,85,87,88,89,90,91,92,93,114,120,121,122,123,124,126,127,128,129,130,144,146,148,151,156,157,164,165,192,195,212,214,229,230,231,232,233,234,235,246,247,257,263,264,279,282,],[-128,-120,-161,-129,-128,-110,-128,-104,-162,-128,-93,-87,-118,-127,-129,-119,-163,-124,-163,-125,-163,-126,-163,169,-123,-74,-109,-115,-103,-107,-92,-95,-122,-94,-34,-122,-112,-111,-113,-114,-117,-106,-105,-122,-38,-76,-38,-37,-73,-36,]),'MOD':([78,79,81,83,84,85,87,89,90,93,114,120,121,122,123,124,126,128,144,146,192,212,214,233,246,247,257,263,264,279,282,],[-128,-120,-161,-129,-128,-110,-128,-162,-128,-118,-127,-129,-119,-163,-124,152,-125,-126,-123,-74,-122,-34,-122,-117,-122,-38,-76,-38,-37,-73,-36,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'relational_operator':([129,],[158,]),'push_constant':([78,84,87,90,],[114,123,126,128,]),'post_function':([51,],[75,]),'push_assignment':([205,206,207,208,209,],[239,240,241,242,243,]),'parameters':([51,276,],[73,291,]),'increase_call_arguments':([211,],[245,]),'post_variables':([11,39,110,139,],[28,46,138,182,]),'finish_params':([275,],[290,]),'init':([0,],[1,]),'program':([3,],[5,]),'factor':([54,63,105,125,158,171,173,177,187,188,189,190,191,193,194,202,203,210,219,226,258,261,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'main':([3,4,9,22,],[6,13,23,32,]),'finish_evaluating':([3,11,39,51,110,139,276,],[7,7,7,74,7,7,74,]),'read':([46,57,138,182,215,249,303,],[59,59,59,59,59,59,59,]),'post_term':([124,],[148,]),'print_mod':([80,],[118,]),'condition':([46,57,138,182,215,249,303,],[62,62,62,62,62,62,62,]),'term':([54,63,105,125,158,171,173,177,187,188,189,190,191,193,194,202,203,210,219,226,258,261,],[88,88,88,88,88,88,88,88,88,229,230,231,232,88,88,88,88,88,88,88,88,88,]),'push_end':([106,],[136,]),'post_void_return':([181,],[220,]),'push_term':([147,149,150,152,],[188,189,190,191,]),'register_function':([37,],[42,]),'identifier':([113,183,],[141,223,]),'push_paren':([86,133,],[125,173,]),'BOOL_CONSTANT':([54,63,82,105,125,158,171,173,177,187,188,189,190,191,193,194,202,203,210,219,226,258,261,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'call_function':([46,54,57,63,105,125,138,158,171,173,177,182,187,188,189,190,191,193,194,202,203,210,215,219,226,249,258,261,303,],[52,79,52,79,79,79,52,79,79,79,79,52,79,79,79,79,79,79,79,79,79,79,52,79,79,52,79,79,52,]),'reset_scope':([221,272,287,296,],[254,288,294,301,]),'push_relop':([159,160,161,162,163,166,],[196,197,198,199,200,201,]),'post_parameters':([255,],[275,]),'start_evaluating':([40,290,],[47,297,]),'post_print':([80,],[115,]),'fill_goto':([12,248,305,],[30,265,306,]),'for':([46,57,138,182,215,249,303,],[56,56,56,56,56,56,56,]),'post_exp':([127,],[156,]),'assignment':([46,57,138,182,215,249,303,],[60,60,60,60,60,60,60,]),'print':([46,57,138,182,215,249,303,],[58,58,58,58,58,58,58,]),'push_exp':([154,155,],[193,194,]),'set_type':([18,26,140,],[31,33,183,]),'inter_declaration':([31,69,],[35,109,]),'void_return':([138,182,],[180,180,]),'initialize':([2,],[3,]),'pop_paren':([192,214,246,],[233,247,263,]),'push_gotoF':([134,135,],[174,175,]),'end_for_loop':([298,],[302,]),'fill_goto_plus':([217,268,],[250,285,]),'assignment_operator':([172,],[210,]),'expression':([54,63,105,125,158,173,177,202,203,210,219,261,],[92,92,92,92,195,92,92,92,92,92,92,92,]),'pop_exp':([88,],[127,]),'block':([46,57,138,182,215,249,303,],[66,97,181,181,248,269,305,]),'optional_eol':([38,136,174,216,299,],[43,176,215,249,303,]),'post_functions':([8,],[19,]),'pop_term':([85,],[124,]),'required_eol':([34,35,38,52,58,59,60,62,67,72,111,136,174,216,219,251,254,273,288,294,299,301,],[39,40,44,76,98,99,100,103,107,110,139,44,44,44,252,271,274,289,295,300,44,304,]),'push_goto':([0,293,],[2,299,]),'post_arguments':([245,],[260,]),'validate_function_call':([61,83,],[102,102,]),'post_cycle':([175,292,],[217,298,]),'post_cond':([130,],[167,]),'func_return':([138,182,],[178,222,]),'post_call_function':([173,],[212,]),'validate_var':([61,],[101,]),'push_cycle':([64,],[105,]),'process_variable':([36,83,120,142,],[41,122,122,185,]),'verify_var_dim':([145,],[187,]),'empty':([8,11,38,39,41,49,57,80,110,122,124,127,129,130,132,136,139,174,185,216,245,255,265,299,],[21,29,45,29,50,71,95,119,29,146,151,157,165,170,146,45,29,45,227,45,262,277,283,45,]),'function':([3,8,9,],[8,8,8,]),'statement':([46,57,138,182,215,249,303,],[57,57,57,57,57,57,57,]),'pre_variables':([3,11,39,110,139,],[9,27,27,27,27,]),'else':([248,],[267,]),'value_return':([138,182,],[179,179,]),'create_return':([218,253,],[251,273,]),'cycle_declaration':([49,],[70,]),'declaration':([3,11,39,110,139,],[11,11,11,11,11,]),'validate_call_arguments':([247,263,],[264,282,]),'init_var':([204,],[238,]),'read_var':([184,],[224,]),'push_op_and_or':([168,169,],[202,203,]),'while':([46,57,138,182,215,249,303,],[65,65,65,65,65,65,65,]),'post_expression':([129,],[164,]),'start_read':([53,],[77,]),'array_declaration':([41,],[49,]),'loop':([46,57,138,182,215,249,303,],[67,67,67,67,67,67,67,]),'update_var_size':([68,],[108,]),'set_main_scope':([30,],[34,]),'cond':([54,63,105,125,173,177,202,203,210,219,261,],[80,104,135,153,211,218,236,237,244,253,211,]),'functions':([3,8,9,],[4,20,22,]),'end_array':([257,],[279,]),'pop_op_and_or':([92,],[130,]),'push_for_cycle':([280,],[292,]),'arguments':([173,261,],[213,281,]),'pop_relop':([91,],[129,]),'exp':([54,63,105,125,158,171,173,177,187,193,194,202,203,210,219,226,258,261,],[91,91,91,91,91,204,91,91,228,234,235,91,91,91,91,256,280,91,]),'post_condition':([248,],[266,]),'print_post_mod':([143,],[186,]),'post_identifier':([185,],[225,]),'pop_assignment':([244,],[259,]),'post_block':([57,],[96,]),'func_types':([10,],[26,]),'types':([7,10,112,],[18,25,140,]),'create_pending_goto':([250,],[270,]),'update_function_parameters':([223,],[255,]),'array_notation':([122,132,],[144,172,]),'add_var':([94,],[131,]),'push_var':([101,],[132,]),'start_params':([74,],[112,]),'print_default':([80,],[117,]),'variable_constant':([54,63,82,105,125,158,171,173,177,187,188,189,190,191,193,194,202,203,210,219,226,258,261,],[93,93,121,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> push_goto initialize program','init',3,'p_init','parser.py',30),
  ('initialize -> <empty>','initialize',0,'p_initialize','parser.py',33),
  ('program -> pre_variables functions main','program',3,'p_program','parser.py',67),
  ('program -> functions main','program',2,'p_program','parser.py',68),
  ('program -> pre_variables main','program',2,'p_program','parser.py',69),
  ('program -> main','program',1,'p_program','parser.py',70),
  ('pre_variables -> declaration post_variables','pre_variables',2,'p_pre_variables','parser.py',78),
  ('post_variables -> pre_variables','post_variables',1,'p_post_variables','parser.py',81),
  ('post_variables -> empty','post_variables',1,'p_post_variables','parser.py',82),
  ('required_eol -> EOL optional_eol','required_eol',2,'p_required_eol','parser.py',86),
  ('optional_eol -> empty','optional_eol',1,'p_optional_eol','parser.py',89),
  ('optional_eol -> required_eol','optional_eol',1,'p_optional_eol','parser.py',90),
  ('types -> INT','types',1,'p_types','parser.py',94),
  ('types -> DOUBLE','types',1,'p_types','parser.py',95),
  ('types -> STRING','types',1,'p_types','parser.py',96),
  ('types -> BOOL','types',1,'p_types','parser.py',97),
  ('declaration -> finish_evaluating types set_type inter_declaration required_eol start_evaluating','declaration',6,'p_declaration','parser.py',102),
  ('set_type -> <empty>','set_type',0,'p_set_type','parser.py',105),
  ('inter_declaration -> ID process_variable array_declaration cycle_declaration','inter_declaration',4,'p_inter_declaration','parser.py',108),
  ('array_declaration -> LEFT_BRACKET INT_CONSTANT update_var_size RIGHT_BRACKET','array_declaration',4,'p_array_declaration','parser.py',111),
  ('array_declaration -> empty','array_declaration',1,'p_array_declaration','parser.py',112),
  ('update_var_size -> <empty>','update_var_size',0,'p_update_var_size','parser.py',115),
  ('cycle_declaration -> COMMA inter_declaration','cycle_declaration',2,'p_cycle_declaration','parser.py',119),
  ('cycle_declaration -> empty','cycle_declaration',1,'p_cycle_declaration','parser.py',120),
  ('functions -> function post_functions','functions',2,'p_functions','parser.py',124),
  ('post_functions -> functions','post_functions',1,'p_post_functions','parser.py',127),
  ('post_functions -> empty','post_functions',1,'p_post_functions','parser.py',128),
  ('main -> MAIN fill_goto set_main_scope required_eol post_variables block END_MAIN push_end optional_eol','main',9,'p_main','parser.py',132),
  ('push_end -> <empty>','push_end',0,'p_push_end','parser.py',135),
  ('set_main_scope -> <empty>','set_main_scope',0,'p_set_main_scope','parser.py',139),
  ('block -> statement post_block','block',2,'p_block','parser.py',147),
  ('post_block -> block','post_block',1,'p_post_block','parser.py',150),
  ('post_block -> empty','post_block',1,'p_post_block','parser.py',151),
  ('call_function -> ID validate_function_call LEFT_PARENTHESIS push_paren post_call_function','call_function',5,'p_call_function','parser.py',155),
  ('validate_function_call -> <empty>','validate_function_call',0,'p_validate_function_call','parser.py',159),
  ('post_call_function -> arguments RIGHT_PARENTHESIS pop_paren validate_call_arguments','post_call_function',4,'p_post_call_function','parser.py',166),
  ('post_call_function -> RIGHT_PARENTHESIS pop_paren validate_call_arguments','post_call_function',3,'p_post_call_function','parser.py',167),
  ('validate_call_arguments -> <empty>','validate_call_arguments',0,'p_validate_call_arguments','parser.py',170),
  ('arguments -> cond increase_call_arguments post_arguments','arguments',3,'p_arguments','parser.py',181),
  ('increase_call_arguments -> <empty>','increase_call_arguments',0,'p_increase_call_arguments','parser.py',185),
  ('post_arguments -> COMMA arguments','post_arguments',2,'p_post_arguments','parser.py',193),
  ('post_arguments -> empty','post_arguments',1,'p_post_arguments','parser.py',194),
  ('function -> FUNC func_types set_type ID register_function LEFT_PARENTHESIS post_function','function',7,'p_function','parser.py',198),
  ('func_types -> types','func_types',1,'p_func_types','parser.py',201),
  ('func_types -> VOID','func_types',1,'p_func_types','parser.py',202),
  ('register_function -> <empty>','register_function',0,'p_register_function','parser.py',208),
  ('post_function -> parameters RIGHT_PARENTHESIS required_eol post_variables func_return','post_function',5,'p_post_function','parser.py',219),
  ('post_function -> RIGHT_PARENTHESIS required_eol post_variables func_return','post_function',4,'p_post_function','parser.py',220),
  ('func_return -> void_return','func_return',1,'p_func_return','parser.py',223),
  ('func_return -> value_return','func_return',1,'p_func_return','parser.py',224),
  ('void_return -> block post_void_return','void_return',2,'p_void_return','parser.py',227),
  ('post_void_return -> END reset_scope required_eol','post_void_return',3,'p_post_void_return','parser.py',230),
  ('post_void_return -> RETURN required_eol END reset_scope required_eol','post_void_return',5,'p_post_void_return','parser.py',231),
  ('value_return -> block RETURN cond create_return required_eol END reset_scope required_eol','value_return',8,'p_value_return','parser.py',234),
  ('value_return -> RETURN cond create_return required_eol END reset_scope required_eol','value_return',7,'p_value_return','parser.py',235),
  ('create_return -> <empty>','create_return',0,'p_create_return','parser.py',238),
  ('reset_scope -> <empty>','reset_scope',0,'p_reset_scope','parser.py',243),
  ('parameters -> finish_evaluating start_params types set_type identifier update_function_parameters post_parameters finish_params start_evaluating','parameters',9,'p_parameters','parser.py',250),
  ('start_params -> <empty>','start_params',0,'p_start_params','parser.py',253),
  ('finish_params -> <empty>','finish_params',0,'p_finish_params','parser.py',257),
  ('update_function_parameters -> <empty>','update_function_parameters',0,'p_update_function_parameters','parser.py',262),
  ('post_parameters -> COMMA parameters','post_parameters',2,'p_post_parameters','parser.py',266),
  ('post_parameters -> empty','post_parameters',1,'p_post_parameters','parser.py',267),
  ('statement -> assignment required_eol','statement',2,'p_statement','parser.py',271),
  ('statement -> condition required_eol','statement',2,'p_statement','parser.py',272),
  ('statement -> print required_eol','statement',2,'p_statement','parser.py',273),
  ('statement -> read required_eol','statement',2,'p_statement','parser.py',274),
  ('statement -> loop required_eol','statement',2,'p_statement','parser.py',275),
  ('statement -> call_function required_eol','statement',2,'p_statement','parser.py',276),
  ('assignment -> ID validate_var push_var array_notation assignment_operator cond pop_assignment','assignment',7,'p_assignment','parser.py',281),
  ('validate_var -> <empty>','validate_var',0,'p_validate_var','parser.py',284),
  ('push_var -> <empty>','push_var',0,'p_push_var','parser.py',289),
  ('array_notation -> LEFT_BRACKET verify_var_dim exp RIGHT_BRACKET end_array','array_notation',5,'p_array_notation','parser.py',296),
  ('array_notation -> empty','array_notation',1,'p_array_notation','parser.py',297),
  ('verify_var_dim -> <empty>','verify_var_dim',0,'p_verify_var_dim','parser.py',300),
  ('end_array -> <empty>','end_array',0,'p_end_array','parser.py',309),
  ('assignment_operator -> EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',314),
  ('assignment_operator -> TIMES_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',315),
  ('assignment_operator -> DIVIDE_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',316),
  ('assignment_operator -> PLUS_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',317),
  ('assignment_operator -> MINUS_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',318),
  ('push_assignment -> <empty>','push_assignment',0,'p_push_assignment','parser.py',321),
  ('pop_assignment -> <empty>','pop_assignment',0,'p_pop_assignment','parser.py',325),
  ('start_evaluating -> <empty>','start_evaluating',0,'p_start_evaluating','parser.py',331),
  ('finish_evaluating -> <empty>','finish_evaluating',0,'p_finish_evaluating','parser.py',335),
  ('cond -> expression pop_op_and_or post_cond','cond',3,'p_cond','parser.py',340),
  ('pop_op_and_or -> <empty>','pop_op_and_or',0,'p_pop_op_and_or','parser.py',343),
  ('post_cond -> AND push_op_and_or cond','post_cond',3,'p_post_cond','parser.py',348),
  ('post_cond -> OR push_op_and_or cond','post_cond',3,'p_post_cond','parser.py',349),
  ('post_cond -> empty','post_cond',1,'p_post_cond','parser.py',350),
  ('push_op_and_or -> <empty>','push_op_and_or',0,'p_push_op_and_or','parser.py',353),
  ('expression -> exp pop_relop post_expression','expression',3,'p_expression','parser.py',358),
  ('pop_relop -> <empty>','pop_relop',0,'p_pop_relop','parser.py',361),
  ('post_expression -> relational_operator expression','post_expression',2,'p_post_expression','parser.py',367),
  ('post_expression -> empty','post_expression',1,'p_post_expression','parser.py',368),
  ('push_relop -> <empty>','push_relop',0,'p_push_relop','parser.py',371),
  ('relational_operator -> LESS push_relop','relational_operator',2,'p_relational_operator','parser.py',376),
  ('relational_operator -> GREATER push_relop','relational_operator',2,'p_relational_operator','parser.py',377),
  ('relational_operator -> GREATER_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',378),
  ('relational_operator -> LESS_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',379),
  ('relational_operator -> EQUALS_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',380),
  ('relational_operator -> NOT_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',381),
  ('exp -> term pop_exp post_exp','exp',3,'p_exp','parser.py',385),
  ('pop_exp -> <empty>','pop_exp',0,'p_pop_exp','parser.py',388),
  ('post_exp -> PLUS push_exp exp','post_exp',3,'p_post_exp','parser.py',393),
  ('post_exp -> MINUS push_exp exp','post_exp',3,'p_post_exp','parser.py',394),
  ('post_exp -> empty','post_exp',1,'p_post_exp','parser.py',395),
  ('push_exp -> <empty>','push_exp',0,'p_push_exp','parser.py',398),
  ('term -> factor pop_term post_term','term',3,'p_term','parser.py',404),
  ('pop_term -> <empty>','pop_term',0,'p_pop_term','parser.py',407),
  ('post_term -> TIMES push_term term','post_term',3,'p_post_term','parser.py',413),
  ('post_term -> DIVIDE push_term term','post_term',3,'p_post_term','parser.py',414),
  ('post_term -> PERCENTAGE push_term term','post_term',3,'p_post_term','parser.py',415),
  ('post_term -> MOD push_term term','post_term',3,'p_post_term','parser.py',416),
  ('post_term -> empty','post_term',1,'p_post_term','parser.py',417),
  ('push_term -> <empty>','push_term',0,'p_push_term','parser.py',420),
  ('factor -> LEFT_PARENTHESIS push_paren cond RIGHT_PARENTHESIS pop_paren','factor',5,'p_factor','parser.py',425),
  ('factor -> variable_constant','factor',1,'p_factor','parser.py',426),
  ('factor -> MINUS variable_constant','factor',2,'p_factor','parser.py',427),
  ('factor -> call_function','factor',1,'p_factor','parser.py',428),
  ('push_paren -> <empty>','push_paren',0,'p_push_paren','parser.py',431),
  ('pop_paren -> <empty>','pop_paren',0,'p_pop_paren','parser.py',435),
  ('variable_constant -> ID process_variable array_notation','variable_constant',3,'p_variable_constant','parser.py',440),
  ('variable_constant -> INT_CONSTANT push_constant','variable_constant',2,'p_variable_constant','parser.py',441),
  ('variable_constant -> DOUBLE_CONSTANT push_constant','variable_constant',2,'p_variable_constant','parser.py',442),
  ('variable_constant -> STRING_CONSTANT push_constant','variable_constant',2,'p_variable_constant','parser.py',443),
  ('variable_constant -> BOOL_CONSTANT push_constant','variable_constant',2,'p_variable_constant','parser.py',444),
  ('push_constant -> <empty>','push_constant',0,'p_push_constant','parser.py',447),
  ('process_variable -> <empty>','process_variable',0,'p_process_variable','parser.py',452),
  ('condition -> IF cond COLON push_gotoF optional_eol block post_condition END','condition',8,'p_condition','parser.py',467),
  ('push_gotoF -> <empty>','push_gotoF',0,'p_push_gotoF','parser.py',470),
  ('fill_goto -> <empty>','fill_goto',0,'p_fill_goto','parser.py',474),
  ('post_condition -> else','post_condition',1,'p_post_condition','parser.py',479),
  ('post_condition -> fill_goto empty','post_condition',2,'p_post_condition','parser.py',480),
  ('else -> ELSE fill_goto_plus COLON push_goto optional_eol block fill_goto','else',7,'p_else','parser.py',484),
  ('fill_goto_plus -> <empty>','fill_goto_plus',0,'p_fill_goto_plus','parser.py',487),
  ('push_goto -> <empty>','push_goto',0,'p_push_goto','parser.py',491),
  ('print -> PRINT cond post_print','print',3,'p_print','parser.py',496),
  ('post_print -> print_mod','post_print',1,'p_post_print','parser.py',499),
  ('post_print -> print_default','post_print',1,'p_post_print','parser.py',500),
  ('print_mod -> COMMA STRING_CONSTANT print_post_mod','print_mod',3,'p_print_mod','parser.py',503),
  ('print_post_mod -> <empty>','print_post_mod',0,'p_print_post_mod','parser.py',506),
  ('print_default -> empty','print_default',1,'p_print_default','parser.py',510),
  ('read -> READ start_read LEFT_PARENTHESIS identifier RIGHT_PARENTHESIS read_var','read',6,'p_read','parser.py',515),
  ('start_read -> <empty>','start_read',0,'p_start_read','parser.py',518),
  ('read_var -> <empty>','read_var',0,'p_read_var','parser.py',522),
  ('identifier -> ID process_variable post_identifier','identifier',3,'p_identifier','parser.py',530),
  ('post_identifier -> LEFT_BRACKET exp RIGHT_BRACKET','post_identifier',3,'p_post_identifier','parser.py',533),
  ('post_identifier -> empty','post_identifier',1,'p_post_identifier','parser.py',534),
  ('loop -> for','loop',1,'p_loop','parser.py',538),
  ('loop -> while','loop',1,'p_loop','parser.py',539),
  ('for -> FOR ID add_var FROM exp init_var TO exp push_for_cycle post_cycle end_for_loop','for',11,'p_for','parser.py',543),
  ('add_var -> <empty>','add_var',0,'p_add_var','parser.py',546),
  ('init_var -> <empty>','init_var',0,'p_init_var','parser.py',554),
  ('push_for_cycle -> <empty>','push_for_cycle',0,'p_push_for_cycle','parser.py',559),
  ('end_for_loop -> <empty>','end_for_loop',0,'p_end_for_loop','parser.py',566),
  ('while -> WHILE push_cycle cond push_gotoF post_cycle fill_goto_plus create_pending_goto','while',7,'p_while','parser.py',578),
  ('push_cycle -> <empty>','push_cycle',0,'p_push_cycle','parser.py',581),
  ('create_pending_goto -> <empty>','create_pending_goto',0,'p_create_pending_goto','parser.py',585),
  ('post_cycle -> COLON optional_eol block END','post_cycle',4,'p_post_cycle','parser.py',590),
  ('BOOL_CONSTANT -> TRUE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',593),
  ('BOOL_CONSTANT -> FALSE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',594),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',597),
]
