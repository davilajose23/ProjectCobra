
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '62734B7968D777499761F08DBFD7E6EE'
    
_lr_action_items = {'LESS':([6,22,24,35,48,49,51,53,54,55,57,58,59,60,61,63,73,74,85,87,89,91,94,108,109,120,125,126,127,128,129,],[-2,-80,-82,-2,-63,-54,-92,-61,-60,-2,-2,-93,-62,96,-59,-52,-4,-6,-52,-47,-50,-43,-46,-53,-81,-5,-49,-48,-51,-44,-45,]),'READ':([6,11,22,24,25,30,32,33,34,35,36,39,41,42,44,48,49,51,53,54,55,57,58,59,60,61,62,63,67,73,74,76,83,84,85,87,89,91,94,100,102,104,107,108,109,111,113,114,115,117,119,120,122,125,126,127,128,129,130,131,132,133,135,138,139,140,142,143,144,145,147,148,149,151,152,153,155,156,157,158,159,160,161,],[-2,26,-80,-82,-23,-83,-20,-21,-18,-2,-19,-84,-22,-8,26,-63,-54,-92,-61,-60,-2,-2,-93,-62,-2,-59,-2,-52,-2,-4,-6,26,-24,-94,-52,-47,-50,-43,-46,-34,-36,-30,-33,-53,-81,-73,-75,26,-88,-85,26,-5,-10,-49,-48,-51,-44,-45,-35,-31,-32,-76,26,26,-64,-9,-74,-89,26,-91,-86,-67,-66,-68,-65,-90,26,-87,-69,26,-71,-72,-70,]),'RIGHT_BRACKET':([6,22,24,35,48,49,51,53,54,55,57,58,59,61,63,65,73,74,82,87,89,91,94,108,109,120,125,126,127,128,129,],[-2,-80,-82,-2,-63,-54,-92,-61,-60,-2,-2,-93,-62,-59,-52,109,-4,-6,124,-47,-50,-43,-46,-53,-81,-5,-49,-48,-51,-44,-45,]),'EOL':([5,6,22,24,35,48,49,50,51,53,54,55,57,58,59,60,61,62,63,73,74,84,85,87,89,91,94,100,102,104,107,108,109,110,120,124,125,126,127,128,129,130,131,132,134,],[19,-2,-80,-82,-2,-63,-54,83,-92,-61,-60,-2,-2,-93,-62,-2,-59,-2,-52,-4,-6,-94,-52,-47,-50,-43,-46,-34,-36,-30,-33,-53,-81,133,-5,141,-49,-48,-51,-44,-45,-35,-31,-32,142,]),'EQUALS_EQUALS':([6,22,24,35,48,49,51,53,54,55,57,58,59,60,61,63,73,74,85,87,89,91,94,108,109,120,125,126,127,128,129,],[-2,-80,-82,-2,-63,-54,-92,-61,-60,-2,-2,-93,-62,99,-59,-52,-4,-6,-52,-47,-50,-43,-46,-53,-81,-5,-49,-48,-51,-44,-45,]),'WHILE':([6,11,22,24,25,30,32,33,34,35,36,39,41,42,44,48,49,51,53,54,55,57,58,59,60,61,62,63,67,73,74,76,83,84,85,87,89,91,94,100,102,104,107,108,109,111,113,114,115,117,119,120,122,125,126,127,128,129,130,131,132,133,135,138,139,140,142,143,144,145,147,148,149,151,152,153,155,156,157,158,159,160,161,],[-2,28,-80,-82,-23,-83,-20,-21,-18,-2,-19,-84,-22,-8,28,-63,-54,-92,-61,-60,-2,-2,-93,-62,-2,-59,-2,-52,-2,-4,-6,28,-24,-94,-52,-47,-50,-43,-46,-34,-36,-30,-33,-53,-81,-73,-75,28,-88,-85,28,-5,-10,-49,-48,-51,-44,-45,-35,-31,-32,-76,28,28,-64,-9,-74,-89,28,-91,-86,-67,-66,-68,-65,-90,28,-87,-69,28,-71,-72,-70,]),'PRINT':([6,11,22,24,25,30,32,33,34,35,36,39,41,42,44,48,49,51,53,54,55,57,58,59,60,61,62,63,67,73,74,76,83,84,85,87,89,91,94,100,102,104,107,108,109,111,113,114,115,117,119,120,122,125,126,127,128,129,130,131,132,133,135,138,139,140,142,143,144,145,147,148,149,151,152,153,155,156,157,158,159,160,161,],[-2,27,-80,-82,-23,-83,-20,-21,-18,-2,-19,-84,-22,-8,27,-63,-54,-92,-61,-60,-2,-2,-93,-62,-2,-59,-2,-52,-2,-4,-6,27,-24,-94,-52,-47,-50,-43,-46,-34,-36,-30,-33,-53,-81,-73,-75,27,-88,-85,27,-5,-10,-49,-48,-51,-44,-45,-35,-31,-32,-76,27,27,-64,-9,-74,-89,27,-91,-86,-67,-66,-68,-65,-90,27,-87,-69,27,-71,-72,-70,]),'GREATER_EQUALS':([6,22,24,35,48,49,51,53,54,55,57,58,59,60,61,63,73,74,85,87,89,91,94,108,109,120,125,126,127,128,129,],[-2,-80,-82,-2,-63,-54,-92,-61,-60,-2,-2,-93,-62,101,-59,-52,-4,-6,-52,-47,-50,-43,-46,-53,-81,-5,-49,-48,-51,-44,-45,]),'MINUS':([6,14,16,17,18,20,21,22,23,24,27,28,35,37,47,48,49,51,52,53,54,55,56,57,58,59,61,63,73,74,75,85,86,87,88,89,92,93,95,96,97,98,99,101,103,105,106,108,109,116,120,125,126,127,146,],[-2,-29,-26,-27,-25,52,-28,-80,64,-82,52,52,-2,52,64,-63,-54,-92,52,-61,-60,-2,52,93,-93,-62,-59,-52,-4,-6,-25,-52,64,-47,64,-50,64,64,-38,-37,-42,-40,-41,-39,64,52,52,-53,-81,64,-5,-49,-48,-51,64,]),'MINUS_EQUALS':([5,6,22,24,35,40,109,],[14,-2,-80,-82,-2,14,-81,]),'TIMES_EQUALS':([5,6,22,24,35,40,109,],[16,-2,-80,-82,-2,16,-81,]),'NOT_EQUALS':([6,22,24,35,48,49,51,53,54,55,57,58,59,60,61,63,73,74,85,87,89,91,94,108,109,120,125,126,127,128,129,],[-2,-80,-82,-2,-63,-54,-92,-61,-60,-2,-2,-93,-62,97,-59,-52,-4,-6,-52,-47,-50,-43,-46,-53,-81,-5,-49,-48,-51,-44,-45,]),'DOUBLE_CONSTANT':([14,16,17,18,20,21,23,27,28,37,47,52,56,64,75,86,88,92,93,95,96,97,98,99,101,103,105,106,116,146,],[-29,-26,-27,-25,53,-28,53,53,53,53,53,53,53,53,-25,53,53,53,53,-38,-37,-42,-40,-41,-39,53,53,53,53,53,]),'LESS_EQUALS':([6,22,24,35,48,49,51,53,54,55,57,58,59,60,61,63,73,74,85,87,89,91,94,108,109,120,125,126,127,128,129,],[-2,-80,-82,-2,-63,-54,-92,-61,-60,-2,-2,-93,-62,98,-59,-52,-4,-6,-52,-47,-50,-43,-46,-53,-81,-5,-49,-48,-51,-44,-45,]),'PLUS':([6,22,24,35,48,49,51,53,54,55,57,58,59,61,63,73,74,85,87,89,108,109,120,125,126,127,],[-2,-80,-82,-2,-63,-54,-92,-61,-60,-2,92,-93,-62,-59,-52,-4,-6,-52,-47,-50,-53,-81,-5,-49,-48,-51,]),'TO':([6,22,24,35,48,49,51,53,54,55,57,58,59,61,63,73,74,87,89,91,94,108,109,120,125,126,127,128,129,136,],[-2,-80,-82,-2,-63,-54,-92,-61,-60,-2,-2,-93,-62,-59,-52,-4,-6,-47,-50,-43,-46,-53,-81,-5,-49,-48,-51,-44,-45,146,]),'INT_CONSTANT':([14,16,17,18,20,21,23,27,28,37,47,52,56,64,75,86,88,92,93,95,96,97,98,99,101,103,105,106,116,146,],[-29,-26,-27,-25,54,-28,54,54,54,54,54,54,54,54,-25,54,54,54,54,-38,-37,-42,-40,-41,-39,54,54,54,54,54,]),'COLON':([6,22,24,35,48,49,51,53,54,55,57,58,59,60,61,62,63,68,71,73,74,84,85,87,89,91,94,100,102,104,107,108,109,120,125,126,127,128,129,130,131,132,137,150,154,],[-2,-80,-82,-2,-63,-54,-92,-61,-60,-2,-2,-93,-62,-2,-59,-2,-52,114,119,-4,-6,-94,-52,-47,-50,-43,-46,-34,-36,-30,-33,-53,-81,-5,-49,-48,-51,-44,-45,-35,-31,-32,114,155,114,]),'COMMA':([6,22,24,35,45,48,49,51,53,54,55,57,58,59,60,61,62,63,67,73,74,84,85,87,89,91,94,100,102,104,107,108,109,120,125,126,127,128,129,130,131,132,],[-2,-80,-82,-2,79,-63,-54,-92,-61,-60,-2,-2,-93,-62,-2,-59,-2,-52,112,-4,-6,-94,-52,-47,-50,-43,-46,-34,-36,-30,-33,-53,-81,-5,-49,-48,-51,-44,-45,-35,-31,-32,]),'IF':([6,11,22,24,25,30,32,33,34,35,36,39,41,42,44,48,49,51,53,54,55,57,58,59,60,61,62,63,67,73,74,76,83,84,85,87,89,91,94,100,102,104,107,108,109,111,113,114,115,117,119,120,122,125,126,127,128,129,130,131,132,133,135,138,139,140,142,143,144,145,147,148,149,151,152,153,155,156,157,158,159,160,161,],[-2,37,-80,-82,-23,-83,-20,-21,-18,-2,-19,-84,-22,-8,37,-63,-54,-92,-61,-60,-2,-2,-93,-62,-2,-59,-2,-52,-2,-4,-6,37,-24,-94,-52,-47,-50,-43,-46,-34,-36,-30,-33,-53,-81,-73,-75,37,-88,-85,37,-5,-10,-49,-48,-51,-44,-45,-35,-31,-32,-76,37,37,-64,-9,-74,-89,37,-91,-86,-67,-66,-68,-65,-90,37,-87,-69,37,-71,-72,-70,]),'LEFT_PARENTHESIS':([14,16,17,18,20,21,23,26,27,28,35,37,46,47,52,56,75,86,88,92,93,95,96,97,98,99,101,103,105,106,116,146,],[-29,-26,-27,-25,56,-28,56,66,56,56,70,56,81,56,56,56,-25,56,56,56,56,-38,-37,-42,-40,-41,-39,56,56,56,56,56,]),'$end':([3,6,22,24,25,30,31,32,33,34,35,36,39,41,48,49,51,53,54,55,57,58,59,60,61,62,63,67,73,74,83,84,85,87,89,91,94,100,102,104,107,108,109,111,113,115,117,120,125,126,127,128,129,130,131,132,133,139,142,143,145,147,148,149,151,152,153,156,157,159,160,161,],[0,-2,-80,-82,-23,-83,-1,-20,-21,-18,-2,-19,-84,-22,-63,-54,-92,-61,-60,-2,-2,-93,-62,-2,-59,-2,-52,-2,-4,-6,-24,-94,-52,-47,-50,-43,-46,-34,-36,-30,-33,-53,-81,-73,-75,-88,-85,-5,-49,-48,-51,-44,-45,-35,-31,-32,-76,-64,-74,-89,-91,-86,-67,-66,-68,-65,-90,-87,-69,-71,-72,-70,]),'END':([6,22,24,25,30,32,33,34,35,36,39,41,48,49,51,53,54,55,57,58,59,60,61,62,63,67,73,74,77,83,84,85,87,89,91,94,100,102,104,107,108,109,111,113,115,117,120,121,125,126,127,128,129,130,131,132,133,135,138,139,142,143,144,145,147,148,149,151,152,153,156,157,158,159,160,161,],[-2,-80,-82,-23,-83,-20,-21,-18,-2,-19,-84,-22,-63,-54,-92,-61,-60,-2,-2,-93,-62,-2,-59,-2,-52,-2,-4,-6,122,-24,-94,-52,-47,-50,-43,-46,-34,-36,-30,-33,-53,-81,-73,-75,-88,-85,-5,140,-49,-48,-51,-44,-45,-35,-31,-32,-76,145,148,-64,-74,-89,145,-91,-86,-67,-66,-68,-65,-90,-87,-69,160,-71,-72,-70,]),'DIVIDE':([6,22,24,35,48,49,51,53,54,55,58,59,61,63,73,74,85,108,109,120,127,],[-2,-80,-82,-2,-63,-54,-92,-61,-60,86,-93,-62,-59,-52,-4,-6,-52,-53,-81,-5,-51,]),'FOR':([6,11,22,24,25,30,32,33,34,35,36,39,41,42,44,48,49,51,53,54,55,57,58,59,60,61,62,63,67,73,74,76,83,84,85,87,89,91,94,100,102,104,107,108,109,111,113,114,115,117,119,120,122,125,126,127,128,129,130,131,132,133,135,138,139,140,142,143,144,145,147,148,149,151,152,153,155,156,157,158,159,160,161,],[-2,29,-80,-82,-23,-83,-20,-21,-18,-2,-19,-84,-22,-8,29,-63,-54,-92,-61,-60,-2,-2,-93,-62,-2,-59,-2,-52,-2,-4,-6,29,-24,-94,-52,-47,-50,-43,-46,-34,-36,-30,-33,-53,-81,-73,-75,29,-88,-85,29,-5,-10,-49,-48,-51,-44,-45,-35,-31,-32,-76,29,29,-64,-9,-74,-89,29,-91,-86,-67,-66,-68,-65,-90,29,-87,-69,29,-71,-72,-70,]),'EQUALS':([5,6,22,24,35,40,109,],[18,-2,-80,-82,-2,75,-81,]),'TIMES':([6,22,24,35,48,49,51,53,54,55,58,59,61,63,73,74,85,108,109,120,127,],[-2,-80,-82,-2,-63,-54,-92,-61,-60,88,-93,-62,-59,-52,-4,-6,-52,-53,-81,-5,-51,]),'FUNC':([1,2,4,7,8,9,10,15,19,83,141,],[-2,-2,13,-16,-14,-17,-15,-77,-79,-24,-78,]),'IN':([6,22,24,69,109,],[-2,-80,-82,118,-81,]),'FALSE':([14,16,17,18,20,21,23,27,28,37,47,52,56,64,75,86,88,92,93,95,96,97,98,99,101,103,105,106,116,146,],[-29,-26,-27,-25,58,-28,58,58,58,58,58,58,58,58,-25,58,58,58,58,-38,-37,-42,-40,-41,-39,58,58,58,58,58,]),'RIGHT_PARENTHESIS':([6,12,22,24,35,38,43,45,48,49,51,53,54,55,57,58,59,60,61,62,63,66,70,72,73,74,78,80,81,84,85,87,89,90,91,94,100,102,104,107,108,109,120,123,125,126,127,128,129,130,131,132,],[-2,44,-80,-82,-2,74,76,-2,-63,-54,-92,-61,-60,-2,-2,-93,-62,-2,-59,-2,-52,110,-3,120,-4,-6,-11,-13,-7,-94,-52,-47,-50,127,-43,-46,-34,-36,-30,-33,-53,-81,-5,-12,-49,-48,-51,-44,-45,-35,-31,-32,]),'ELSE':([6,22,24,25,30,32,33,34,35,36,39,41,48,49,51,53,54,55,57,58,59,60,61,62,63,67,73,74,83,84,85,87,89,91,94,100,102,104,107,108,109,111,113,115,117,120,125,126,127,128,129,130,131,132,133,138,139,142,143,145,147,148,149,151,152,153,156,157,159,160,161,],[-2,-80,-82,-23,-83,-20,-21,-18,-2,-19,-84,-22,-63,-54,-92,-61,-60,-2,-2,-93,-62,-2,-59,-2,-52,-2,-4,-6,-24,-94,-52,-47,-50,-43,-46,-34,-36,-30,-33,-53,-81,-73,-75,-88,-85,-5,-49,-48,-51,-44,-45,-35,-31,-32,-76,150,-64,-74,-89,-91,-86,-67,-66,-68,-65,-90,-87,-69,-71,-72,-70,]),'ID':([0,1,2,6,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,32,33,34,35,36,37,38,39,41,42,44,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,70,73,74,75,76,79,81,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,113,114,115,116,117,118,119,120,122,125,126,127,128,129,130,131,132,133,135,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,155,156,157,158,159,160,161,],[6,6,6,-2,35,6,46,-29,-77,-26,-27,-25,-79,35,-28,-80,35,-82,-23,35,35,6,-83,-20,-21,-18,-2,-19,35,6,-84,-22,-8,35,35,-63,-54,-92,35,-61,-60,-2,35,-2,-93,-62,-2,-59,-2,-52,6,-2,-3,-4,-6,-25,35,6,-7,-24,-94,-52,35,-47,35,-50,-43,35,35,-46,-38,-37,-42,-40,-41,-34,-39,-36,35,-30,35,35,-33,-53,-81,-73,-75,35,-88,35,-85,6,35,-5,-10,-49,-48,-51,-44,-45,-35,-31,-32,-76,35,35,-64,-9,-78,-74,-89,35,-91,35,-86,-67,-66,-68,-65,-90,35,-87,-69,35,-71,-72,-70,]),'TRUE':([14,16,17,18,20,21,23,27,28,37,47,52,56,64,75,86,88,92,93,95,96,97,98,99,101,103,105,106,116,146,],[-29,-26,-27,-25,51,-28,51,51,51,51,51,51,51,51,-25,51,51,51,51,-38,-37,-42,-40,-41,-39,51,51,51,51,51,]),'PLUS_EQUALS':([5,6,22,24,35,40,109,],[21,-2,-80,-82,-2,21,-81,]),'AND':([6,22,24,35,48,49,51,53,54,55,57,58,59,60,61,62,63,73,74,84,85,87,89,91,94,100,102,108,109,120,125,126,127,128,129,130,],[-2,-80,-82,-2,-63,-54,-92,-61,-60,-2,-2,-93,-62,-2,-59,105,-52,-4,-6,-94,-52,-47,-50,-43,-46,-34,-36,-53,-81,-5,-49,-48,-51,-44,-45,-35,]),'FROM':([6,22,24,69,109,],[-2,-80,-82,116,-81,]),'GREATER':([6,22,24,35,48,49,51,53,54,55,57,58,59,60,61,63,73,74,85,87,89,91,94,108,109,120,125,126,127,128,129,],[-2,-80,-82,-2,-63,-54,-92,-61,-60,-2,-2,-93,-62,95,-59,-52,-4,-6,-52,-47,-50,-43,-46,-53,-81,-5,-49,-48,-51,-44,-45,]),'DIVIDE_EQUALS':([5,6,22,24,35,40,109,],[17,-2,-80,-82,-2,17,-81,]),'STRING_CONSTANT':([14,16,17,18,20,21,23,27,28,37,47,52,56,64,75,86,88,92,93,95,96,97,98,99,101,103,105,106,112,116,146,],[-29,-26,-27,-25,59,-28,59,59,59,59,59,59,59,59,-25,59,59,59,59,-38,-37,-42,-40,-41,-39,59,59,59,134,59,59,]),'LEFT_BRACKET':([6,18,35,],[23,47,23,]),'OR':([6,22,24,35,48,49,51,53,54,55,57,58,59,60,61,62,63,73,74,84,85,87,89,91,94,100,102,108,109,120,125,126,127,128,129,130,],[-2,-80,-82,-2,-63,-54,-92,-61,-60,-2,-2,-93,-62,-2,-59,106,-52,-4,-6,-94,-52,-47,-50,-43,-46,-34,-36,-53,-81,-5,-49,-48,-51,-44,-45,-35,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'BOOL_CONSTANT':([20,23,27,28,37,47,52,56,64,86,88,92,93,103,105,106,116,146,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'relational_operator':([60,],[103,]),'call_function':([11,20,23,27,28,37,44,47,52,56,76,86,88,92,93,103,105,106,114,116,119,135,138,144,146,155,158,],[25,49,49,49,49,49,25,49,49,49,25,49,49,49,49,49,49,49,25,49,25,25,25,25,49,25,25,]),'post_else':([155,158,],[157,159,]),'post_parameters':([45,],[78,]),'cond':([20,27,28,37,56,105,106,],[50,67,68,71,90,131,132,]),'post_print':([67,],[111,]),'post_cycle':([68,137,154,],[115,147,156,]),'post_cond':([62,],[104,]),'post_post_cycle':([135,144,],[143,153,]),'post_condition':([119,138,],[139,149,]),'for':([11,44,76,114,119,135,138,144,155,158,],[30,30,30,30,30,30,30,30,30,30,]),'post_call_function':([38,],[73,]),'pre_def_function':([4,],[12,]),'program':([0,],[3,]),'statement':([11,44,76,114,119,135,138,144,155,158,],[31,77,121,135,138,144,138,144,158,158,]),'factor':([20,23,27,28,37,47,52,56,86,88,92,93,103,105,106,116,146,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'print':([11,44,76,114,119,135,138,144,155,158,],[32,32,32,32,32,32,32,32,32,32,]),'post_variable':([1,2,],[8,10,]),'empty':([1,2,6,35,45,55,57,60,62,67,],[9,9,24,24,80,89,94,102,107,113,]),'function':([4,],[11,]),'post_post_condition':([138,],[152,]),'post_for':([69,],[117,]),'read':([11,44,76,114,119,135,138,144,155,158,],[33,33,33,33,33,33,33,33,33,33,]),'assignment':([0,1,2,11,44,76,114,119,135,138,144,155,158,],[1,1,1,34,34,34,34,34,34,34,34,34,34,]),'post_term':([55,],[87,]),'else':([138,],[151,]),'post_identifier':([6,35,],[22,22,]),'variable':([0,1,2,],[4,7,7,]),'variable_constant':([20,23,27,28,37,47,52,56,64,86,88,92,93,103,105,106,116,146,],[63,63,63,63,63,63,85,63,108,63,63,63,63,63,63,63,63,63,]),'post_post_else':([158,],[161,]),'condition':([11,44,76,114,119,135,138,144,155,158,],[36,36,36,36,36,36,36,36,36,36,]),'post_def_function':([12,],[42,]),'term':([20,23,27,28,37,47,52,56,86,88,92,93,103,105,106,116,146,],[57,57,57,57,57,57,57,57,125,126,57,57,57,57,57,57,57,]),'post_list':([5,],[15,]),'parameters':([12,38,79,],[43,72,123,]),'pre_call_function':([11,20,23,27,28,37,44,47,52,56,76,86,88,92,93,103,105,106,114,116,119,135,138,144,146,155,158,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'list':([0,1,2,],[2,2,2,]),'while':([11,44,76,114,119,135,138,144,155,158,],[39,39,39,39,39,39,39,39,39,39,]),'post_expression':([60,],[100,]),'assignment_operator':([5,40,],[20,20,]),'exp':([20,23,27,28,37,47,52,56,92,93,103,105,106,116,146,],[60,65,60,60,60,82,60,60,128,129,130,60,60,136,154,]),'identifier':([0,1,2,11,12,20,23,27,28,29,37,38,44,47,52,56,64,76,79,86,88,92,93,103,105,106,114,116,118,119,135,138,144,146,155,158,],[5,5,5,40,45,61,61,61,61,69,61,45,40,61,61,61,61,40,45,61,61,61,61,61,61,61,40,61,137,40,40,40,40,61,40,40,]),'expression':([20,27,28,37,52,56,105,106,],[62,62,62,62,84,62,62,62,]),'post_exp':([57,],[91,]),'loop':([11,44,76,114,119,135,138,144,155,158,],[41,41,41,41,41,41,41,41,41,41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> variable function statement','program',3,'p_program','parser.py',18),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',21),
  ('pre_call_function -> ID LEFT_PARENTHESIS','pre_call_function',2,'p_pre_call_function','parser.py',25),
  ('call_function -> pre_call_function post_call_function','call_function',2,'p_call_function','parser.py',28),
  ('post_call_function -> parameters RIGHT_PARENTHESIS','post_call_function',2,'p_post_call_function','parser.py',31),
  ('post_call_function -> RIGHT_PARENTHESIS','post_call_function',1,'p_post_call_function','parser.py',32),
  ('pre_def_function -> FUNC ID LEFT_PARENTHESIS','pre_def_function',3,'p_pre_def_function','parser.py',35),
  ('function -> pre_def_function post_def_function','function',2,'p_function','parser.py',38),
  ('post_def_function -> parameters RIGHT_PARENTHESIS statement END','post_def_function',4,'p_post_def_function','parser.py',41),
  ('post_def_function -> RIGHT_PARENTHESIS statement END','post_def_function',3,'p_post_def_function','parser.py',42),
  ('parameters -> identifier post_parameters','parameters',2,'p_parameters','parser.py',45),
  ('post_parameters -> COMMA parameters','post_parameters',2,'p_post_parameters','parser.py',48),
  ('post_parameters -> empty','post_parameters',1,'p_post_parameters','parser.py',49),
  ('variable -> assignment post_variable','variable',2,'p_variable','parser.py',52),
  ('variable -> list post_variable','variable',2,'p_variable','parser.py',53),
  ('post_variable -> variable','post_variable',1,'p_post_variable','parser.py',56),
  ('post_variable -> empty','post_variable',1,'p_post_variable','parser.py',57),
  ('statement -> assignment','statement',1,'p_statement','parser.py',60),
  ('statement -> condition','statement',1,'p_statement','parser.py',61),
  ('statement -> print','statement',1,'p_statement','parser.py',62),
  ('statement -> read','statement',1,'p_statement','parser.py',63),
  ('statement -> loop','statement',1,'p_statement','parser.py',64),
  ('statement -> call_function','statement',1,'p_statement','parser.py',65),
  ('assignment -> identifier assignment_operator cond EOL','assignment',4,'p_assignment','parser.py',67),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',70),
  ('assignment_operator -> TIMES_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',71),
  ('assignment_operator -> DIVIDE_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',72),
  ('assignment_operator -> PLUS_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',73),
  ('assignment_operator -> MINUS_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',74),
  ('cond -> expression post_cond','cond',2,'p_cond','parser.py',77),
  ('post_cond -> AND cond','post_cond',2,'p_post_cond','parser.py',80),
  ('post_cond -> OR cond','post_cond',2,'p_post_cond','parser.py',81),
  ('post_cond -> empty','post_cond',1,'p_post_cond','parser.py',82),
  ('expression -> exp post_expression','expression',2,'p_expression','parser.py',85),
  ('post_expression -> relational_operator exp','post_expression',2,'p_post_expression','parser.py',88),
  ('post_expression -> empty','post_expression',1,'p_post_expression','parser.py',89),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',92),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',93),
  ('relational_operator -> GREATER_EQUALS','relational_operator',1,'p_relational_operator','parser.py',94),
  ('relational_operator -> LESS_EQUALS','relational_operator',1,'p_relational_operator','parser.py',95),
  ('relational_operator -> EQUALS_EQUALS','relational_operator',1,'p_relational_operator','parser.py',96),
  ('relational_operator -> NOT_EQUALS','relational_operator',1,'p_relational_operator','parser.py',97),
  ('exp -> term post_exp','exp',2,'p_exp','parser.py',100),
  ('post_exp -> PLUS exp','post_exp',2,'p_post_exp','parser.py',103),
  ('post_exp -> MINUS exp','post_exp',2,'p_post_exp','parser.py',104),
  ('post_exp -> empty','post_exp',1,'p_post_exp','parser.py',105),
  ('term -> factor post_term','term',2,'p_term','parser.py',108),
  ('post_term -> TIMES term','post_term',2,'p_post_term','parser.py',111),
  ('post_term -> DIVIDE term','post_term',2,'p_post_term','parser.py',112),
  ('post_term -> empty','post_term',1,'p_post_term','parser.py',113),
  ('factor -> LEFT_PARENTHESIS cond RIGHT_PARENTHESIS','factor',3,'p_factor','parser.py',116),
  ('factor -> variable_constant','factor',1,'p_factor','parser.py',117),
  ('factor -> MINUS variable_constant','factor',2,'p_factor','parser.py',118),
  ('factor -> call_function','factor',1,'p_factor','parser.py',119),
  ('post_factor -> TIMES','post_factor',1,'p_post_factor','parser.py',122),
  ('post_factor -> DIVIDE','post_factor',1,'p_post_factor','parser.py',123),
  ('post_factor -> MOD','post_factor',1,'p_post_factor','parser.py',124),
  ('post_factor -> PERCENTAGE','post_factor',1,'p_post_factor','parser.py',125),
  ('variable_constant -> identifier','variable_constant',1,'p_variable_constant','parser.py',128),
  ('variable_constant -> INT_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',129),
  ('variable_constant -> DOUBLE_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',130),
  ('variable_constant -> STRING_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',131),
  ('variable_constant -> BOOL_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',132),
  ('condition -> IF cond COLON post_condition','condition',4,'p_condition','parser.py',136),
  ('post_condition -> statement post_post_condition','post_condition',2,'p_post_condition','parser.py',139),
  ('post_post_condition -> post_condition','post_post_condition',1,'p_post_post_condition','parser.py',142),
  ('post_post_condition -> END','post_post_condition',1,'p_post_post_condition','parser.py',143),
  ('post_post_condition -> else','post_post_condition',1,'p_post_post_condition','parser.py',144),
  ('else -> ELSE COLON post_else','else',3,'p_else','parser.py',148),
  ('post_else -> statement post_post_else','post_else',2,'p_post_else','parser.py',151),
  ('post_post_else -> post_else','post_post_else',1,'p_post_post_else','parser.py',154),
  ('post_post_else -> END','post_post_else',1,'p_post_post_else','parser.py',155),
  ('print -> PRINT cond post_print','print',3,'p_print','parser.py',158),
  ('post_print -> COMMA STRING_CONSTANT EOL','post_print',3,'p_post_print','parser.py',161),
  ('post_print -> empty','post_print',1,'p_post_print','parser.py',162),
  ('read -> READ LEFT_PARENTHESIS RIGHT_PARENTHESIS EOL','read',4,'p_read','parser.py',165),
  ('list -> identifier post_list','list',2,'p_list','parser.py',168),
  ('post_list -> EQUALS LEFT_BRACKET exp RIGHT_BRACKET EOL','post_list',5,'p_post_list','parser.py',171),
  ('post_list -> EOL','post_list',1,'p_post_list','parser.py',172),
  ('identifier -> ID post_identifier','identifier',2,'p_identifier','parser.py',175),
  ('post_identifier -> LEFT_BRACKET exp RIGHT_BRACKET','post_identifier',3,'p_post_identifier','parser.py',178),
  ('post_identifier -> empty','post_identifier',1,'p_post_identifier','parser.py',179),
  ('loop -> for','loop',1,'p_loop','parser.py',182),
  ('loop -> while','loop',1,'p_loop','parser.py',183),
  ('for -> FOR identifier post_for','for',3,'p_for','parser.py',187),
  ('post_for -> IN identifier post_cycle','post_for',3,'p_post_for','parser.py',190),
  ('post_for -> FROM exp TO exp post_cycle','post_for',5,'p_post_for','parser.py',191),
  ('while -> WHILE cond post_cycle','while',3,'p_while','parser.py',195),
  ('post_cycle -> COLON statement post_post_cycle','post_cycle',3,'p_post_cycle','parser.py',199),
  ('post_post_cycle -> statement post_post_cycle','post_post_cycle',2,'p_post_post_cycle','parser.py',202),
  ('post_post_cycle -> END','post_post_cycle',1,'p_post_post_cycle','parser.py',203),
  ('BOOL_CONSTANT -> TRUE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',206),
  ('BOOL_CONSTANT -> FALSE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',207),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','parser.py',210),
]
