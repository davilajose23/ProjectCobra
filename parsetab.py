
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'A003E81ED714EC94AAB17FC01FDE75E6'
    
_lr_action_items = {'RETURN':([10,26,27,28,37,39,42,43,44,46,56,75,94,95,96,97,98,99,102,106,109,137,138,180,181,],[-162,-7,-6,-8,-162,-83,-9,-11,-10,-16,-162,-68,-32,-30,-31,-65,-66,-63,-64,-67,-162,176,-162,218,176,]),'LESS':([77,78,80,82,83,84,86,87,88,89,90,92,113,119,120,121,122,123,125,126,127,128,143,145,147,150,155,156,191,211,213,228,229,230,231,232,233,234,245,246,256,262,263,278,281,],[-127,-119,-160,-128,-127,-109,-127,-103,-161,-127,-92,-117,-126,-128,-118,-162,-123,-162,-124,-162,-125,158,-122,-73,-108,-114,-102,-106,-121,-33,-121,-111,-110,-112,-113,-116,-105,-104,-121,-37,-75,-37,-36,-72,-35,]),'READ':([10,26,27,28,37,38,39,42,43,44,45,46,56,75,97,98,99,102,106,109,133,137,138,173,181,214,215,248,292,298,302,],[-162,-7,-6,-8,-162,-162,-83,-9,-11,-10,52,-16,52,-68,-65,-66,-63,-64,-67,-162,-130,52,-162,-162,52,52,-162,52,-136,-162,52,]),'VOID':([9,],[23,]),'RIGHT_BRACKET':([67,77,78,80,82,83,84,86,87,88,89,92,107,113,119,120,121,122,123,125,126,127,143,145,147,150,155,156,191,211,213,227,228,229,230,231,232,233,234,245,246,255,256,262,263,278,281,],[-21,-127,-119,-160,-128,-127,-109,-127,-103,-161,-127,-117,136,-126,-128,-118,-162,-123,-162,-124,-162,-125,-122,-73,-108,-114,-102,-106,-121,-33,-121,256,-111,-110,-112,-113,-116,-105,-104,-121,-37,277,-75,-37,-36,-72,-35,]),'EOL':([11,29,33,34,35,37,40,48,49,51,55,57,58,59,61,64,66,69,70,71,77,78,79,80,82,83,84,86,87,88,89,90,91,92,105,108,110,113,114,116,117,118,119,120,121,122,123,125,126,127,128,129,133,135,136,142,143,145,147,150,155,156,163,164,166,169,173,183,185,191,194,211,213,215,216,217,218,220,223,228,229,230,231,232,233,234,235,236,243,245,246,249,250,252,253,256,258,262,263,269,271,272,278,281,283,285,286,287,292,293,295,297,298,300,301,],[-131,-29,37,37,-128,37,-162,-162,-20,37,-149,37,37,37,37,-150,37,-18,-23,37,-127,-119,-162,-160,-128,-127,-109,-127,-103,-161,-127,-92,-86,-117,-28,-22,37,-126,-137,-139,-138,-142,-128,-118,-162,-123,-162,-124,-162,-125,-162,-162,-130,37,-19,-141,-122,-73,-108,-114,-102,-106,-91,-94,-85,-89,37,-145,-140,-121,-93,-33,-121,37,-135,-55,37,-56,-143,-111,-110,-112,-113,-116,-105,-104,-87,-88,-82,-121,-37,-158,37,-55,37,-75,-69,-37,-36,-156,-56,37,-72,-35,-129,-159,-56,37,-136,37,-56,-155,37,37,-151,]),'EQUALS_EQUALS':([77,78,80,82,83,84,86,87,88,89,90,92,113,119,120,121,122,123,125,126,127,128,143,145,147,150,155,156,191,211,213,228,229,230,231,232,233,234,245,246,256,262,263,278,281,],[-127,-119,-160,-128,-127,-109,-127,-103,-161,-127,-92,-117,-126,-128,-118,-162,-123,-162,-124,-162,-125,162,-122,-73,-108,-114,-102,-106,-121,-33,-121,-111,-110,-112,-113,-116,-105,-104,-121,-37,-75,-37,-36,-72,-35,]),'WHILE':([10,26,27,28,37,38,39,42,43,44,45,46,56,75,97,98,99,102,106,109,133,137,138,173,181,214,215,248,292,298,302,],[-162,-7,-6,-8,-162,-162,-83,-9,-11,-10,63,-16,63,-68,-65,-66,-63,-64,-67,-162,-130,63,-162,-162,63,63,-162,63,-136,-162,63,]),'PRINT':([10,26,27,28,37,38,39,42,43,44,45,46,56,75,97,98,99,102,106,109,133,137,138,173,181,214,215,248,292,298,302,],[-162,-7,-6,-8,-162,-162,-83,-9,-11,-10,53,-16,53,-68,-65,-66,-63,-64,-67,-162,-130,53,-162,-162,53,53,-162,53,-136,-162,53,]),'TRUE':([53,62,63,81,85,104,124,132,144,146,148,149,151,153,154,157,158,159,160,161,162,165,167,168,170,172,176,186,187,188,189,190,192,193,195,196,197,198,199,200,201,202,204,205,206,207,208,209,218,225,238,239,240,241,242,257,260,],[80,80,-157,80,-120,80,80,-120,-74,-115,-115,-115,-115,-107,-107,80,-95,-95,-95,-95,-95,-95,-90,-90,80,80,80,80,80,80,80,80,80,80,-96,-98,-101,-99,-100,-97,80,80,-81,-81,-81,-81,-81,80,80,80,-80,-79,-77,-78,-76,80,80,]),'MINUS':([53,62,63,77,78,80,82,83,84,85,86,87,88,89,92,104,113,119,120,121,122,123,124,125,126,127,132,143,144,145,146,147,148,149,150,151,153,154,157,158,159,160,161,162,165,167,168,170,172,176,186,187,188,189,190,191,192,193,195,196,197,198,199,200,201,202,204,205,206,207,208,209,211,213,218,225,228,229,230,231,232,238,239,240,241,242,245,246,256,257,260,262,263,278,281,],[81,81,-157,-127,-119,-160,-128,-127,-109,-120,-127,-103,-161,-127,-117,81,-126,-128,-118,-162,-123,-162,81,-124,153,-125,-120,-122,-74,-73,-115,-108,-115,-115,-114,-115,-107,-107,81,-95,-95,-95,-95,-95,-95,-90,-90,81,81,81,81,81,81,81,81,-121,81,81,-96,-98,-101,-99,-100,-97,81,81,-81,-81,-81,-81,-81,81,-33,-121,81,81,-111,-110,-112,-113,-116,-80,-79,-77,-78,-76,-121,-37,-75,81,81,-37,-36,-72,-35,]),'DIVIDE':([77,78,80,82,83,84,86,88,89,92,113,119,120,121,122,123,125,127,143,145,191,211,213,232,245,246,256,262,263,278,281,],[-127,-119,-160,-128,-127,-109,-127,-161,-127,-117,-126,-128,-118,-162,-123,146,-124,-125,-122,-73,-121,-33,-121,-116,-121,-37,-75,-37,-36,-72,-35,]),'MINUS_EQUALS':([60,100,131,145,171,256,278,],[-70,-71,-162,-73,204,-75,-72,]),'END_MAIN':([37,42,43,44,56,65,75,94,95,96,97,98,99,102,106,],[-162,-9,-11,-10,-162,105,-68,-32,-30,-31,-65,-66,-63,-64,-67,]),'NOT_EQUALS':([77,78,80,82,83,84,86,87,88,89,90,92,113,119,120,121,122,123,125,126,127,128,143,145,147,150,155,156,191,211,213,228,229,230,231,232,233,234,245,246,256,262,263,278,281,],[-127,-119,-160,-128,-127,-109,-127,-103,-161,-127,-92,-117,-126,-128,-118,-162,-123,-162,-124,-162,-125,160,-122,-73,-108,-114,-102,-106,-121,-33,-121,-111,-110,-112,-113,-116,-105,-104,-121,-37,-75,-37,-36,-72,-35,]),'DOUBLE_CONSTANT':([53,62,63,81,85,104,124,132,144,146,148,149,151,153,154,157,158,159,160,161,162,165,167,168,170,172,176,186,187,188,189,190,192,193,195,196,197,198,199,200,201,202,204,205,206,207,208,209,218,225,238,239,240,241,242,257,260,],[86,86,-157,86,-120,86,86,-120,-74,-115,-115,-115,-115,-107,-107,86,-95,-95,-95,-95,-95,-95,-90,-90,86,86,86,86,86,86,86,86,86,86,-96,-98,-101,-99,-100,-97,86,86,-81,-81,-81,-81,-81,86,86,86,-80,-79,-77,-78,-76,86,86,]),'GREATER_EQUALS':([77,78,80,82,83,84,86,87,88,89,90,92,113,119,120,121,122,123,125,126,127,128,143,145,147,150,155,156,191,211,213,228,229,230,231,232,233,234,245,246,256,262,263,278,281,],[-127,-119,-160,-128,-127,-109,-127,-103,-161,-127,-92,-117,-126,-128,-118,-162,-123,-162,-124,-162,-125,159,-122,-73,-108,-114,-102,-106,-121,-33,-121,-111,-110,-112,-113,-116,-105,-104,-121,-37,-75,-37,-36,-72,-35,]),'LESS_EQUALS':([77,78,80,82,83,84,86,87,88,89,90,92,113,119,120,121,122,123,125,126,127,128,143,145,147,150,155,156,191,211,213,228,229,230,231,232,233,234,245,246,256,262,263,278,281,],[-127,-119,-160,-128,-127,-109,-127,-103,-161,-127,-92,-117,-126,-128,-118,-162,-123,-162,-124,-162,-125,161,-122,-73,-108,-114,-102,-106,-121,-33,-121,-111,-110,-112,-113,-116,-105,-104,-121,-37,-75,-37,-36,-72,-35,]),'PLUS':([77,78,80,82,83,84,86,87,88,89,92,113,119,120,121,122,123,125,126,127,143,145,147,150,191,211,213,228,229,230,231,232,245,246,256,262,263,278,281,],[-127,-119,-160,-128,-127,-109,-127,-103,-161,-127,-117,-126,-128,-118,-162,-123,-162,-124,154,-125,-122,-73,-108,-114,-121,-33,-121,-111,-110,-112,-113,-116,-121,-37,-75,-37,-36,-72,-35,]),'TO':([77,78,80,82,83,84,86,87,88,89,92,113,119,120,121,122,123,125,126,127,143,145,147,150,155,156,191,203,211,213,228,229,230,231,232,233,234,237,245,246,256,262,263,278,281,],[-127,-119,-160,-128,-127,-109,-127,-103,-161,-127,-117,-126,-128,-118,-162,-123,-162,-124,-162,-125,-122,-73,-108,-114,-102,-106,-121,-153,-33,-121,-111,-110,-112,-113,-116,-105,-104,257,-121,-37,-75,-37,-36,-72,-35,]),'INT_CONSTANT':([47,53,62,63,81,85,104,124,132,144,146,148,149,151,153,154,157,158,159,160,161,162,165,167,168,170,172,176,186,187,188,189,190,192,193,195,196,197,198,199,200,201,202,204,205,206,207,208,209,218,225,238,239,240,241,242,257,260,],[67,83,83,-157,83,-120,83,83,-120,-74,-115,-115,-115,-115,-107,-107,83,-95,-95,-95,-95,-95,-95,-90,-90,83,83,83,83,83,83,83,83,83,83,-96,-98,-101,-99,-100,-97,83,83,-81,-81,-81,-81,-81,83,83,83,-80,-79,-77,-78,-76,83,83,]),'COMMA':([35,40,48,49,77,78,79,80,82,83,84,86,87,88,89,90,91,92,113,119,120,121,122,123,125,126,127,128,129,136,141,143,145,147,150,155,156,163,164,166,169,184,191,194,210,211,213,222,224,226,228,229,230,231,232,233,234,235,236,244,245,246,254,256,262,263,277,278,281,],[-128,-162,68,-20,-127,-119,115,-160,-128,-127,-109,-127,-103,-161,-127,-92,-86,-117,-126,-128,-118,-162,-123,-162,-124,-162,-125,-162,-162,-19,-128,-122,-73,-108,-114,-102,-106,-91,-94,-85,-89,-162,-121,-93,-39,-33,-121,-60,-146,-148,-111,-110,-112,-113,-116,-105,-104,-87,-88,260,-121,-37,275,-75,-37,-36,-147,-72,-35,]),'COLON':([77,78,80,82,83,84,86,87,88,89,90,91,92,103,113,119,120,121,122,123,125,126,127,128,129,134,143,145,147,150,155,156,163,164,166,169,174,191,194,211,213,228,229,230,231,232,233,234,235,236,245,246,256,262,263,267,278,279,281,284,291,],[-127,-119,-160,-128,-127,-109,-127,-103,-161,-127,-92,-86,-117,133,-126,-128,-118,-162,-123,-162,-124,-162,-125,-162,-162,-130,-122,-73,-108,-114,-102,-106,-91,-94,-85,-89,215,-121,-93,-33,-121,-111,-110,-112,-113,-116,-105,-104,-87,-88,-121,-37,-75,-37,-36,-135,-72,-154,-35,292,215,]),'PERCENTAGE':([77,78,80,82,83,84,86,88,89,92,113,119,120,121,122,123,125,127,143,145,191,211,213,232,245,246,256,262,263,278,281,],[-127,-119,-160,-128,-127,-109,-127,-161,-127,-117,-126,-128,-118,-162,-123,149,-124,-125,-122,-73,-121,-33,-121,-116,-121,-37,-75,-37,-36,-72,-35,]),'PLUS_EQUALS':([60,100,131,145,171,256,278,],[-70,-71,-162,-73,205,-75,-72,]),'LEFT_PARENTHESIS':([36,41,52,53,60,62,63,76,82,85,101,104,124,132,144,146,148,149,151,153,154,157,158,159,160,161,162,165,167,168,170,172,176,186,187,188,189,190,192,193,195,196,197,198,199,200,201,202,204,205,206,207,208,209,218,225,238,239,240,241,242,257,260,],[-45,50,-144,85,-34,85,-157,112,-34,-120,132,85,85,-120,-74,-115,-115,-115,-115,-107,-107,85,-95,-95,-95,-95,-95,-95,-90,-90,85,85,85,85,85,85,85,85,85,85,-96,-98,-101,-99,-100,-97,85,85,-81,-81,-81,-81,-81,85,85,85,-80,-79,-77,-78,-76,85,85,]),'$end':([1,4,5,12,22,31,37,42,43,44,105,135,175,],[0,-1,-5,-3,-4,-2,-162,-9,-11,-10,-28,-162,-27,]),'END':([37,42,43,44,56,75,94,95,96,97,98,99,102,106,180,247,251,264,265,266,268,270,282,288,304,305,],[-162,-9,-11,-10,-162,-68,-32,-30,-31,-65,-66,-63,-64,-67,220,-131,271,-162,283,-132,285,286,-133,295,-131,-134,]),'STRING':([0,2,6,9,10,37,38,39,42,43,44,46,50,73,109,111,138,275,],[-136,-84,13,13,-84,-162,-84,-83,-9,-11,-10,-16,-84,-58,-84,13,-84,-84,]),'FOR':([10,26,27,28,37,38,39,42,43,44,45,46,56,75,97,98,99,102,106,109,133,137,138,173,181,214,215,248,292,298,302,],[-162,-7,-6,-8,-162,-162,-83,-9,-11,-10,54,-16,54,-68,-65,-66,-63,-64,-67,-162,-130,54,-162,-162,54,54,-162,54,-136,-162,54,]),'EQUALS':([60,100,131,145,171,256,278,],[-70,-71,-162,-73,208,-75,-72,]),'ELSE':([37,42,43,44,56,75,94,95,96,97,98,99,102,106,247,],[-162,-9,-11,-10,-162,-68,-32,-30,-31,-65,-66,-63,-64,-67,267,]),'FUNC':([0,2,7,8,10,26,27,28,37,39,42,43,44,46,74,177,178,179,219,221,273,294,299,303,],[-136,9,9,9,-162,-7,-6,-8,-162,-83,-9,-11,-10,-16,-42,-47,-49,-48,-50,-46,-51,-52,-54,-53,]),'FROM':([93,130,],[-152,170,]),'RIGHT_PARENTHESIS':([50,72,77,78,80,82,83,84,86,87,88,89,90,91,92,113,119,120,121,122,123,125,126,127,128,129,132,140,141,143,145,147,150,152,155,156,163,164,166,169,172,184,191,194,210,211,212,213,222,224,226,228,229,230,231,232,233,234,235,236,244,245,246,254,256,259,261,262,263,274,276,277,278,280,281,289,290,296,],[71,110,-127,-119,-160,-128,-127,-109,-127,-103,-161,-127,-92,-86,-117,-126,-128,-118,-162,-123,-162,-124,-162,-125,-162,-162,-120,183,-128,-122,-73,-108,-114,191,-102,-106,-91,-94,-85,-89,213,-162,-121,-93,-39,-33,245,-121,-60,-146,-148,-111,-110,-112,-113,-116,-105,-104,-87,-88,-162,-121,-37,-162,-75,-38,-41,-37,-36,-59,-62,-147,-72,-40,-35,-83,-61,-57,]),'TIMES':([77,78,80,82,83,84,86,88,89,92,113,119,120,121,122,123,125,127,143,145,191,211,213,232,245,246,256,262,263,278,281,],[-127,-119,-160,-128,-127,-109,-127,-161,-127,-117,-126,-128,-118,-162,-123,148,-124,-125,-122,-73,-121,-33,-121,-116,-121,-37,-75,-37,-36,-72,-35,]),'ID':([10,13,14,15,16,17,23,24,25,26,27,28,30,32,37,38,39,42,43,44,45,46,53,54,56,62,63,68,75,81,85,97,98,99,102,104,106,109,112,124,132,133,137,138,139,144,146,148,149,151,153,154,157,158,159,160,161,162,165,167,168,170,172,173,176,181,182,186,187,188,189,190,192,193,195,196,197,198,199,200,201,202,204,205,206,207,208,209,214,215,218,225,238,239,240,241,242,248,257,260,292,298,302,],[-162,-14,-12,-13,-15,-17,-44,-43,-17,-7,-6,-8,35,36,-162,-162,-83,-9,-11,-10,60,-16,82,93,60,82,-157,35,-68,119,-120,-65,-66,-63,-64,82,-67,-162,141,82,-120,-130,60,-162,-17,-74,-115,-115,-115,-115,-107,-107,82,-95,-95,-95,-95,-95,-95,-90,-90,82,82,-162,82,60,141,82,82,82,82,82,82,82,-96,-98,-101,-99,-100,-97,82,82,-81,-81,-81,-81,-81,82,60,-162,82,82,-80,-79,-77,-78,-76,60,82,82,-136,-162,60,]),'IF':([10,26,27,28,37,38,39,42,43,44,45,46,56,75,97,98,99,102,106,109,133,137,138,173,181,214,215,248,292,298,302,],[-162,-7,-6,-8,-162,-162,-83,-9,-11,-10,62,-16,62,-68,-65,-66,-63,-64,-67,-162,-130,62,-162,-162,62,62,-162,62,-136,-162,62,]),'AND':([77,78,80,82,83,84,86,87,88,89,90,91,92,113,119,120,121,122,123,125,126,127,128,129,143,145,147,150,155,156,163,164,191,194,211,213,228,229,230,231,232,233,234,245,246,256,262,263,278,281,],[-127,-119,-160,-128,-127,-109,-127,-103,-161,-127,-92,-86,-117,-126,-128,-118,-162,-123,-162,-124,-162,-125,-162,167,-122,-73,-108,-114,-102,-106,-91,-94,-121,-93,-33,-121,-111,-110,-112,-113,-116,-105,-104,-121,-37,-75,-37,-36,-72,-35,]),'FALSE':([53,62,63,81,85,104,124,132,144,146,148,149,151,153,154,157,158,159,160,161,162,165,167,168,170,172,176,186,187,188,189,190,192,193,195,196,197,198,199,200,201,202,204,205,206,207,208,209,218,225,238,239,240,241,242,257,260,],[88,88,-157,88,-120,88,88,-120,-74,-115,-115,-115,-115,-107,-107,88,-95,-95,-95,-95,-95,-95,-90,-90,88,88,88,88,88,88,88,88,88,88,-96,-98,-101,-99,-100,-97,88,88,-81,-81,-81,-81,-81,88,88,88,-80,-79,-77,-78,-76,88,88,]),'GREATER':([77,78,80,82,83,84,86,87,88,89,90,92,113,119,120,121,122,123,125,126,127,128,143,145,147,150,155,156,191,211,213,228,229,230,231,232,233,234,245,246,256,262,263,278,281,],[-127,-119,-160,-128,-127,-109,-127,-103,-161,-127,-92,-117,-126,-128,-118,-162,-123,-162,-124,-162,-125,165,-122,-73,-108,-114,-102,-106,-121,-33,-121,-111,-110,-112,-113,-116,-105,-104,-121,-37,-75,-37,-36,-72,-35,]),'INT':([0,2,6,9,10,37,38,39,42,43,44,46,50,73,109,111,138,275,],[-136,-84,14,14,-84,-162,-84,-83,-9,-11,-10,-16,-84,-58,-84,14,-84,-84,]),'DOUBLE':([0,2,6,9,10,37,38,39,42,43,44,46,50,73,109,111,138,275,],[-136,-84,15,15,-84,-162,-84,-83,-9,-11,-10,-16,-84,-58,-84,15,-84,-84,]),'DIVIDE_EQUALS':([60,100,131,145,171,256,278,],[-70,-71,-162,-73,207,-75,-72,]),'BOOL':([0,2,6,9,10,37,38,39,42,43,44,46,50,73,109,111,138,275,],[-136,-84,16,16,-84,-162,-84,-83,-9,-11,-10,-16,-84,-58,-84,16,-84,-84,]),'STRING_CONSTANT':([53,62,63,81,85,104,115,124,132,144,146,148,149,151,153,154,157,158,159,160,161,162,165,167,168,170,172,176,186,187,188,189,190,192,193,195,196,197,198,199,200,201,202,204,205,206,207,208,209,218,225,238,239,240,241,242,257,260,],[89,89,-157,89,-120,89,142,89,-120,-74,-115,-115,-115,-115,-107,-107,89,-95,-95,-95,-95,-95,-95,-90,-90,89,89,89,89,89,89,89,89,89,89,-96,-98,-101,-99,-100,-97,89,89,-81,-81,-81,-81,-81,89,89,89,-80,-79,-77,-78,-76,89,89,]),'TIMES_EQUALS':([60,100,131,145,171,256,278,],[-70,-71,-162,-73,206,-75,-72,]),'LEFT_BRACKET':([35,40,60,82,100,119,121,131,141,184,],[-128,47,-70,-128,-71,-128,144,144,-128,225,]),'MAIN':([0,2,3,7,8,10,18,19,20,21,26,27,28,37,39,42,43,44,46,74,177,178,179,219,221,273,294,299,303,],[-136,11,11,-162,11,-162,-24,-25,-26,11,-7,-6,-8,-162,-83,-9,-11,-10,-16,-42,-47,-49,-48,-50,-46,-51,-52,-54,-53,]),'OR':([77,78,80,82,83,84,86,87,88,89,90,91,92,113,119,120,121,122,123,125,126,127,128,129,143,145,147,150,155,156,163,164,191,194,211,213,228,229,230,231,232,233,234,245,246,256,262,263,278,281,],[-127,-119,-160,-128,-127,-109,-127,-103,-161,-127,-92,-86,-117,-126,-128,-118,-162,-123,-162,-124,-162,-125,-162,168,-122,-73,-108,-114,-102,-106,-91,-94,-121,-93,-33,-121,-111,-110,-112,-113,-116,-105,-104,-121,-37,-75,-37,-36,-72,-35,]),'MOD':([77,78,80,82,83,84,86,88,89,92,113,119,120,121,122,123,125,127,143,145,191,211,213,232,245,246,256,262,263,278,281,],[-127,-119,-160,-128,-127,-109,-127,-161,-127,-117,-126,-128,-118,-162,-123,151,-124,-125,-122,-73,-121,-33,-121,-116,-121,-37,-75,-37,-36,-72,-35,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'relational_operator':([128,],[157,]),'push_constant':([77,83,86,89,],[113,122,125,127,]),'post_function':([50,],[74,]),'push_assignment':([204,205,206,207,208,],[238,239,240,241,242,]),'parameters':([50,275,],[72,290,]),'increase_call_arguments':([210,],[244,]),'post_variables':([10,38,109,138,],[27,45,137,181,]),'finish_params':([274,],[289,]),'init':([0,],[1,]),'program':([2,],[4,]),'factor':([53,62,104,124,157,170,172,176,186,187,188,189,190,192,193,201,202,209,218,225,257,260,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'main':([2,3,8,21,],[5,12,22,31,]),'finish_evaluating':([2,10,38,50,109,138,275,],[6,6,6,73,6,6,73,]),'read':([45,56,137,181,214,248,302,],[58,58,58,58,58,58,58,]),'post_term':([123,],[147,]),'print_mod':([79,],[117,]),'condition':([45,56,137,181,214,248,302,],[61,61,61,61,61,61,61,]),'term':([53,62,104,124,157,170,172,176,186,187,188,189,190,192,193,201,202,209,218,225,257,260,],[87,87,87,87,87,87,87,87,87,228,229,230,231,87,87,87,87,87,87,87,87,87,]),'push_end':([105,],[135,]),'post_void_return':([180,],[219,]),'push_term':([146,148,149,151,],[187,188,189,190,]),'register_function':([36,],[41,]),'identifier':([112,182,],[140,222,]),'push_paren':([85,132,],[124,172,]),'BOOL_CONSTANT':([53,62,81,104,124,157,170,172,176,186,187,188,189,190,192,193,201,202,209,218,225,257,260,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'call_function':([45,53,56,62,104,124,137,157,170,172,176,181,186,187,188,189,190,192,193,201,202,209,214,218,225,248,257,260,302,],[51,78,51,78,78,78,51,78,78,78,78,51,78,78,78,78,78,78,78,78,78,78,51,78,78,51,78,78,51,]),'reset_scope':([220,271,286,295,],[253,287,293,300,]),'push_relop':([158,159,160,161,162,165,],[195,196,197,198,199,200,]),'post_parameters':([254,],[274,]),'start_evaluating':([39,289,],[46,296,]),'post_print':([79,],[114,]),'fill_goto':([11,247,304,],[29,264,305,]),'for':([45,56,137,181,214,248,302,],[55,55,55,55,55,55,55,]),'post_exp':([126,],[155,]),'assignment':([45,56,137,181,214,248,302,],[59,59,59,59,59,59,59,]),'print':([45,56,137,181,214,248,302,],[57,57,57,57,57,57,57,]),'push_exp':([153,154,],[192,193,]),'set_type':([17,25,139,],[30,32,182,]),'inter_declaration':([30,68,],[34,108,]),'void_return':([137,181,],[179,179,]),'pop_paren':([191,213,245,],[232,246,262,]),'push_gotoF':([133,134,],[173,174,]),'end_for_loop':([297,],[301,]),'fill_goto_plus':([216,267,],[249,284,]),'assignment_operator':([171,],[209,]),'expression':([53,62,104,124,157,172,176,201,202,209,218,260,],[91,91,91,91,194,91,91,91,91,91,91,91,]),'pop_exp':([87,],[126,]),'block':([45,56,137,181,214,248,302,],[65,96,180,180,247,268,304,]),'optional_eol':([37,135,173,215,298,],[42,175,214,248,302,]),'post_functions':([7,],[18,]),'pop_term':([84,],[123,]),'required_eol':([33,34,37,51,57,58,59,61,66,71,110,135,173,215,218,250,253,272,287,293,298,300,],[38,39,43,75,97,98,99,102,106,109,138,43,43,43,251,270,273,288,294,299,43,303,]),'push_goto':([0,292,],[2,298,]),'post_arguments':([244,],[259,]),'validate_function_call':([60,82,],[101,101,]),'post_cycle':([174,291,],[216,297,]),'post_cond':([129,],[166,]),'func_return':([137,181,],[177,221,]),'post_call_function':([172,],[211,]),'validate_var':([60,],[100,]),'push_cycle':([63,],[104,]),'process_variable':([35,82,119,141,],[40,121,121,184,]),'verify_var_dim':([144,],[186,]),'empty':([7,10,37,38,40,48,56,79,109,121,123,126,128,129,131,135,138,173,184,215,244,254,264,298,],[20,28,44,28,49,70,94,118,28,145,150,156,164,169,145,44,28,44,226,44,261,276,282,44,]),'function':([2,7,8,],[7,7,7,]),'statement':([45,56,137,181,214,248,302,],[56,56,56,56,56,56,56,]),'pre_variables':([2,10,38,109,138,],[8,26,26,26,26,]),'else':([247,],[266,]),'value_return':([137,181,],[178,178,]),'create_return':([217,252,],[250,272,]),'cycle_declaration':([48,],[69,]),'declaration':([2,10,38,109,138,],[10,10,10,10,10,]),'validate_call_arguments':([246,262,],[263,281,]),'init_var':([203,],[237,]),'array_notation':([121,131,],[143,171,]),'push_op_and_or':([167,168,],[201,202,]),'while':([45,56,137,181,214,248,302,],[64,64,64,64,64,64,64,]),'post_expression':([128,],[163,]),'start_read':([52,],[76,]),'array_declaration':([40,],[48,]),'loop':([45,56,137,181,214,248,302,],[66,66,66,66,66,66,66,]),'update_var_size':([67,],[107,]),'set_main_scope':([29,],[33,]),'cond':([53,62,104,124,172,176,201,202,209,218,260,],[79,103,134,152,210,217,235,236,243,252,210,]),'functions':([2,7,8,],[3,19,21,]),'end_array':([256,],[278,]),'pop_op_and_or':([91,],[129,]),'push_for_cycle':([279,],[291,]),'arguments':([172,260,],[212,280,]),'pop_relop':([90,],[128,]),'exp':([53,62,104,124,157,170,172,176,186,192,193,201,202,209,218,225,257,260,],[90,90,90,90,90,203,90,90,227,233,234,90,90,90,90,255,279,90,]),'post_condition':([247,],[265,]),'print_post_mod':([142,],[185,]),'post_identifier':([184,],[224,]),'pop_assignment':([243,],[258,]),'post_block':([56,],[95,]),'func_types':([9,],[25,]),'types':([6,9,111,],[17,24,139,]),'create_pending_goto':([249,],[269,]),'update_function_parameters':([222,],[254,]),'read_var':([183,],[223,]),'add_var':([93,],[130,]),'push_var':([100,],[131,]),'start_params':([73,],[111,]),'print_default':([79,],[116,]),'variable_constant':([53,62,81,104,124,157,170,172,176,186,187,188,189,190,192,193,201,202,209,218,225,257,260,],[92,92,120,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> push_goto program','init',2,'p_init','parser.py',30),
  ('program -> pre_variables functions main','program',3,'p_program','parser.py',33),
  ('program -> functions main','program',2,'p_program','parser.py',34),
  ('program -> pre_variables main','program',2,'p_program','parser.py',35),
  ('program -> main','program',1,'p_program','parser.py',36),
  ('pre_variables -> declaration post_variables','pre_variables',2,'p_pre_variables','parser.py',45),
  ('post_variables -> pre_variables','post_variables',1,'p_post_variables','parser.py',48),
  ('post_variables -> empty','post_variables',1,'p_post_variables','parser.py',49),
  ('required_eol -> EOL optional_eol','required_eol',2,'p_required_eol','parser.py',53),
  ('optional_eol -> empty','optional_eol',1,'p_optional_eol','parser.py',56),
  ('optional_eol -> required_eol','optional_eol',1,'p_optional_eol','parser.py',57),
  ('types -> INT','types',1,'p_types','parser.py',61),
  ('types -> DOUBLE','types',1,'p_types','parser.py',62),
  ('types -> STRING','types',1,'p_types','parser.py',63),
  ('types -> BOOL','types',1,'p_types','parser.py',64),
  ('declaration -> finish_evaluating types set_type inter_declaration required_eol start_evaluating','declaration',6,'p_declaration','parser.py',69),
  ('set_type -> <empty>','set_type',0,'p_set_type','parser.py',72),
  ('inter_declaration -> ID process_variable array_declaration cycle_declaration','inter_declaration',4,'p_inter_declaration','parser.py',75),
  ('array_declaration -> LEFT_BRACKET INT_CONSTANT update_var_size RIGHT_BRACKET','array_declaration',4,'p_array_declaration','parser.py',78),
  ('array_declaration -> empty','array_declaration',1,'p_array_declaration','parser.py',79),
  ('update_var_size -> <empty>','update_var_size',0,'p_update_var_size','parser.py',82),
  ('cycle_declaration -> COMMA inter_declaration','cycle_declaration',2,'p_cycle_declaration','parser.py',86),
  ('cycle_declaration -> empty','cycle_declaration',1,'p_cycle_declaration','parser.py',87),
  ('functions -> function post_functions','functions',2,'p_functions','parser.py',91),
  ('post_functions -> functions','post_functions',1,'p_post_functions','parser.py',94),
  ('post_functions -> empty','post_functions',1,'p_post_functions','parser.py',95),
  ('main -> MAIN fill_goto set_main_scope required_eol post_variables block END_MAIN push_end optional_eol','main',9,'p_main','parser.py',99),
  ('push_end -> <empty>','push_end',0,'p_push_end','parser.py',102),
  ('set_main_scope -> <empty>','set_main_scope',0,'p_set_main_scope','parser.py',106),
  ('block -> statement post_block','block',2,'p_block','parser.py',114),
  ('post_block -> block','post_block',1,'p_post_block','parser.py',117),
  ('post_block -> empty','post_block',1,'p_post_block','parser.py',118),
  ('call_function -> ID validate_function_call LEFT_PARENTHESIS push_paren post_call_function','call_function',5,'p_call_function','parser.py',122),
  ('validate_function_call -> <empty>','validate_function_call',0,'p_validate_function_call','parser.py',126),
  ('post_call_function -> arguments RIGHT_PARENTHESIS pop_paren validate_call_arguments','post_call_function',4,'p_post_call_function','parser.py',133),
  ('post_call_function -> RIGHT_PARENTHESIS pop_paren validate_call_arguments','post_call_function',3,'p_post_call_function','parser.py',134),
  ('validate_call_arguments -> <empty>','validate_call_arguments',0,'p_validate_call_arguments','parser.py',137),
  ('arguments -> cond increase_call_arguments post_arguments','arguments',3,'p_arguments','parser.py',148),
  ('increase_call_arguments -> <empty>','increase_call_arguments',0,'p_increase_call_arguments','parser.py',152),
  ('post_arguments -> COMMA arguments','post_arguments',2,'p_post_arguments','parser.py',160),
  ('post_arguments -> empty','post_arguments',1,'p_post_arguments','parser.py',161),
  ('function -> FUNC func_types set_type ID register_function LEFT_PARENTHESIS post_function','function',7,'p_function','parser.py',165),
  ('func_types -> types','func_types',1,'p_func_types','parser.py',168),
  ('func_types -> VOID','func_types',1,'p_func_types','parser.py',169),
  ('register_function -> <empty>','register_function',0,'p_register_function','parser.py',175),
  ('post_function -> parameters RIGHT_PARENTHESIS required_eol post_variables func_return','post_function',5,'p_post_function','parser.py',186),
  ('post_function -> RIGHT_PARENTHESIS required_eol post_variables func_return','post_function',4,'p_post_function','parser.py',187),
  ('func_return -> void_return','func_return',1,'p_func_return','parser.py',190),
  ('func_return -> value_return','func_return',1,'p_func_return','parser.py',191),
  ('void_return -> block post_void_return','void_return',2,'p_void_return','parser.py',194),
  ('post_void_return -> END reset_scope required_eol','post_void_return',3,'p_post_void_return','parser.py',197),
  ('post_void_return -> RETURN required_eol END reset_scope required_eol','post_void_return',5,'p_post_void_return','parser.py',198),
  ('value_return -> block RETURN cond create_return required_eol END reset_scope required_eol','value_return',8,'p_value_return','parser.py',201),
  ('value_return -> RETURN cond create_return required_eol END reset_scope required_eol','value_return',7,'p_value_return','parser.py',202),
  ('create_return -> <empty>','create_return',0,'p_create_return','parser.py',205),
  ('reset_scope -> <empty>','reset_scope',0,'p_reset_scope','parser.py',210),
  ('parameters -> finish_evaluating start_params types set_type identifier update_function_parameters post_parameters finish_params start_evaluating','parameters',9,'p_parameters','parser.py',217),
  ('start_params -> <empty>','start_params',0,'p_start_params','parser.py',220),
  ('finish_params -> <empty>','finish_params',0,'p_finish_params','parser.py',224),
  ('update_function_parameters -> <empty>','update_function_parameters',0,'p_update_function_parameters','parser.py',229),
  ('post_parameters -> COMMA parameters','post_parameters',2,'p_post_parameters','parser.py',233),
  ('post_parameters -> empty','post_parameters',1,'p_post_parameters','parser.py',234),
  ('statement -> assignment required_eol','statement',2,'p_statement','parser.py',238),
  ('statement -> condition required_eol','statement',2,'p_statement','parser.py',239),
  ('statement -> print required_eol','statement',2,'p_statement','parser.py',240),
  ('statement -> read required_eol','statement',2,'p_statement','parser.py',241),
  ('statement -> loop required_eol','statement',2,'p_statement','parser.py',242),
  ('statement -> call_function required_eol','statement',2,'p_statement','parser.py',243),
  ('assignment -> ID validate_var push_var array_notation assignment_operator cond pop_assignment','assignment',7,'p_assignment','parser.py',248),
  ('validate_var -> <empty>','validate_var',0,'p_validate_var','parser.py',251),
  ('push_var -> <empty>','push_var',0,'p_push_var','parser.py',256),
  ('array_notation -> LEFT_BRACKET verify_var_dim exp RIGHT_BRACKET end_array','array_notation',5,'p_array_notation','parser.py',263),
  ('array_notation -> empty','array_notation',1,'p_array_notation','parser.py',264),
  ('verify_var_dim -> <empty>','verify_var_dim',0,'p_verify_var_dim','parser.py',267),
  ('end_array -> <empty>','end_array',0,'p_end_array','parser.py',276),
  ('assignment_operator -> EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',281),
  ('assignment_operator -> TIMES_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',282),
  ('assignment_operator -> DIVIDE_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',283),
  ('assignment_operator -> PLUS_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',284),
  ('assignment_operator -> MINUS_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',285),
  ('push_assignment -> <empty>','push_assignment',0,'p_push_assignment','parser.py',288),
  ('pop_assignment -> <empty>','pop_assignment',0,'p_pop_assignment','parser.py',292),
  ('start_evaluating -> <empty>','start_evaluating',0,'p_start_evaluating','parser.py',298),
  ('finish_evaluating -> <empty>','finish_evaluating',0,'p_finish_evaluating','parser.py',302),
  ('cond -> expression pop_op_and_or post_cond','cond',3,'p_cond','parser.py',307),
  ('pop_op_and_or -> <empty>','pop_op_and_or',0,'p_pop_op_and_or','parser.py',310),
  ('post_cond -> AND push_op_and_or cond','post_cond',3,'p_post_cond','parser.py',315),
  ('post_cond -> OR push_op_and_or cond','post_cond',3,'p_post_cond','parser.py',316),
  ('post_cond -> empty','post_cond',1,'p_post_cond','parser.py',317),
  ('push_op_and_or -> <empty>','push_op_and_or',0,'p_push_op_and_or','parser.py',320),
  ('expression -> exp pop_relop post_expression','expression',3,'p_expression','parser.py',325),
  ('pop_relop -> <empty>','pop_relop',0,'p_pop_relop','parser.py',328),
  ('post_expression -> relational_operator expression','post_expression',2,'p_post_expression','parser.py',334),
  ('post_expression -> empty','post_expression',1,'p_post_expression','parser.py',335),
  ('push_relop -> <empty>','push_relop',0,'p_push_relop','parser.py',338),
  ('relational_operator -> LESS push_relop','relational_operator',2,'p_relational_operator','parser.py',343),
  ('relational_operator -> GREATER push_relop','relational_operator',2,'p_relational_operator','parser.py',344),
  ('relational_operator -> GREATER_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',345),
  ('relational_operator -> LESS_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',346),
  ('relational_operator -> EQUALS_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',347),
  ('relational_operator -> NOT_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',348),
  ('exp -> term pop_exp post_exp','exp',3,'p_exp','parser.py',352),
  ('pop_exp -> <empty>','pop_exp',0,'p_pop_exp','parser.py',355),
  ('post_exp -> PLUS push_exp exp','post_exp',3,'p_post_exp','parser.py',360),
  ('post_exp -> MINUS push_exp exp','post_exp',3,'p_post_exp','parser.py',361),
  ('post_exp -> empty','post_exp',1,'p_post_exp','parser.py',362),
  ('push_exp -> <empty>','push_exp',0,'p_push_exp','parser.py',365),
  ('term -> factor pop_term post_term','term',3,'p_term','parser.py',371),
  ('pop_term -> <empty>','pop_term',0,'p_pop_term','parser.py',374),
  ('post_term -> TIMES push_term term','post_term',3,'p_post_term','parser.py',380),
  ('post_term -> DIVIDE push_term term','post_term',3,'p_post_term','parser.py',381),
  ('post_term -> PERCENTAGE push_term term','post_term',3,'p_post_term','parser.py',382),
  ('post_term -> MOD push_term term','post_term',3,'p_post_term','parser.py',383),
  ('post_term -> empty','post_term',1,'p_post_term','parser.py',384),
  ('push_term -> <empty>','push_term',0,'p_push_term','parser.py',387),
  ('factor -> LEFT_PARENTHESIS push_paren cond RIGHT_PARENTHESIS pop_paren','factor',5,'p_factor','parser.py',392),
  ('factor -> variable_constant','factor',1,'p_factor','parser.py',393),
  ('factor -> MINUS variable_constant','factor',2,'p_factor','parser.py',394),
  ('factor -> call_function','factor',1,'p_factor','parser.py',395),
  ('push_paren -> <empty>','push_paren',0,'p_push_paren','parser.py',398),
  ('pop_paren -> <empty>','pop_paren',0,'p_pop_paren','parser.py',402),
  ('variable_constant -> ID process_variable array_notation','variable_constant',3,'p_variable_constant','parser.py',407),
  ('variable_constant -> INT_CONSTANT push_constant','variable_constant',2,'p_variable_constant','parser.py',408),
  ('variable_constant -> DOUBLE_CONSTANT push_constant','variable_constant',2,'p_variable_constant','parser.py',409),
  ('variable_constant -> STRING_CONSTANT push_constant','variable_constant',2,'p_variable_constant','parser.py',410),
  ('variable_constant -> BOOL_CONSTANT push_constant','variable_constant',2,'p_variable_constant','parser.py',411),
  ('push_constant -> <empty>','push_constant',0,'p_push_constant','parser.py',414),
  ('process_variable -> <empty>','process_variable',0,'p_process_variable','parser.py',419),
  ('condition -> IF cond COLON push_gotoF optional_eol block post_condition END','condition',8,'p_condition','parser.py',435),
  ('push_gotoF -> <empty>','push_gotoF',0,'p_push_gotoF','parser.py',438),
  ('fill_goto -> <empty>','fill_goto',0,'p_fill_goto','parser.py',442),
  ('post_condition -> else','post_condition',1,'p_post_condition','parser.py',447),
  ('post_condition -> fill_goto empty','post_condition',2,'p_post_condition','parser.py',448),
  ('else -> ELSE fill_goto_plus COLON push_goto optional_eol block fill_goto','else',7,'p_else','parser.py',452),
  ('fill_goto_plus -> <empty>','fill_goto_plus',0,'p_fill_goto_plus','parser.py',455),
  ('push_goto -> <empty>','push_goto',0,'p_push_goto','parser.py',459),
  ('print -> PRINT cond post_print','print',3,'p_print','parser.py',464),
  ('post_print -> print_mod','post_print',1,'p_post_print','parser.py',467),
  ('post_print -> print_default','post_print',1,'p_post_print','parser.py',468),
  ('print_mod -> COMMA STRING_CONSTANT print_post_mod','print_mod',3,'p_print_mod','parser.py',471),
  ('print_post_mod -> <empty>','print_post_mod',0,'p_print_post_mod','parser.py',474),
  ('print_default -> empty','print_default',1,'p_print_default','parser.py',478),
  ('read -> READ start_read LEFT_PARENTHESIS identifier RIGHT_PARENTHESIS read_var','read',6,'p_read','parser.py',483),
  ('start_read -> <empty>','start_read',0,'p_start_read','parser.py',486),
  ('read_var -> <empty>','read_var',0,'p_read_var','parser.py',490),
  ('identifier -> ID process_variable post_identifier','identifier',3,'p_identifier','parser.py',498),
  ('post_identifier -> LEFT_BRACKET exp RIGHT_BRACKET','post_identifier',3,'p_post_identifier','parser.py',501),
  ('post_identifier -> empty','post_identifier',1,'p_post_identifier','parser.py',502),
  ('loop -> for','loop',1,'p_loop','parser.py',506),
  ('loop -> while','loop',1,'p_loop','parser.py',507),
  ('for -> FOR ID add_var FROM exp init_var TO exp push_for_cycle post_cycle end_for_loop','for',11,'p_for','parser.py',511),
  ('add_var -> <empty>','add_var',0,'p_add_var','parser.py',514),
  ('init_var -> <empty>','init_var',0,'p_init_var','parser.py',522),
  ('push_for_cycle -> <empty>','push_for_cycle',0,'p_push_for_cycle','parser.py',527),
  ('end_for_loop -> <empty>','end_for_loop',0,'p_end_for_loop','parser.py',534),
  ('while -> WHILE push_cycle cond push_gotoF post_cycle fill_goto_plus create_pending_goto','while',7,'p_while','parser.py',546),
  ('push_cycle -> <empty>','push_cycle',0,'p_push_cycle','parser.py',549),
  ('create_pending_goto -> <empty>','create_pending_goto',0,'p_create_pending_goto','parser.py',553),
  ('post_cycle -> COLON optional_eol block END','post_cycle',4,'p_post_cycle','parser.py',558),
  ('BOOL_CONSTANT -> TRUE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',561),
  ('BOOL_CONSTANT -> FALSE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',562),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',565),
]
