
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '7023854E6A21A9EB49AAA781A455FFC8'
    
_lr_action_items = {'RETURN':([4,5,6,11,16,21,22,23,24,25,26,27,29,31,33,38,40,41,42,43,47,49,51,52,54,56,57,58,60,61,62,63,64,65,66,67,69,70,71,76,80,82,83,85,88,91,94,100,102,104,107,108,110,112,116,117,122,124,126,127,128,129,130,131,132,133,134,135,136,142,144,145,150,154,156,168,172,],[-100,-100,-100,-100,-38,-91,-100,-35,-36,-33,-100,-34,-92,-37,-85,-87,-31,-29,-32,-30,-88,-90,-76,-71,-98,-74,-73,-100,-100,-99,-75,-100,-72,-100,-69,-100,-9,-11,-10,-39,-84,-96,-70,-62,-67,-58,-61,-49,-51,-45,-48,-81,-83,-93,-12,-14,146,-89,-64,-63,-65,-66,-68,-59,-60,-50,-46,-47,-82,-13,-86,146,164,-97,-94,-77,-95,]),'LESS':([11,26,47,49,51,52,54,56,57,58,60,61,62,63,64,66,83,85,88,91,94,116,117,124,126,127,128,129,130,131,132,142,],[-100,-100,-88,-90,-76,-71,-98,-74,-73,-100,-100,-99,-75,96,-72,-69,-70,-62,-67,-58,-61,-12,-14,-89,-64,-63,-65,-66,-68,-59,-60,-13,]),'READ':([3,4,5,6,11,16,21,22,23,24,25,26,27,29,31,33,38,40,41,42,43,47,49,51,52,54,56,57,58,60,61,62,63,64,65,66,67,76,80,81,82,83,85,88,91,94,100,102,104,107,108,110,112,116,117,118,122,124,126,127,128,129,130,131,132,133,134,135,136,142,144,145,154,156,168,169,172,],[17,-100,-100,-100,-100,-38,-91,17,-35,-36,-33,-100,-34,-92,-37,-85,-87,-31,-29,-32,-30,-88,-90,-76,-71,-98,-74,-73,-100,-100,-99,-75,-100,-72,-100,-69,-100,-39,-84,17,-96,-70,-62,-67,-58,-61,-49,-51,-45,-48,-81,-83,-93,-12,-14,17,17,-89,-64,-63,-65,-66,-68,-59,-60,-50,-46,-47,-82,-13,-86,17,-97,-94,-77,17,-95,]),'RIGHT_BRACKET':([11,26,47,49,51,52,54,56,57,58,60,61,62,63,64,65,66,79,83,85,88,91,94,100,102,104,107,114,116,117,119,124,126,127,128,129,130,131,132,133,134,135,139,141,142,157,],[-100,-100,-88,-90,-76,-71,-98,-74,-73,-100,-100,-99,-75,-100,-72,-100,-69,124,-70,-62,-67,-58,-61,-49,-51,-45,-48,-100,-12,-14,144,-89,-64,-63,-65,-66,-68,-59,-60,-50,-46,-47,-15,-17,-13,-16,]),'EQUALS_EQUALS':([11,26,47,49,51,52,54,56,57,58,60,61,62,63,64,66,83,85,88,91,94,116,117,124,126,127,128,129,130,131,132,142,],[-100,-100,-88,-90,-76,-71,-98,-74,-73,-100,-100,-99,-75,99,-72,-69,-70,-62,-67,-58,-61,-12,-14,-89,-64,-63,-65,-66,-68,-59,-60,-13,]),'WHILE':([3,4,5,6,11,16,21,22,23,24,25,26,27,29,31,33,38,40,41,42,43,47,49,51,52,54,56,57,58,60,61,62,63,64,65,66,67,76,80,81,82,83,85,88,91,94,100,102,104,107,108,110,112,116,117,118,122,124,126,127,128,129,130,131,132,133,134,135,136,142,144,145,154,156,168,169,172,],[18,-100,-100,-100,-100,-38,-91,18,-35,-36,-33,-100,-34,-92,-37,-85,-87,-31,-29,-32,-30,-88,-90,-76,-71,-98,-74,-73,-100,-100,-99,-75,-100,-72,-100,-69,-100,-39,-84,18,-96,-70,-62,-67,-58,-61,-49,-51,-45,-48,-81,-83,-93,-12,-14,18,18,-89,-64,-63,-65,-66,-68,-59,-60,-50,-46,-47,-82,-13,-86,18,-97,-94,-77,18,-95,]),'COLON':([11,26,47,49,51,52,53,54,56,57,58,60,61,62,63,64,65,66,73,83,85,88,91,94,100,102,104,107,116,117,124,126,127,128,129,130,131,132,133,134,135,138,142,161,167,],[-100,-100,-88,-90,-76,-71,81,-98,-74,-73,-100,-100,-99,-75,-100,-72,-100,-69,118,-70,-62,-67,-58,-61,-49,-51,-45,-48,-12,-14,-89,-64,-63,-65,-66,-68,-59,-60,-50,-46,-47,81,-13,169,81,]),'PRINT':([3,4,5,6,11,16,21,22,23,24,25,26,27,29,31,33,38,40,41,42,43,47,49,51,52,54,56,57,58,60,61,62,63,64,65,66,67,76,80,81,82,83,85,88,91,94,100,102,104,107,108,110,112,116,117,118,122,124,126,127,128,129,130,131,132,133,134,135,136,142,144,145,154,156,168,169,172,],[19,-100,-100,-100,-100,-38,-91,19,-35,-36,-33,-100,-34,-92,-37,-85,-87,-31,-29,-32,-30,-88,-90,-76,-71,-98,-74,-73,-100,-100,-99,-75,-100,-72,-100,-69,-100,-39,-84,19,-96,-70,-62,-67,-58,-61,-49,-51,-45,-48,-81,-83,-93,-12,-14,19,19,-89,-64,-63,-65,-66,-68,-59,-60,-50,-46,-47,-82,-13,-86,19,-97,-94,-77,19,-95,]),'GREATER_EQUALS':([11,26,47,49,51,52,54,56,57,58,60,61,62,63,64,66,83,85,88,91,94,116,117,124,126,127,128,129,130,131,132,142,],[-100,-100,-88,-90,-76,-71,-98,-74,-73,-100,-100,-99,-75,101,-72,-69,-70,-62,-67,-58,-61,-12,-14,-89,-64,-63,-65,-66,-68,-59,-60,-13,]),'MINUS':([11,18,19,26,28,32,34,35,36,37,39,47,48,49,51,52,54,56,57,58,59,60,61,62,64,66,72,75,83,84,85,86,87,88,89,92,93,95,96,97,98,99,101,103,105,106,111,116,117,124,126,127,128,129,130,140,142,146,155,164,],[-100,55,55,-100,55,-44,-41,-42,-40,55,-43,-88,55,-90,-76,-71,-98,-74,-73,-100,55,93,-99,-75,-72,-69,55,55,-70,55,-62,55,55,-67,55,55,55,-53,-52,-57,-55,-56,-54,55,55,55,55,-12,-14,-89,-64,-63,-65,-66,-68,55,-13,55,55,55,]),'MINUS_EQUALS':([4,11,26,47,49,124,],[32,-100,-100,-88,-90,-89,]),'FOR':([3,4,5,6,11,16,21,22,23,24,25,26,27,29,31,33,38,40,41,42,43,47,49,51,52,54,56,57,58,60,61,62,63,64,65,66,67,76,80,81,82,83,85,88,91,94,100,102,104,107,108,110,112,116,117,118,122,124,126,127,128,129,130,131,132,133,134,135,136,142,144,145,154,156,168,169,172,],[20,-100,-100,-100,-100,-38,-91,20,-35,-36,-33,-100,-34,-92,-37,-85,-87,-31,-29,-32,-30,-88,-90,-76,-71,-98,-74,-73,-100,-100,-99,-75,-100,-72,-100,-69,-100,-39,-84,20,-96,-70,-62,-67,-58,-61,-49,-51,-45,-48,-81,-83,-93,-12,-14,20,20,-89,-64,-63,-65,-66,-68,-59,-60,-50,-46,-47,-82,-13,-86,20,-97,-94,-77,20,-95,]),'NOT_EQUALS':([11,26,47,49,51,52,54,56,57,58,60,61,62,63,64,66,83,85,88,91,94,116,117,124,126,127,128,129,130,131,132,142,],[-100,-100,-88,-90,-76,-71,-98,-74,-73,-100,-100,-99,-75,97,-72,-69,-70,-62,-67,-58,-61,-12,-14,-89,-64,-63,-65,-66,-68,-59,-60,-13,]),'DOUBLE_CONSTANT':([18,19,28,32,34,35,36,37,39,48,55,59,72,75,84,86,87,89,92,93,95,96,97,98,99,101,103,105,106,111,140,146,155,164,],[56,56,56,-44,-41,-42,-40,56,-43,56,56,56,56,56,56,56,56,56,56,56,-53,-52,-57,-55,-56,-54,56,56,56,56,56,56,56,56,]),'LESS_EQUALS':([11,26,47,49,51,52,54,56,57,58,60,61,62,63,64,66,83,85,88,91,94,116,117,124,126,127,128,129,130,131,132,142,],[-100,-100,-88,-90,-76,-71,-98,-74,-73,-100,-100,-99,-75,98,-72,-69,-70,-62,-67,-58,-61,-12,-14,-89,-64,-63,-65,-66,-68,-59,-60,-13,]),'TO':([11,26,47,49,51,52,54,56,57,58,60,61,62,64,66,83,85,88,91,94,116,117,124,126,127,128,129,130,131,132,137,142,],[-100,-100,-88,-90,-76,-71,-98,-74,-73,-100,-100,-99,-75,-72,-69,-70,-62,-67,-58,-61,-12,-14,-89,-64,-63,-65,-66,-68,-59,-60,155,-13,]),'INT_CONSTANT':([18,19,28,32,34,35,36,37,39,48,55,59,72,75,84,86,87,89,92,93,95,96,97,98,99,101,103,105,106,111,140,146,155,164,],[57,57,57,-44,-41,-42,-40,57,-43,57,57,57,57,57,57,57,57,57,57,57,-53,-52,-57,-55,-56,-54,57,57,57,57,57,57,57,57,]),'COMMA':([11,26,47,49,51,52,54,56,57,58,60,61,62,63,64,65,66,67,83,85,88,91,94,100,102,104,107,114,116,117,123,124,126,127,128,129,130,131,132,133,134,135,142,],[-100,-100,-88,-90,-76,-71,-98,-74,-73,-100,-100,-99,-75,-100,-72,-100,-69,109,-70,-62,-67,-58,-61,-49,-51,-45,-48,140,-12,-14,152,-89,-64,-63,-65,-66,-68,-59,-60,-50,-46,-47,-13,]),'PLUS':([11,26,47,49,51,52,54,56,57,58,60,61,62,64,66,83,85,88,116,117,124,126,127,128,129,130,142,],[-100,-100,-88,-90,-76,-71,-98,-74,-73,-100,92,-99,-75,-72,-69,-70,-62,-67,-12,-14,-89,-64,-63,-65,-66,-68,-13,]),'PERCENTAGE':([11,26,47,49,51,52,54,56,57,58,61,62,64,66,83,116,117,124,130,142,],[-100,-100,-88,-90,-76,-71,-98,-74,-73,87,-99,-75,-72,-69,-70,-12,-14,-89,-68,-13,]),'IF':([3,4,5,6,11,16,21,22,23,24,25,26,27,29,31,33,38,40,41,42,43,47,49,51,52,54,56,57,58,60,61,62,63,64,65,66,67,76,80,81,82,83,85,88,91,94,100,102,104,107,108,110,112,116,117,118,122,124,126,127,128,129,130,131,132,133,134,135,136,142,144,145,154,156,168,169,172,],[28,-100,-100,-100,-100,-38,-91,28,-35,-36,-33,-100,-34,-92,-37,-85,-87,-31,-29,-32,-30,-88,-90,-76,-71,-98,-74,-73,-100,-100,-99,-75,-100,-72,-100,-69,-100,-39,-84,28,-96,-70,-62,-67,-58,-61,-49,-51,-45,-48,-81,-83,-93,-12,-14,28,28,-89,-64,-63,-65,-66,-68,-59,-60,-50,-46,-47,-82,-13,-86,28,-97,-94,-77,28,-95,]),'LEFT_PARENTHESIS':([17,18,19,26,28,32,34,35,36,37,39,44,48,59,72,75,84,86,87,89,92,93,95,96,97,98,99,101,103,105,106,111,140,146,155,164,],[50,59,59,72,59,-44,-41,-42,-40,59,-43,77,59,59,59,59,59,59,59,59,59,59,-53,-52,-57,-55,-56,-54,59,59,59,59,59,59,59,59,]),'$end':([7,10,15,46,74,78,],[0,-4,-2,-3,-8,-1,]),'END':([4,5,6,11,16,21,22,23,24,25,26,27,29,31,33,38,40,41,42,43,47,49,51,52,54,56,57,58,60,61,62,63,64,65,66,67,69,70,71,76,80,82,83,85,88,91,94,100,102,104,107,108,110,112,116,117,124,125,126,127,128,129,130,131,132,133,134,135,136,142,143,144,150,154,156,158,159,160,163,168,171,172,173,],[-100,-100,-100,-100,-38,-91,-100,-35,-36,-33,-100,-34,-92,-37,-85,-87,-31,-29,-32,-30,-88,-90,-76,-71,-98,-74,-73,-100,-100,-99,-75,-100,-72,-100,-69,-100,-9,-11,-10,-39,-84,-96,-70,-62,-67,-58,-61,-49,-51,-45,-48,-81,-83,-93,-12,-14,-89,154,-64,-63,-65,-66,-68,-59,-60,-50,-46,-47,-82,-13,-100,-86,165,-97,-94,168,-78,-79,170,-77,174,-95,-80,]),'DIVIDE':([11,26,47,49,51,52,54,56,57,58,61,62,64,66,83,116,117,124,130,142,],[-100,-100,-88,-90,-76,-71,-98,-74,-73,84,-99,-75,-72,-69,-70,-12,-14,-89,-68,-13,]),'TIMES_EQUALS':([4,11,26,47,49,124,],[34,-100,-100,-88,-90,-89,]),'EQUALS':([4,11,26,47,49,124,],[36,-100,-100,-88,-90,-89,]),'ELSE':([4,5,6,11,16,21,22,23,24,25,26,27,29,31,33,38,40,41,42,43,47,49,51,52,54,56,57,58,60,61,62,63,64,65,66,67,69,70,71,76,80,82,83,85,88,91,94,100,102,104,107,108,110,112,116,117,124,126,127,128,129,130,131,132,133,134,135,136,142,143,144,154,156,168,172,],[-100,-100,-100,-100,-38,-91,-100,-35,-36,-33,-100,-34,-92,-37,-85,-87,-31,-29,-32,-30,-88,-90,-76,-71,-98,-74,-73,-100,-100,-99,-75,-100,-72,-100,-69,-100,-9,-11,-10,-39,-84,-96,-70,-62,-67,-58,-61,-49,-51,-45,-48,-81,-83,-93,-12,-14,-89,-64,-63,-65,-66,-68,-59,-60,-50,-46,-47,-82,-13,161,-86,-97,-94,-77,-95,]),'FUNC':([0,1,4,5,6,9,11,26,33,38,40,41,42,43,47,49,51,52,54,56,57,58,60,61,62,63,64,65,66,76,83,85,88,91,94,100,102,104,107,116,117,121,124,126,127,128,129,130,131,132,133,134,135,142,144,147,148,149,162,165,170,174,],[8,8,-100,-100,-100,8,-100,-100,-85,-87,-31,-29,-32,-30,-88,-90,-76,-71,-98,-74,-73,-100,-100,-99,-75,-100,-72,-100,-69,-39,-70,-62,-67,-58,-61,-49,-51,-45,-48,-12,-14,-18,-89,-64,-63,-65,-66,-68,-59,-60,-50,-46,-47,-13,-86,-20,-22,-21,-19,-23,-25,-24,]),'IN':([11,47,49,68,124,],[-100,-88,-90,113,-89,]),'FALSE':([18,19,28,32,34,35,36,37,39,48,55,59,72,75,84,86,87,89,92,93,95,96,97,98,99,101,103,105,106,111,140,146,155,164,],[61,61,61,-44,-41,-42,-40,61,-43,61,61,61,61,61,61,61,61,61,61,61,-53,-52,-57,-55,-56,-54,61,61,61,61,61,61,61,61,]),'RIGHT_PARENTHESIS':([11,26,47,49,50,51,52,54,56,57,58,60,61,62,63,64,65,66,72,77,83,85,88,90,91,94,100,102,104,107,114,115,116,117,120,123,124,126,127,128,129,130,131,132,133,134,135,139,141,142,151,153,157,166,],[-100,-100,-88,-90,80,-76,-71,-98,-74,-73,-100,-100,-99,-75,-100,-72,-100,-69,117,122,-70,-62,-67,130,-58,-61,-49,-51,-45,-48,-100,142,-12,-14,145,-100,-89,-64,-63,-65,-66,-68,-59,-60,-50,-46,-47,-15,-17,-13,-26,-28,-16,-27,]),'TIMES':([11,26,47,49,51,52,54,56,57,58,61,62,64,66,83,116,117,124,130,142,],[-100,-100,-88,-90,-76,-71,-98,-74,-73,86,-99,-75,-72,-69,-70,-12,-14,-89,-68,-13,]),'ID':([0,3,4,5,6,8,11,16,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,47,48,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,72,75,76,77,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,116,117,118,122,124,126,127,128,129,130,131,132,133,134,135,136,140,142,144,145,146,152,154,155,156,164,168,169,172,],[11,26,-100,11,11,44,-100,-38,26,26,11,-91,26,-35,-36,-33,-100,-34,26,-92,-37,-44,-85,-41,-42,-40,26,-87,-43,-31,-29,-32,-30,-88,26,-90,-76,-71,-98,11,-74,-73,-100,26,-100,-99,-75,-100,-72,-100,-69,-100,26,26,-39,11,-84,26,-96,-70,26,-62,26,26,-67,26,-58,26,26,-61,-53,-52,-57,-55,-56,-49,-54,-51,26,-45,26,26,-48,-81,-83,26,-93,11,-12,-14,26,26,-89,-64,-63,-65,-66,-68,-59,-60,-50,-46,-47,-82,26,-13,-86,26,26,11,-97,26,-94,26,-77,26,-95,]),'TRUE':([18,19,28,32,34,35,36,37,39,48,55,59,72,75,84,86,87,89,92,93,95,96,97,98,99,101,103,105,106,111,140,146,155,164,],[54,54,54,-44,-41,-42,-40,54,-43,54,54,54,54,54,54,54,54,54,54,54,-53,-52,-57,-55,-56,-54,54,54,54,54,54,54,54,54,]),'PLUS_EQUALS':([4,11,26,47,49,124,],[39,-100,-100,-88,-90,-89,]),'AND':([11,26,47,49,51,52,54,56,57,58,60,61,62,63,64,65,66,83,85,88,91,94,100,102,116,117,124,126,127,128,129,130,131,132,133,142,],[-100,-100,-88,-90,-76,-71,-98,-74,-73,-100,-100,-99,-75,-100,-72,105,-69,-70,-62,-67,-58,-61,-49,-51,-12,-14,-89,-64,-63,-65,-66,-68,-59,-60,-50,-13,]),'FROM':([11,47,49,68,124,],[-100,-88,-90,111,-89,]),'GREATER':([11,26,47,49,51,52,54,56,57,58,60,61,62,63,64,66,83,85,88,91,94,116,117,124,126,127,128,129,130,131,132,142,],[-100,-100,-88,-90,-76,-71,-98,-74,-73,-100,-100,-99,-75,95,-72,-69,-70,-62,-67,-58,-61,-12,-14,-89,-64,-63,-65,-66,-68,-59,-60,-13,]),'DIVIDE_EQUALS':([4,11,26,47,49,124,],[35,-100,-100,-88,-90,-89,]),'STRING_CONSTANT':([18,19,28,32,34,35,36,37,39,48,55,59,72,75,84,86,87,89,92,93,95,96,97,98,99,101,103,105,106,109,111,140,146,155,164,],[62,62,62,-44,-41,-42,-40,62,-43,62,62,62,62,62,62,62,62,62,62,62,-53,-52,-57,-55,-56,-54,62,62,62,136,62,62,62,62,62,]),'END_MAIN':([4,5,6,11,16,21,22,23,24,25,26,27,29,30,31,33,38,40,41,42,43,47,49,51,52,54,56,57,58,60,61,62,63,64,65,66,67,69,70,71,76,80,82,83,85,88,91,94,100,102,104,107,108,110,112,116,117,124,126,127,128,129,130,131,132,133,134,135,136,142,144,154,156,168,172,],[-100,-100,-100,-100,-38,-91,-100,-35,-36,-33,-100,-34,-92,74,-37,-85,-87,-31,-29,-32,-30,-88,-90,-76,-71,-98,-74,-73,-100,-100,-99,-75,-100,-72,-100,-69,-100,-9,-11,-10,-39,-84,-96,-70,-62,-67,-58,-61,-49,-51,-45,-48,-81,-83,-93,-12,-14,-89,-64,-63,-65,-66,-68,-59,-60,-50,-46,-47,-82,-13,-86,-97,-94,-77,-95,]),'LEFT_BRACKET':([11,26,36,],[48,48,75,]),'MAIN':([0,1,2,4,5,6,9,11,12,13,14,26,33,38,40,41,42,43,45,47,49,51,52,54,56,57,58,60,61,62,63,64,65,66,76,83,85,88,91,94,100,102,104,107,116,117,121,124,126,127,128,129,130,131,132,133,134,135,142,144,147,148,149,162,165,170,174,],[3,-100,3,-100,-100,-100,3,-100,-5,-6,-7,-100,-85,-87,-31,-29,-32,-30,3,-88,-90,-76,-71,-98,-74,-73,-100,-100,-99,-75,-100,-72,-100,-69,-39,-70,-62,-67,-58,-61,-49,-51,-45,-48,-12,-14,-18,-89,-64,-63,-65,-66,-68,-59,-60,-50,-46,-47,-13,-86,-20,-22,-21,-19,-23,-25,-24,]),'OR':([11,26,47,49,51,52,54,56,57,58,60,61,62,63,64,65,66,83,85,88,91,94,100,102,116,117,124,126,127,128,129,130,131,132,133,142,],[-100,-100,-88,-90,-76,-71,-98,-74,-73,-100,-100,-99,-75,-100,-72,106,-69,-70,-62,-67,-58,-61,-49,-51,-12,-14,-89,-64,-63,-65,-66,-68,-59,-60,-50,-13,]),'MOD':([11,26,47,49,51,52,54,56,57,58,61,62,64,66,83,116,117,124,130,142,],[-100,-100,-88,-90,-76,-71,-98,-74,-73,89,-99,-75,-72,-69,-70,-12,-14,-89,-68,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'post_functions':([1,],[12,]),'relational_operator':([63,],[103,]),'call_function':([3,18,19,22,28,37,48,59,72,75,81,84,86,87,89,92,93,103,105,106,111,118,122,140,145,146,155,164,169,],[16,52,52,16,52,52,52,52,52,52,16,52,52,52,52,52,52,52,52,52,52,16,16,52,16,52,52,52,16,]),'BOOL_CONSTANT':([18,19,28,37,48,55,59,72,75,84,86,87,89,92,93,103,105,106,111,140,146,155,164,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'post_function':([77,],[121,]),'post_parameters':([123,],[151,]),'cond':([18,19,28,37,59,72,75,105,106,140,146,164,],[53,67,73,76,90,114,114,134,135,114,163,171,]),'post_print':([67,],[108,]),'post_cycle':([53,138,167,],[82,156,172,]),'post_cond':([65,],[104,]),'functions':([0,1,9,],[2,13,45,]),'call_parameters':([72,75,140,],[115,119,157,]),'post_condition':([143,],[158,]),'for':([3,22,81,118,122,145,169,],[21,21,21,21,21,21,21,]),'post_call_parameters':([114,],[139,]),'post_exp':([60,],[91,]),'program':([0,],[7,]),'statement':([3,22,81,118,122,145,169,],[22,22,22,22,22,22,22,]),'factor':([18,19,28,37,48,59,72,75,84,86,87,89,92,93,103,105,106,111,140,146,155,164,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'print':([3,22,81,118,122,145,169,],[23,23,23,23,23,23,23,]),'main':([0,2,9,45,],[10,15,46,78,]),'post_variable':([5,6,],[41,43,]),'empty':([1,4,5,6,11,22,26,58,60,63,65,67,114,123,143,],[14,38,42,42,49,70,49,88,94,102,107,110,141,153,160,]),'assignment_operator':([4,],[37,]),'function':([0,1,9,],[1,1,1,]),'post_for':([68,],[112,]),'read':([3,22,81,118,122,145,169,],[24,24,24,24,24,24,24,]),'assignment':([0,3,5,6,22,81,118,122,145,169,],[5,5,5,5,5,5,5,5,5,5,]),'post_term':([58,],[85,]),'else':([143,],[159,]),'value_return':([122,145,],[148,148,]),'post_identifier':([11,26,],[47,47,]),'void_return':([122,145,],[149,149,]),'variable':([0,3,5,6,22,81,118,122,145,169,],[9,25,40,40,25,25,25,25,25,25,]),'variable_constant':([18,19,28,37,48,55,59,72,75,84,86,87,89,92,93,103,105,106,111,140,146,155,164,],[66,66,66,66,66,83,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'post_block':([22,],[69,]),'condition':([3,22,81,118,122,145,169,],[27,27,27,27,27,27,27,]),'term':([18,19,28,37,48,59,72,75,84,86,87,89,92,93,103,105,106,111,140,146,155,164,],[60,60,60,60,60,60,60,60,126,127,128,129,60,60,60,60,60,60,60,60,60,60,]),'post_list':([4,],[33,]),'parameters':([77,152,],[120,166,]),'list':([0,3,5,6,22,81,118,122,145,169,],[6,6,6,6,6,6,6,6,6,6,]),'func_return':([122,145,],[147,162,]),'while':([3,22,81,118,122,145,169,],[29,29,29,29,29,29,29,]),'post_expression':([63,],[100,]),'loop':([3,22,81,118,122,145,169,],[31,31,31,31,31,31,31,]),'exp':([18,19,28,37,48,59,72,75,92,93,103,105,106,111,140,146,155,164,],[63,63,63,63,79,63,63,63,131,132,133,63,63,137,63,63,167,63,]),'identifier':([0,3,5,6,18,19,20,22,28,37,48,55,59,72,75,77,81,84,86,87,89,92,93,103,105,106,111,113,118,122,140,145,146,152,155,164,169,],[4,4,4,4,64,64,68,4,64,64,64,64,64,64,64,123,4,64,64,64,64,64,64,64,64,64,64,138,4,4,64,4,64,123,64,64,4,]),'expression':([18,19,28,37,59,72,75,105,106,140,146,164,],[65,65,65,65,65,65,65,65,65,65,65,65,]),'post_call_function':([72,],[116,]),'block':([3,22,81,118,122,145,169,],[30,71,125,143,150,150,173,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> variable functions main','program',3,'p_program','parser.py',18),
  ('program -> functions main','program',2,'p_program','parser.py',19),
  ('program -> variable main','program',2,'p_program','parser.py',20),
  ('program -> main','program',1,'p_program','parser.py',21),
  ('functions -> function post_functions','functions',2,'p_functions','parser.py',24),
  ('post_functions -> functions','post_functions',1,'p_post_functions','parser.py',28),
  ('post_functions -> empty','post_functions',1,'p_post_functions','parser.py',29),
  ('main -> MAIN block END_MAIN','main',3,'p_main','parser.py',33),
  ('block -> statement post_block','block',2,'p_block','parser.py',37),
  ('post_block -> block','post_block',1,'p_post_block','parser.py',40),
  ('post_block -> empty','post_block',1,'p_post_block','parser.py',41),
  ('call_function -> ID LEFT_PARENTHESIS post_call_function','call_function',3,'p_call_function','parser.py',45),
  ('post_call_function -> call_parameters RIGHT_PARENTHESIS','post_call_function',2,'p_post_call_function','parser.py',48),
  ('post_call_function -> RIGHT_PARENTHESIS','post_call_function',1,'p_post_call_function','parser.py',49),
  ('call_parameters -> cond post_call_parameters','call_parameters',2,'p_call_parameters','parser.py',53),
  ('post_call_parameters -> COMMA call_parameters','post_call_parameters',2,'p_post_call_parameters','parser.py',56),
  ('post_call_parameters -> empty','post_call_parameters',1,'p_post_call_parameters','parser.py',57),
  ('function -> FUNC ID LEFT_PARENTHESIS post_function','function',4,'p_function','parser.py',61),
  ('post_function -> parameters RIGHT_PARENTHESIS func_return','post_function',3,'p_post_function','parser.py',64),
  ('post_function -> RIGHT_PARENTHESIS func_return','post_function',2,'p_post_function','parser.py',65),
  ('func_return -> void_return','func_return',1,'p_func_return','parser.py',68),
  ('func_return -> value_return','func_return',1,'p_func_return','parser.py',69),
  ('void_return -> block END','void_return',2,'p_void_return','parser.py',72),
  ('value_return -> block RETURN cond END','value_return',4,'p_value_return','parser.py',75),
  ('value_return -> RETURN cond END','value_return',3,'p_value_return','parser.py',76),
  ('parameters -> identifier post_parameters','parameters',2,'p_parameters','parser.py',81),
  ('post_parameters -> COMMA parameters','post_parameters',2,'p_post_parameters','parser.py',84),
  ('post_parameters -> empty','post_parameters',1,'p_post_parameters','parser.py',85),
  ('variable -> assignment post_variable','variable',2,'p_variable','parser.py',89),
  ('variable -> list post_variable','variable',2,'p_variable','parser.py',90),
  ('post_variable -> variable','post_variable',1,'p_post_variable','parser.py',93),
  ('post_variable -> empty','post_variable',1,'p_post_variable','parser.py',94),
  ('statement -> variable','statement',1,'p_statement','parser.py',98),
  ('statement -> condition','statement',1,'p_statement','parser.py',99),
  ('statement -> print','statement',1,'p_statement','parser.py',100),
  ('statement -> read','statement',1,'p_statement','parser.py',101),
  ('statement -> loop','statement',1,'p_statement','parser.py',102),
  ('statement -> call_function','statement',1,'p_statement','parser.py',103),
  ('assignment -> identifier assignment_operator cond','assignment',3,'p_assignment','parser.py',109),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',113),
  ('assignment_operator -> TIMES_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',114),
  ('assignment_operator -> DIVIDE_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',115),
  ('assignment_operator -> PLUS_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',116),
  ('assignment_operator -> MINUS_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',117),
  ('cond -> expression post_cond','cond',2,'p_cond','parser.py',121),
  ('post_cond -> AND cond','post_cond',2,'p_post_cond','parser.py',124),
  ('post_cond -> OR cond','post_cond',2,'p_post_cond','parser.py',125),
  ('post_cond -> empty','post_cond',1,'p_post_cond','parser.py',126),
  ('expression -> exp post_expression','expression',2,'p_expression','parser.py',130),
  ('post_expression -> relational_operator exp','post_expression',2,'p_post_expression','parser.py',133),
  ('post_expression -> empty','post_expression',1,'p_post_expression','parser.py',134),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',138),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',139),
  ('relational_operator -> GREATER_EQUALS','relational_operator',1,'p_relational_operator','parser.py',140),
  ('relational_operator -> LESS_EQUALS','relational_operator',1,'p_relational_operator','parser.py',141),
  ('relational_operator -> EQUALS_EQUALS','relational_operator',1,'p_relational_operator','parser.py',142),
  ('relational_operator -> NOT_EQUALS','relational_operator',1,'p_relational_operator','parser.py',143),
  ('exp -> term post_exp','exp',2,'p_exp','parser.py',147),
  ('post_exp -> PLUS exp','post_exp',2,'p_post_exp','parser.py',150),
  ('post_exp -> MINUS exp','post_exp',2,'p_post_exp','parser.py',151),
  ('post_exp -> empty','post_exp',1,'p_post_exp','parser.py',152),
  ('term -> factor post_term','term',2,'p_term','parser.py',156),
  ('post_term -> TIMES term','post_term',2,'p_post_term','parser.py',159),
  ('post_term -> DIVIDE term','post_term',2,'p_post_term','parser.py',160),
  ('post_term -> PERCENTAGE term','post_term',2,'p_post_term','parser.py',161),
  ('post_term -> MOD term','post_term',2,'p_post_term','parser.py',162),
  ('post_term -> empty','post_term',1,'p_post_term','parser.py',163),
  ('factor -> LEFT_PARENTHESIS cond RIGHT_PARENTHESIS','factor',3,'p_factor','parser.py',167),
  ('factor -> variable_constant','factor',1,'p_factor','parser.py',168),
  ('factor -> MINUS variable_constant','factor',2,'p_factor','parser.py',169),
  ('factor -> call_function','factor',1,'p_factor','parser.py',170),
  ('variable_constant -> identifier','variable_constant',1,'p_variable_constant','parser.py',174),
  ('variable_constant -> INT_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',175),
  ('variable_constant -> DOUBLE_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',176),
  ('variable_constant -> STRING_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',177),
  ('variable_constant -> BOOL_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',178),
  ('condition -> IF cond COLON block post_condition END','condition',6,'p_condition','parser.py',182),
  ('post_condition -> else','post_condition',1,'p_post_condition','parser.py',186),
  ('post_condition -> empty','post_condition',1,'p_post_condition','parser.py',187),
  ('else -> ELSE COLON block','else',3,'p_else','parser.py',191),
  ('print -> PRINT cond post_print','print',3,'p_print','parser.py',195),
  ('post_print -> COMMA STRING_CONSTANT','post_print',2,'p_post_print','parser.py',198),
  ('post_print -> empty','post_print',1,'p_post_print','parser.py',199),
  ('read -> READ LEFT_PARENTHESIS RIGHT_PARENTHESIS','read',3,'p_read','parser.py',203),
  ('list -> identifier post_list','list',2,'p_list','parser.py',207),
  ('post_list -> EQUALS LEFT_BRACKET call_parameters RIGHT_BRACKET','post_list',4,'p_post_list','parser.py',210),
  ('post_list -> empty','post_list',1,'p_post_list','parser.py',211),
  ('identifier -> ID post_identifier','identifier',2,'p_identifier','parser.py',215),
  ('post_identifier -> LEFT_BRACKET exp RIGHT_BRACKET','post_identifier',3,'p_post_identifier','parser.py',218),
  ('post_identifier -> empty','post_identifier',1,'p_post_identifier','parser.py',219),
  ('loop -> for','loop',1,'p_loop','parser.py',223),
  ('loop -> while','loop',1,'p_loop','parser.py',224),
  ('for -> FOR identifier post_for','for',3,'p_for','parser.py',228),
  ('post_for -> IN identifier post_cycle','post_for',3,'p_post_for','parser.py',231),
  ('post_for -> FROM exp TO exp post_cycle','post_for',5,'p_post_for','parser.py',232),
  ('while -> WHILE cond post_cycle','while',3,'p_while','parser.py',236),
  ('post_cycle -> COLON block END','post_cycle',3,'p_post_cycle','parser.py',240),
  ('BOOL_CONSTANT -> TRUE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',243),
  ('BOOL_CONSTANT -> FALSE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',244),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',247),
]
