
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'DBF3D48242A0EC61F1C9015451835AB0'
    
_lr_action_items = {'RETURN':([4,5,6,14,16,31,32,33,41,47,63,79,97,98,99,100,101,102,105,109,111,138,139,181,182,],[-11,-160,-10,-160,-9,-7,-6,-8,-82,-16,-160,-67,-31,-29,-30,-64,-65,-62,-63,-66,-160,177,-160,219,177,]),'LESS':([81,83,85,86,87,89,90,91,92,93,95,119,120,121,122,123,124,126,127,128,129,130,144,146,148,151,156,157,192,212,214,231,232,233,234,235,236,237,248,249,261,267,268,282,285,],[-118,-127,-128,-127,-108,-127,-102,-127,-127,-91,-116,-125,-128,-117,-160,-122,-160,-123,-160,-126,-124,159,-121,-72,-107,-113,-101,-105,-120,-32,-120,-110,-109,-111,-112,-115,-104,-103,-120,-36,-74,-36,-35,-71,-34,]),'READ':([4,5,6,14,16,31,32,33,41,43,47,49,63,79,100,101,102,105,109,111,135,138,139,174,182,215,216,251,295,300,304,],[-11,-160,-10,-160,-9,-7,-6,-8,-82,-160,-16,59,59,-67,-64,-65,-62,-63,-66,-160,-130,59,-160,-160,59,59,-160,59,-136,-160,59,]),'VOID':([13,],[28,]),'RIGHT_BRACKET':([50,74,81,83,85,86,87,89,90,91,92,95,119,120,121,122,123,124,126,127,128,129,144,146,148,151,156,157,192,212,214,230,231,232,233,234,235,236,237,248,249,257,261,267,268,282,285,],[-20,110,-118,-127,-128,-127,-108,-127,-102,-127,-127,-116,-125,-128,-117,-160,-122,-160,-123,-160,-126,-124,-121,-72,-107,-113,-101,-105,-120,-32,-120,261,-110,-109,-111,-112,-115,-104,-103,-120,-36,279,-74,-36,-35,-71,-34,]),'EOL':([0,2,5,15,34,35,36,39,40,45,46,52,53,58,62,64,65,66,68,71,73,75,76,81,82,83,85,86,87,89,90,91,92,93,94,95,108,110,112,115,117,118,119,120,121,122,123,124,126,127,128,129,130,131,135,137,143,144,146,148,151,156,157,164,165,167,170,174,186,192,195,212,214,216,217,218,219,221,231,232,233,234,235,236,237,238,239,246,248,249,252,253,255,256,261,263,267,268,274,276,277,281,282,285,287,289,290,291,293,295,296,298,299,300,302,303,],[-136,5,5,-131,-28,-128,5,5,-160,-160,-19,-17,-22,5,-149,5,5,5,5,-150,5,-21,5,-118,-142,-127,-128,-127,-108,-127,-102,-127,-127,-91,-85,-116,-27,-18,5,-137,-139,-138,-125,-128,-117,-160,-122,-160,-123,-160,-126,-124,-160,-160,-130,5,-141,-121,-72,-107,-113,-101,-105,-90,-93,-84,-88,5,-140,-120,-92,-32,-120,5,-135,-54,5,-55,-110,-109,-111,-112,-115,-104,-103,-86,-87,-81,-120,-36,-158,5,-54,5,-74,-68,-36,-35,-156,-55,5,-145,-71,-34,-129,-159,-55,5,-143,-136,5,-55,-155,5,5,-151,]),'EQUALS_EQUALS':([81,83,85,86,87,89,90,91,92,93,95,119,120,121,122,123,124,126,127,128,129,130,144,146,148,151,156,157,192,212,214,231,232,233,234,235,236,237,248,249,261,267,268,282,285,],[-118,-127,-128,-127,-108,-127,-102,-127,-127,-91,-116,-125,-128,-117,-160,-122,-160,-123,-160,-126,-124,163,-121,-72,-107,-113,-101,-105,-120,-32,-120,-110,-109,-111,-112,-115,-104,-103,-120,-36,-74,-36,-35,-71,-34,]),'WHILE':([4,5,6,14,16,31,32,33,41,43,47,49,63,79,100,101,102,105,109,111,135,138,139,174,182,215,216,251,295,300,304,],[-11,-160,-10,-160,-9,-7,-6,-8,-82,-160,-16,70,70,-67,-64,-65,-62,-63,-66,-160,-130,70,-160,-160,70,70,-160,70,-136,-160,70,]),'PRINT':([4,5,6,14,16,31,32,33,41,43,47,49,63,79,100,101,102,105,109,111,135,138,139,174,182,215,216,251,295,300,304,],[-11,-160,-10,-160,-9,-7,-6,-8,-82,-160,-16,60,60,-67,-64,-65,-62,-63,-66,-160,-130,60,-160,-160,60,60,-160,60,-136,-160,60,]),'TRUE':([60,69,70,84,88,107,125,134,145,147,149,150,152,154,155,158,159,160,161,162,163,166,168,169,171,173,177,187,188,189,190,191,193,194,196,197,198,199,200,201,202,203,205,206,207,208,209,210,219,224,241,242,243,244,245,262,265,],[83,83,-157,83,-119,83,83,-119,-73,-114,-114,-114,-114,-106,-106,83,-94,-94,-94,-94,-94,-94,-89,-89,83,83,83,83,83,83,83,83,83,83,-95,-97,-100,-98,-99,-96,83,83,-80,-80,-80,-80,-80,83,83,83,-79,-78,-76,-77,-75,83,83,]),'MINUS':([60,69,70,81,83,85,86,87,88,89,90,91,92,95,107,119,120,121,122,123,124,125,126,127,128,129,134,144,145,146,147,148,149,150,151,152,154,155,158,159,160,161,162,163,166,168,169,171,173,177,187,188,189,190,191,192,193,194,196,197,198,199,200,201,202,203,205,206,207,208,209,210,212,214,219,224,231,232,233,234,235,241,242,243,244,245,248,249,261,262,265,267,268,282,285,],[84,84,-157,-118,-127,-128,-127,-108,-119,-127,-102,-127,-127,-116,84,-125,-128,-117,-160,-122,-160,84,-123,154,-126,-124,-119,-121,-73,-72,-114,-107,-114,-114,-113,-114,-106,-106,84,-94,-94,-94,-94,-94,-94,-89,-89,84,84,84,84,84,84,84,84,-120,84,84,-95,-97,-100,-98,-99,-96,84,84,-80,-80,-80,-80,-80,84,-32,-120,84,84,-110,-109,-111,-112,-115,-79,-78,-76,-77,-75,-120,-36,-74,84,84,-36,-35,-71,-34,]),'DIVIDE':([81,83,85,86,87,89,91,92,95,119,120,121,122,123,124,126,128,129,144,146,192,212,214,235,248,249,261,267,268,282,285,],[-118,-127,-128,-127,-108,-127,-127,-127,-116,-125,-128,-117,-160,-122,147,-123,-126,-124,-121,-72,-120,-32,-120,-115,-120,-36,-74,-36,-35,-71,-34,]),'MINUS_EQUALS':([67,103,133,146,172,261,282,],[-69,-70,-160,-72,205,-74,-71,]),'END_MAIN':([4,5,6,16,63,72,79,97,98,99,100,101,102,105,109,],[-11,-160,-10,-9,-160,108,-67,-31,-29,-30,-64,-65,-62,-63,-66,]),'NOT_EQUALS':([81,83,85,86,87,89,90,91,92,93,95,119,120,121,122,123,124,126,127,128,129,130,144,146,148,151,156,157,192,212,214,231,232,233,234,235,236,237,248,249,261,267,268,282,285,],[-118,-127,-128,-127,-108,-127,-102,-127,-127,-91,-116,-125,-128,-117,-160,-122,-160,-123,-160,-126,-124,161,-121,-72,-107,-113,-101,-105,-120,-32,-120,-110,-109,-111,-112,-115,-104,-103,-120,-36,-74,-36,-35,-71,-34,]),'DOUBLE_CONSTANT':([60,69,70,84,88,107,125,134,145,147,149,150,152,154,155,158,159,160,161,162,163,166,168,169,171,173,177,187,188,189,190,191,193,194,196,197,198,199,200,201,202,203,205,206,207,208,209,210,219,224,241,242,243,244,245,262,265,],[89,89,-157,89,-119,89,89,-119,-73,-114,-114,-114,-114,-106,-106,89,-94,-94,-94,-94,-94,-94,-89,-89,89,89,89,89,89,89,89,89,89,89,-95,-97,-100,-98,-99,-96,89,89,-80,-80,-80,-80,-80,89,89,89,-79,-78,-76,-77,-75,89,89,]),'GREATER_EQUALS':([81,83,85,86,87,89,90,91,92,93,95,119,120,121,122,123,124,126,127,128,129,130,144,146,148,151,156,157,192,212,214,231,232,233,234,235,236,237,248,249,261,267,268,282,285,],[-118,-127,-128,-127,-108,-127,-102,-127,-127,-91,-116,-125,-128,-117,-160,-122,-160,-123,-160,-126,-124,160,-121,-72,-107,-113,-101,-105,-120,-32,-120,-110,-109,-111,-112,-115,-104,-103,-120,-36,-74,-36,-35,-71,-34,]),'LESS_EQUALS':([81,83,85,86,87,89,90,91,92,93,95,119,120,121,122,123,124,126,127,128,129,130,144,146,148,151,156,157,192,212,214,231,232,233,234,235,236,237,248,249,261,267,268,282,285,],[-118,-127,-128,-127,-108,-127,-102,-127,-127,-91,-116,-125,-128,-117,-160,-122,-160,-123,-160,-126,-124,162,-121,-72,-107,-113,-101,-105,-120,-32,-120,-110,-109,-111,-112,-115,-104,-103,-120,-36,-74,-36,-35,-71,-34,]),'PLUS':([81,83,85,86,87,89,90,91,92,95,119,120,121,122,123,124,126,127,128,129,144,146,148,151,192,212,214,231,232,233,234,235,248,249,261,267,268,282,285,],[-118,-127,-128,-127,-108,-127,-102,-127,-127,-116,-125,-128,-117,-160,-122,-160,-123,155,-126,-124,-121,-72,-107,-113,-120,-32,-120,-110,-109,-111,-112,-115,-120,-36,-74,-36,-35,-71,-34,]),'TO':([81,83,85,86,87,89,90,91,92,95,119,120,121,122,123,124,126,127,128,129,144,146,148,151,156,157,192,204,212,214,231,232,233,234,235,236,237,240,248,249,261,267,268,282,285,],[-118,-127,-128,-127,-108,-127,-102,-127,-127,-116,-125,-128,-117,-160,-122,-160,-123,-160,-126,-124,-121,-72,-107,-113,-101,-105,-120,-153,-32,-120,-110,-109,-111,-112,-115,-104,-103,262,-120,-36,-74,-36,-35,-71,-34,]),'INT_CONSTANT':([44,60,69,70,84,88,107,125,134,145,147,149,150,152,154,155,158,159,160,161,162,163,166,168,169,171,173,177,187,188,189,190,191,193,194,196,197,198,199,200,201,202,203,205,206,207,208,209,210,219,224,241,242,243,244,245,262,265,],[50,86,86,-157,86,-119,86,86,-119,-73,-114,-114,-114,-114,-106,-106,86,-94,-94,-94,-94,-94,-94,-89,-89,86,86,86,86,86,86,86,86,86,86,-95,-97,-100,-98,-99,-96,86,86,-80,-80,-80,-80,-80,86,86,86,-79,-78,-76,-77,-75,86,86,]),'COMMA':([35,40,45,46,81,82,83,85,86,87,89,90,91,92,93,94,95,110,119,120,121,122,123,124,126,127,128,129,130,131,140,141,144,146,148,151,156,157,164,165,167,170,183,184,192,195,211,212,214,223,225,231,232,233,234,235,236,237,238,239,247,248,249,261,267,268,279,282,285,],[-128,-160,51,-19,-118,116,-127,-128,-127,-108,-127,-102,-127,-127,-91,-85,-116,-18,-125,-128,-117,-160,-122,-160,-123,-160,-126,-124,-160,-160,-128,-59,-121,-72,-107,-113,-101,-105,-90,-93,-84,-88,-160,227,-120,-92,-38,-32,-120,-146,-148,-110,-109,-111,-112,-115,-104,-103,-86,-87,265,-120,-36,-74,-36,-35,-147,-71,-34,]),'COLON':([54,77,81,83,85,86,87,89,90,91,92,93,94,95,106,119,120,121,122,123,124,126,127,128,129,130,131,136,144,146,148,151,156,157,164,165,167,170,175,192,195,212,214,231,232,233,234,235,236,237,238,239,248,249,261,267,268,272,282,283,285,288,294,],[76,112,-118,-127,-128,-127,-108,-127,-102,-127,-127,-91,-85,-116,135,-125,-128,-117,-160,-122,-160,-123,-160,-126,-124,-160,-160,-130,-121,-72,-107,-113,-101,-105,-90,-93,-84,-88,216,-120,-92,-32,-120,-110,-109,-111,-112,-115,-104,-103,-86,-87,-120,-36,-74,-36,-35,-135,-71,-154,-34,295,216,]),'PERCENTAGE':([81,83,85,86,87,89,91,92,95,119,120,121,122,123,124,126,128,129,144,146,192,212,214,235,248,249,261,267,268,282,285,],[-118,-127,-128,-127,-108,-127,-127,-127,-116,-125,-128,-117,-160,-122,150,-123,-126,-124,-121,-72,-120,-32,-120,-115,-120,-36,-74,-36,-35,-71,-34,]),'PLUS_EQUALS':([67,103,133,146,172,261,282,],[-69,-70,-160,-72,206,-74,-71,]),'LEFT_PARENTHESIS':([38,42,59,60,67,69,70,80,85,88,104,107,125,134,145,147,149,150,152,154,155,158,159,160,161,162,163,166,168,169,171,173,177,187,188,189,190,191,193,194,196,197,198,199,200,201,202,203,205,206,207,208,209,210,219,224,241,242,243,244,245,262,265,],[-44,48,-144,88,-33,88,-157,114,-33,-119,134,88,88,-119,-73,-114,-114,-114,-114,-106,-106,88,-94,-94,-94,-94,-94,-94,-89,-89,88,88,88,88,88,88,88,88,88,88,-95,-97,-100,-98,-99,-96,88,88,-80,-80,-80,-80,-80,88,88,88,-79,-78,-76,-77,-75,88,88,]),'$end':([1,4,5,6,8,9,16,17,27,37,108,137,176,],[0,-11,-160,-10,-1,-5,-9,-3,-4,-2,-27,-160,-26,]),'END':([4,5,6,16,63,79,97,98,99,100,101,102,105,109,181,250,254,269,270,271,273,275,286,292,306,307,],[-11,-160,-10,-9,-160,-67,-31,-29,-30,-64,-65,-62,-63,-66,221,-131,276,-160,287,-132,289,290,-133,298,-131,-134,]),'STRING':([0,2,3,4,5,6,10,13,14,16,41,43,47,48,56,78,111,139,227,],[-136,-160,-83,-11,-160,-10,18,18,-83,-9,-82,-83,-16,-83,-57,18,-83,-83,-83,]),'FOR':([4,5,6,14,16,31,32,33,41,43,47,49,63,79,100,101,102,105,109,111,135,138,139,174,182,215,216,251,295,300,304,],[-11,-160,-10,-160,-9,-7,-6,-8,-82,-160,-16,61,61,-67,-64,-65,-62,-63,-66,-160,-130,61,-160,-160,61,61,-160,61,-136,-160,61,]),'EQUALS':([67,103,133,146,172,261,282,],[-69,-70,-160,-72,209,-74,-71,]),'ELSE':([4,5,6,16,63,79,97,98,99,100,101,102,105,109,250,],[-11,-160,-10,-9,-160,-67,-31,-29,-30,-64,-65,-62,-63,-66,272,]),'FUNC':([0,2,3,4,5,6,11,12,14,16,31,32,33,41,47,57,178,179,180,220,222,278,297,301,305,],[-136,-160,13,-11,-160,-10,13,13,-160,-9,-7,-6,-8,-82,-16,-41,-46,-48,-47,-49,-45,-50,-51,-53,-52,]),'FROM':([96,132,],[-152,171,]),'RIGHT_PARENTHESIS':([48,55,81,83,85,86,87,89,90,91,92,93,94,95,119,120,121,122,123,124,126,127,128,129,130,131,134,140,141,142,144,146,148,151,153,156,157,164,165,167,170,173,183,184,185,192,195,211,212,213,214,223,225,226,228,229,231,232,233,234,235,236,237,238,239,247,248,249,258,259,260,261,264,266,267,268,279,280,282,284,285,],[54,77,-118,-127,-128,-127,-108,-127,-102,-127,-127,-91,-85,-116,-125,-128,-117,-160,-122,-160,-123,-160,-126,-124,-160,-160,-119,-128,-59,-69,-121,-72,-107,-113,192,-101,-105,-90,-93,-84,-88,214,-160,-160,-70,-120,-92,-38,-32,248,-120,-146,-148,-58,-61,-160,-110,-109,-111,-112,-115,-104,-103,-86,-87,-160,-120,-36,-82,-60,281,-74,-37,-40,-36,-35,-147,-56,-71,-39,-34,]),'TIMES':([81,83,85,86,87,89,91,92,95,119,120,121,122,123,124,126,128,129,144,146,192,212,214,235,248,249,261,267,268,282,285,],[-118,-127,-128,-127,-108,-127,-127,-127,-116,-125,-128,-117,-160,-122,149,-123,-126,-124,-121,-72,-120,-32,-120,-115,-120,-36,-74,-36,-35,-71,-34,]),'ID':([4,5,6,14,16,18,19,20,21,22,28,29,30,31,32,33,41,43,47,49,51,60,61,63,69,70,79,84,88,100,101,102,105,107,109,111,113,114,125,134,135,138,139,145,147,149,150,152,154,155,158,159,160,161,162,163,166,168,169,171,173,174,177,182,187,188,189,190,191,193,194,196,197,198,199,200,201,202,203,205,206,207,208,209,210,215,216,219,224,241,242,243,244,245,251,262,265,295,300,304,],[-11,-160,-10,-160,-9,-14,-12,-13,-15,35,-43,-42,38,-7,-6,-8,-82,-160,-16,67,35,85,96,67,85,-157,-67,120,-119,-64,-65,-62,-63,85,-66,-160,140,142,85,-119,-130,67,-160,-73,-114,-114,-114,-114,-106,-106,85,-94,-94,-94,-94,-94,-94,-89,-89,85,85,-160,85,67,85,85,85,85,85,85,85,-95,-97,-100,-98,-99,-96,85,85,-80,-80,-80,-80,-80,85,67,-160,85,85,-79,-78,-76,-77,-75,67,85,85,-136,-160,67,]),'IF':([4,5,6,14,16,31,32,33,41,43,47,49,63,79,100,101,102,105,109,111,135,138,139,174,182,215,216,251,295,300,304,],[-11,-160,-10,-160,-9,-7,-6,-8,-82,-160,-16,69,69,-67,-64,-65,-62,-63,-66,-160,-130,69,-160,-160,69,69,-160,69,-136,-160,69,]),'AND':([81,83,85,86,87,89,90,91,92,93,94,95,119,120,121,122,123,124,126,127,128,129,130,131,144,146,148,151,156,157,164,165,192,195,212,214,231,232,233,234,235,236,237,248,249,261,267,268,282,285,],[-118,-127,-128,-127,-108,-127,-102,-127,-127,-91,-85,-116,-125,-128,-117,-160,-122,-160,-123,-160,-126,-124,-160,168,-121,-72,-107,-113,-101,-105,-90,-93,-120,-92,-32,-120,-110,-109,-111,-112,-115,-104,-103,-120,-36,-74,-36,-35,-71,-34,]),'FALSE':([60,69,70,84,88,107,125,134,145,147,149,150,152,154,155,158,159,160,161,162,163,166,168,169,171,173,177,187,188,189,190,191,193,194,196,197,198,199,200,201,202,203,205,206,207,208,209,210,219,224,241,242,243,244,245,262,265,],[91,91,-157,91,-119,91,91,-119,-73,-114,-114,-114,-114,-106,-106,91,-94,-94,-94,-94,-94,-94,-89,-89,91,91,91,91,91,91,91,91,91,91,-95,-97,-100,-98,-99,-96,91,91,-80,-80,-80,-80,-80,91,91,91,-79,-78,-76,-77,-75,91,91,]),'GREATER':([81,83,85,86,87,89,90,91,92,93,95,119,120,121,122,123,124,126,127,128,129,130,144,146,148,151,156,157,192,212,214,231,232,233,234,235,236,237,248,249,261,267,268,282,285,],[-118,-127,-128,-127,-108,-127,-102,-127,-127,-91,-116,-125,-128,-117,-160,-122,-160,-123,-160,-126,-124,166,-121,-72,-107,-113,-101,-105,-120,-32,-120,-110,-109,-111,-112,-115,-104,-103,-120,-36,-74,-36,-35,-71,-34,]),'INT':([0,2,3,4,5,6,10,13,14,16,41,43,47,48,56,78,111,139,227,],[-136,-160,-83,-11,-160,-10,19,19,-83,-9,-82,-83,-16,-83,-57,19,-83,-83,-83,]),'DOUBLE':([0,2,3,4,5,6,10,13,14,16,41,43,47,48,56,78,111,139,227,],[-136,-160,-83,-11,-160,-10,20,20,-83,-9,-82,-83,-16,-83,-57,20,-83,-83,-83,]),'DIVIDE_EQUALS':([67,103,133,146,172,261,282,],[-69,-70,-160,-72,208,-74,-71,]),'BOOL':([0,2,3,4,5,6,10,13,14,16,41,43,47,48,56,78,111,139,227,],[-136,-160,-83,-11,-160,-10,21,21,-83,-9,-82,-83,-16,-83,-57,21,-83,-83,-83,]),'STRING_CONSTANT':([60,69,70,84,88,107,116,125,134,145,147,149,150,152,154,155,158,159,160,161,162,163,166,168,169,171,173,177,187,188,189,190,191,193,194,196,197,198,199,200,201,202,203,205,206,207,208,209,210,219,224,241,242,243,244,245,262,265,],[92,92,-157,92,-119,92,143,92,-119,-73,-114,-114,-114,-114,-106,-106,92,-94,-94,-94,-94,-94,-94,-89,-89,92,92,92,92,92,92,92,92,92,92,-95,-97,-100,-98,-99,-96,92,92,-80,-80,-80,-80,-80,92,92,92,-79,-78,-76,-77,-75,92,92,]),'TIMES_EQUALS':([67,103,133,146,172,261,282,],[-69,-70,-160,-72,207,-74,-71,]),'LEFT_BRACKET':([35,40,67,85,103,120,122,133,140,142,183,185,229,],[-128,44,-69,-128,-70,-128,145,145,-128,-69,224,-70,145,]),'MAIN':([0,2,3,4,5,6,7,11,12,14,16,23,24,25,26,31,32,33,41,47,57,178,179,180,220,222,278,297,301,305,],[-136,-160,15,-11,-160,-10,15,-160,15,-160,-9,-23,-24,-25,15,-7,-6,-8,-82,-16,-41,-46,-48,-47,-49,-45,-50,-51,-53,-52,]),'OR':([81,83,85,86,87,89,90,91,92,93,94,95,119,120,121,122,123,124,126,127,128,129,130,131,144,146,148,151,156,157,164,165,192,195,212,214,231,232,233,234,235,236,237,248,249,261,267,268,282,285,],[-118,-127,-128,-127,-108,-127,-102,-127,-127,-91,-85,-116,-125,-128,-117,-160,-122,-160,-123,-160,-126,-124,-160,169,-121,-72,-107,-113,-101,-105,-90,-93,-120,-92,-32,-120,-110,-109,-111,-112,-115,-104,-103,-120,-36,-74,-36,-35,-71,-34,]),'MOD':([81,83,85,86,87,89,91,92,95,119,120,121,122,123,124,126,128,129,144,146,192,212,214,235,248,249,261,267,268,282,285,],[-118,-127,-128,-127,-108,-127,-127,-127,-116,-125,-128,-117,-160,-122,152,-123,-126,-124,-121,-72,-120,-32,-120,-115,-120,-36,-74,-36,-35,-71,-34,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'relational_operator':([130,],[158,]),'push_constant':([83,86,89,91,92,],[119,123,126,128,129,]),'post_function':([48,],[57,]),'push_assignment':([205,206,207,208,209,],[241,242,243,244,245,]),'parameters':([48,227,],[55,259,]),'increase_call_arguments':([211,],[247,]),'post_variables':([14,43,111,139,],[32,49,138,182,]),'finish_params':([226,],[258,]),'init':([0,],[1,]),'program':([3,],[8,]),'factor':([60,69,107,125,158,171,173,177,187,188,189,190,191,193,194,202,203,210,219,224,262,265,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'main':([3,7,12,26,],[9,17,27,37,]),'finish_evaluating':([3,14,43,48,111,139,227,],[10,10,10,56,10,10,56,]),'read':([49,63,138,182,215,251,304,],[65,65,65,65,65,65,65,]),'post_term':([124,],[148,]),'print_mod':([82,],[118,]),'condition':([49,63,138,182,215,251,304,],[68,68,68,68,68,68,68,]),'term':([60,69,107,125,158,171,173,177,187,188,189,190,191,193,194,202,203,210,219,224,262,265,],[90,90,90,90,90,90,90,90,90,231,232,233,234,90,90,90,90,90,90,90,90,90,]),'push_end':([108,],[137,]),'post_void_return':([181,],[220,]),'push_term':([147,149,150,152,],[188,189,190,191,]),'register_function':([38,],[42,]),'identifier':([113,],[141,]),'push_paren':([88,134,],[125,173,]),'call_function':([49,60,63,69,107,125,138,158,171,173,177,182,187,188,189,190,191,193,194,202,203,210,215,219,224,251,262,265,304,],[58,81,58,81,81,81,58,81,81,81,81,58,81,81,81,81,81,81,81,81,81,81,58,81,81,58,81,81,58,]),'reset_scope':([221,276,290,298,],[256,291,296,302,]),'push_relop':([159,160,161,162,163,166,],[196,197,198,199,200,201,]),'post_parameters':([184,],[226,]),'start_evaluating':([41,258,],[47,280,]),'post_print':([82,],[115,]),'fill_goto':([15,250,306,],[34,269,307,]),'for':([49,63,138,182,215,251,304,],[62,62,62,62,62,62,62,]),'post_exp':([127,],[156,]),'assignment':([49,63,138,182,215,251,304,],[66,66,66,66,66,66,66,]),'print':([49,63,138,182,215,251,304,],[64,64,64,64,64,64,64,]),'push_exp':([154,155,],[193,194,]),'inter_declaration':([22,51,],[36,75,]),'void_return':([138,182,],[180,180,]),'pop_paren':([192,214,248,],[235,249,267,]),'push_gotoF':([135,136,],[174,175,]),'end_for_loop':([299,],[303,]),'fill_goto_plus':([217,272,],[252,288,]),'assignment_operator':([172,],[210,]),'expression':([60,69,107,125,158,173,177,202,203,210,219,265,],[94,94,94,94,195,94,94,94,94,94,94,94,]),'pop_exp':([90,],[127,]),'block':([49,63,138,182,215,251,304,],[72,99,181,181,250,273,306,]),'optional_eol':([2,5,137,174,216,300,],[3,16,176,215,251,304,]),'post_functions':([11,],[23,]),'pop_term':([87,],[124,]),'required_eol':([2,5,36,39,58,64,65,66,68,73,76,112,137,174,216,219,253,256,277,291,296,300,302,],[4,4,41,43,79,100,101,102,105,109,111,139,4,4,4,254,275,278,292,297,301,4,305,]),'push_goto':([0,295,],[2,300,]),'post_arguments':([247,],[264,]),'validate_function_call':([67,85,],[104,104,]),'post_cycle':([175,294,],[217,299,]),'post_cond':([131,],[167,]),'func_return':([138,182,],[178,222,]),'post_call_function':([173,],[212,]),'validate_var':([67,142,],[103,185,]),'push_cycle':([70,],[107,]),'process_variable':([35,85,120,140,],[40,122,122,183,]),'verify_var_dim':([145,],[187,]),'empty':([2,5,11,14,40,43,45,63,111,122,124,127,130,131,133,137,139,174,183,184,216,229,247,269,300,],[6,6,25,33,46,33,53,97,33,146,151,157,165,170,146,6,33,6,225,228,6,146,266,286,6,]),'function':([3,11,12,],[11,11,11,]),'statement':([49,63,138,182,215,251,304,],[63,63,63,63,63,63,63,]),'pre_variables':([3,14,43,111,139,],[12,31,31,31,31,]),'else':([250,],[271,]),'value_return':([138,182,],[179,179,]),'create_return':([218,255,],[253,277,]),'cycle_declaration':([45,],[52,]),'declaration':([3,14,43,111,139,],[14,14,14,14,14,]),'validate_call_arguments':([249,267,],[268,285,]),'init_var':([204,],[240,]),'read_var':([281,],[293,]),'push_op_and_or':([168,169,],[202,203,]),'while':([49,63,138,182,215,251,304,],[71,71,71,71,71,71,71,]),'post_expression':([130,],[164,]),'start_read':([59,],[80,]),'array_declaration':([40,],[45,]),'loop':([49,63,138,182,215,251,304,],[73,73,73,73,73,73,73,]),'update_var_size':([50,],[74,]),'set_main_scope':([34,],[39,]),'cond':([60,69,107,125,173,177,202,203,210,219,265,],[82,106,136,153,211,218,238,239,246,255,211,]),'functions':([3,11,12,],[7,24,26,]),'end_array':([261,],[282,]),'pop_op_and_or':([94,],[131,]),'push_for_cycle':([283,],[294,]),'arguments':([173,265,],[213,284,]),'pop_relop':([93,],[130,]),'exp':([60,69,107,125,158,171,173,177,187,193,194,202,203,210,219,224,262,265,],[93,93,93,93,93,204,93,93,230,236,237,93,93,93,93,257,283,93,]),'post_condition':([250,],[270,]),'print_post_mod':([143,],[186,]),'post_identifier':([183,],[223,]),'pop_assignment':([246,],[263,]),'post_block':([63,],[98,]),'func_types':([13,],[30,]),'types':([10,13,78,],[22,29,113,]),'create_pending_goto':([252,],[274,]),'update_function_parameters':([141,],[184,]),'array_notation':([122,133,229,],[144,172,260,]),'add_var':([96,],[132,]),'push_var':([103,185,],[133,229,]),'start_params':([56,],[78,]),'print_default':([82,],[117,]),'variable_constant':([60,69,84,107,125,158,171,173,177,187,188,189,190,191,193,194,202,203,210,219,224,262,265,],[95,95,121,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> push_goto optional_eol program','init',3,'p_init','parser.py',33),
  ('program -> pre_variables functions main','program',3,'p_program','parser.py',36),
  ('program -> functions main','program',2,'p_program','parser.py',37),
  ('program -> pre_variables main','program',2,'p_program','parser.py',38),
  ('program -> main','program',1,'p_program','parser.py',39),
  ('pre_variables -> declaration post_variables','pre_variables',2,'p_pre_variables','parser.py',47),
  ('post_variables -> pre_variables','post_variables',1,'p_post_variables','parser.py',50),
  ('post_variables -> empty','post_variables',1,'p_post_variables','parser.py',51),
  ('required_eol -> EOL optional_eol','required_eol',2,'p_required_eol','parser.py',55),
  ('optional_eol -> empty','optional_eol',1,'p_optional_eol','parser.py',58),
  ('optional_eol -> required_eol','optional_eol',1,'p_optional_eol','parser.py',59),
  ('types -> INT','types',1,'p_types','parser.py',63),
  ('types -> DOUBLE','types',1,'p_types','parser.py',64),
  ('types -> STRING','types',1,'p_types','parser.py',65),
  ('types -> BOOL','types',1,'p_types','parser.py',66),
  ('declaration -> finish_evaluating types inter_declaration required_eol start_evaluating','declaration',5,'p_declaration','parser.py',71),
  ('inter_declaration -> ID process_variable array_declaration cycle_declaration','inter_declaration',4,'p_inter_declaration','parser.py',75),
  ('array_declaration -> LEFT_BRACKET INT_CONSTANT update_var_size RIGHT_BRACKET','array_declaration',4,'p_array_declaration','parser.py',78),
  ('array_declaration -> empty','array_declaration',1,'p_array_declaration','parser.py',79),
  ('update_var_size -> <empty>','update_var_size',0,'p_update_var_size','parser.py',82),
  ('cycle_declaration -> COMMA inter_declaration','cycle_declaration',2,'p_cycle_declaration','parser.py',86),
  ('cycle_declaration -> empty','cycle_declaration',1,'p_cycle_declaration','parser.py',87),
  ('functions -> function post_functions','functions',2,'p_functions','parser.py',91),
  ('post_functions -> functions','post_functions',1,'p_post_functions','parser.py',94),
  ('post_functions -> empty','post_functions',1,'p_post_functions','parser.py',95),
  ('main -> MAIN fill_goto set_main_scope required_eol post_variables block END_MAIN push_end optional_eol','main',9,'p_main','parser.py',99),
  ('push_end -> <empty>','push_end',0,'p_push_end','parser.py',102),
  ('set_main_scope -> <empty>','set_main_scope',0,'p_set_main_scope','parser.py',106),
  ('block -> statement post_block','block',2,'p_block','parser.py',114),
  ('post_block -> block','post_block',1,'p_post_block','parser.py',117),
  ('post_block -> empty','post_block',1,'p_post_block','parser.py',118),
  ('call_function -> ID validate_function_call LEFT_PARENTHESIS push_paren post_call_function','call_function',5,'p_call_function','parser.py',122),
  ('validate_function_call -> <empty>','validate_function_call',0,'p_validate_function_call','parser.py',126),
  ('post_call_function -> arguments RIGHT_PARENTHESIS pop_paren validate_call_arguments','post_call_function',4,'p_post_call_function','parser.py',133),
  ('post_call_function -> RIGHT_PARENTHESIS pop_paren validate_call_arguments','post_call_function',3,'p_post_call_function','parser.py',134),
  ('validate_call_arguments -> <empty>','validate_call_arguments',0,'p_validate_call_arguments','parser.py',137),
  ('arguments -> cond increase_call_arguments post_arguments','arguments',3,'p_arguments','parser.py',148),
  ('increase_call_arguments -> <empty>','increase_call_arguments',0,'p_increase_call_arguments','parser.py',152),
  ('post_arguments -> COMMA arguments','post_arguments',2,'p_post_arguments','parser.py',160),
  ('post_arguments -> empty','post_arguments',1,'p_post_arguments','parser.py',161),
  ('function -> FUNC func_types ID register_function LEFT_PARENTHESIS post_function','function',6,'p_function','parser.py',165),
  ('func_types -> types','func_types',1,'p_func_types','parser.py',168),
  ('func_types -> VOID','func_types',1,'p_func_types','parser.py',169),
  ('register_function -> <empty>','register_function',0,'p_register_function','parser.py',175),
  ('post_function -> parameters RIGHT_PARENTHESIS COLON required_eol post_variables func_return','post_function',6,'p_post_function','parser.py',186),
  ('post_function -> RIGHT_PARENTHESIS COLON required_eol post_variables func_return','post_function',5,'p_post_function','parser.py',187),
  ('func_return -> void_return','func_return',1,'p_func_return','parser.py',190),
  ('func_return -> value_return','func_return',1,'p_func_return','parser.py',191),
  ('void_return -> block post_void_return','void_return',2,'p_void_return','parser.py',194),
  ('post_void_return -> END reset_scope required_eol','post_void_return',3,'p_post_void_return','parser.py',197),
  ('post_void_return -> RETURN required_eol END reset_scope required_eol','post_void_return',5,'p_post_void_return','parser.py',198),
  ('value_return -> block RETURN cond create_return required_eol END reset_scope required_eol','value_return',8,'p_value_return','parser.py',201),
  ('value_return -> RETURN cond create_return required_eol END reset_scope required_eol','value_return',7,'p_value_return','parser.py',202),
  ('create_return -> <empty>','create_return',0,'p_create_return','parser.py',205),
  ('reset_scope -> <empty>','reset_scope',0,'p_reset_scope','parser.py',210),
  ('parameters -> finish_evaluating start_params types identifier update_function_parameters post_parameters finish_params start_evaluating','parameters',8,'p_parameters','parser.py',217),
  ('start_params -> <empty>','start_params',0,'p_start_params','parser.py',220),
  ('finish_params -> <empty>','finish_params',0,'p_finish_params','parser.py',224),
  ('update_function_parameters -> <empty>','update_function_parameters',0,'p_update_function_parameters','parser.py',229),
  ('post_parameters -> COMMA parameters','post_parameters',2,'p_post_parameters','parser.py',233),
  ('post_parameters -> empty','post_parameters',1,'p_post_parameters','parser.py',234),
  ('statement -> assignment required_eol','statement',2,'p_statement','parser.py',238),
  ('statement -> condition required_eol','statement',2,'p_statement','parser.py',239),
  ('statement -> print required_eol','statement',2,'p_statement','parser.py',240),
  ('statement -> read required_eol','statement',2,'p_statement','parser.py',241),
  ('statement -> loop required_eol','statement',2,'p_statement','parser.py',242),
  ('statement -> call_function required_eol','statement',2,'p_statement','parser.py',243),
  ('assignment -> ID validate_var push_var array_notation assignment_operator cond pop_assignment','assignment',7,'p_assignment','parser.py',248),
  ('validate_var -> <empty>','validate_var',0,'p_validate_var','parser.py',251),
  ('push_var -> <empty>','push_var',0,'p_push_var','parser.py',258),
  ('array_notation -> LEFT_BRACKET verify_var_dim exp RIGHT_BRACKET end_array','array_notation',5,'p_array_notation','parser.py',265),
  ('array_notation -> empty','array_notation',1,'p_array_notation','parser.py',266),
  ('verify_var_dim -> <empty>','verify_var_dim',0,'p_verify_var_dim','parser.py',269),
  ('end_array -> <empty>','end_array',0,'p_end_array','parser.py',278),
  ('assignment_operator -> EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',283),
  ('assignment_operator -> TIMES_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',284),
  ('assignment_operator -> DIVIDE_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',285),
  ('assignment_operator -> PLUS_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',286),
  ('assignment_operator -> MINUS_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',287),
  ('push_assignment -> <empty>','push_assignment',0,'p_push_assignment','parser.py',290),
  ('pop_assignment -> <empty>','pop_assignment',0,'p_pop_assignment','parser.py',294),
  ('start_evaluating -> <empty>','start_evaluating',0,'p_start_evaluating','parser.py',300),
  ('finish_evaluating -> <empty>','finish_evaluating',0,'p_finish_evaluating','parser.py',304),
  ('cond -> expression pop_op_and_or post_cond','cond',3,'p_cond','parser.py',309),
  ('pop_op_and_or -> <empty>','pop_op_and_or',0,'p_pop_op_and_or','parser.py',312),
  ('post_cond -> AND push_op_and_or cond','post_cond',3,'p_post_cond','parser.py',317),
  ('post_cond -> OR push_op_and_or cond','post_cond',3,'p_post_cond','parser.py',318),
  ('post_cond -> empty','post_cond',1,'p_post_cond','parser.py',319),
  ('push_op_and_or -> <empty>','push_op_and_or',0,'p_push_op_and_or','parser.py',322),
  ('expression -> exp pop_relop post_expression','expression',3,'p_expression','parser.py',327),
  ('pop_relop -> <empty>','pop_relop',0,'p_pop_relop','parser.py',330),
  ('post_expression -> relational_operator expression','post_expression',2,'p_post_expression','parser.py',336),
  ('post_expression -> empty','post_expression',1,'p_post_expression','parser.py',337),
  ('push_relop -> <empty>','push_relop',0,'p_push_relop','parser.py',340),
  ('relational_operator -> LESS push_relop','relational_operator',2,'p_relational_operator','parser.py',345),
  ('relational_operator -> GREATER push_relop','relational_operator',2,'p_relational_operator','parser.py',346),
  ('relational_operator -> GREATER_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',347),
  ('relational_operator -> LESS_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',348),
  ('relational_operator -> EQUALS_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',349),
  ('relational_operator -> NOT_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',350),
  ('exp -> term pop_exp post_exp','exp',3,'p_exp','parser.py',354),
  ('pop_exp -> <empty>','pop_exp',0,'p_pop_exp','parser.py',357),
  ('post_exp -> PLUS push_exp exp','post_exp',3,'p_post_exp','parser.py',362),
  ('post_exp -> MINUS push_exp exp','post_exp',3,'p_post_exp','parser.py',363),
  ('post_exp -> empty','post_exp',1,'p_post_exp','parser.py',364),
  ('push_exp -> <empty>','push_exp',0,'p_push_exp','parser.py',367),
  ('term -> factor pop_term post_term','term',3,'p_term','parser.py',373),
  ('pop_term -> <empty>','pop_term',0,'p_pop_term','parser.py',376),
  ('post_term -> TIMES push_term term','post_term',3,'p_post_term','parser.py',382),
  ('post_term -> DIVIDE push_term term','post_term',3,'p_post_term','parser.py',383),
  ('post_term -> PERCENTAGE push_term term','post_term',3,'p_post_term','parser.py',384),
  ('post_term -> MOD push_term term','post_term',3,'p_post_term','parser.py',385),
  ('post_term -> empty','post_term',1,'p_post_term','parser.py',386),
  ('push_term -> <empty>','push_term',0,'p_push_term','parser.py',389),
  ('factor -> LEFT_PARENTHESIS push_paren cond RIGHT_PARENTHESIS pop_paren','factor',5,'p_factor','parser.py',394),
  ('factor -> variable_constant','factor',1,'p_factor','parser.py',395),
  ('factor -> MINUS variable_constant','factor',2,'p_factor','parser.py',396),
  ('factor -> call_function','factor',1,'p_factor','parser.py',397),
  ('push_paren -> <empty>','push_paren',0,'p_push_paren','parser.py',400),
  ('pop_paren -> <empty>','pop_paren',0,'p_pop_paren','parser.py',404),
  ('variable_constant -> ID process_variable array_notation','variable_constant',3,'p_variable_constant','parser.py',409),
  ('variable_constant -> INT_CONSTANT push_constant','variable_constant',2,'p_variable_constant','parser.py',410),
  ('variable_constant -> DOUBLE_CONSTANT push_constant','variable_constant',2,'p_variable_constant','parser.py',411),
  ('variable_constant -> STRING_CONSTANT push_constant','variable_constant',2,'p_variable_constant','parser.py',412),
  ('variable_constant -> TRUE push_constant','variable_constant',2,'p_variable_constant','parser.py',413),
  ('variable_constant -> FALSE push_constant','variable_constant',2,'p_variable_constant','parser.py',414),
  ('push_constant -> <empty>','push_constant',0,'p_push_constant','parser.py',417),
  ('process_variable -> <empty>','process_variable',0,'p_process_variable','parser.py',422),
  ('condition -> IF cond COLON push_gotoF optional_eol block post_condition END','condition',8,'p_condition','parser.py',437),
  ('push_gotoF -> <empty>','push_gotoF',0,'p_push_gotoF','parser.py',440),
  ('fill_goto -> <empty>','fill_goto',0,'p_fill_goto','parser.py',444),
  ('post_condition -> else','post_condition',1,'p_post_condition','parser.py',449),
  ('post_condition -> fill_goto empty','post_condition',2,'p_post_condition','parser.py',450),
  ('else -> ELSE fill_goto_plus COLON push_goto optional_eol block fill_goto','else',7,'p_else','parser.py',454),
  ('fill_goto_plus -> <empty>','fill_goto_plus',0,'p_fill_goto_plus','parser.py',457),
  ('push_goto -> <empty>','push_goto',0,'p_push_goto','parser.py',461),
  ('print -> PRINT cond post_print','print',3,'p_print','parser.py',466),
  ('post_print -> print_mod','post_print',1,'p_post_print','parser.py',469),
  ('post_print -> print_default','post_print',1,'p_post_print','parser.py',470),
  ('print_mod -> COMMA STRING_CONSTANT print_post_mod','print_mod',3,'p_print_mod','parser.py',473),
  ('print_post_mod -> <empty>','print_post_mod',0,'p_print_post_mod','parser.py',476),
  ('print_default -> <empty>','print_default',0,'p_print_default','parser.py',480),
  ('read -> READ start_read LEFT_PARENTHESIS ID validate_var push_var array_notation RIGHT_PARENTHESIS read_var','read',9,'p_read','parser.py',485),
  ('start_read -> <empty>','start_read',0,'p_start_read','parser.py',488),
  ('read_var -> <empty>','read_var',0,'p_read_var','parser.py',492),
  ('identifier -> ID process_variable post_identifier','identifier',3,'p_identifier','parser.py',504),
  ('post_identifier -> LEFT_BRACKET exp RIGHT_BRACKET','post_identifier',3,'p_post_identifier','parser.py',507),
  ('post_identifier -> empty','post_identifier',1,'p_post_identifier','parser.py',508),
  ('loop -> for','loop',1,'p_loop','parser.py',512),
  ('loop -> while','loop',1,'p_loop','parser.py',513),
  ('for -> FOR ID add_var FROM exp init_var TO exp push_for_cycle post_cycle end_for_loop','for',11,'p_for','parser.py',517),
  ('add_var -> <empty>','add_var',0,'p_add_var','parser.py',520),
  ('init_var -> <empty>','init_var',0,'p_init_var','parser.py',528),
  ('push_for_cycle -> <empty>','push_for_cycle',0,'p_push_for_cycle','parser.py',533),
  ('end_for_loop -> <empty>','end_for_loop',0,'p_end_for_loop','parser.py',540),
  ('while -> WHILE push_cycle cond push_gotoF post_cycle fill_goto_plus create_pending_goto','while',7,'p_while','parser.py',552),
  ('push_cycle -> <empty>','push_cycle',0,'p_push_cycle','parser.py',555),
  ('create_pending_goto -> <empty>','create_pending_goto',0,'p_create_pending_goto','parser.py',559),
  ('post_cycle -> COLON optional_eol block END','post_cycle',4,'p_post_cycle','parser.py',564),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',567),
]
