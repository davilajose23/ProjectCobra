
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '26820349F6AFF8C27CB16153C0AA8062'
    
_lr_action_items = {'RETURN':([10,26,27,28,39,40,47,48,49,50,62,90,96,97,98,99,100,101,104,108,116,145,146,183,184,],[-149,-7,-6,-8,-149,-77,-9,-11,-10,-16,-149,-64,-62,-29,-27,-28,-61,-59,-60,-63,-149,179,-149,217,179,]),'LESS':([72,73,74,76,77,78,80,81,82,83,85,93,109,110,111,112,114,123,131,133,135,138,143,144,165,167,176,203,204,208,209,210,211,212,213,214,215,234,],[-120,-113,-147,-121,-117,-103,-118,-97,-148,-119,-111,-86,-121,-112,-149,-149,-149,150,-116,-69,-102,-108,-96,-100,-30,-34,-115,-34,-33,-68,-105,-104,-106,-107,-110,-99,-98,-32,]),'READ':([10,26,27,28,39,40,46,47,48,49,50,62,90,96,100,101,104,108,116,128,145,146,168,184,205,206,236,270,276,279,],[-149,-7,-6,-8,-149,-77,57,-9,-11,-10,-16,57,-64,-62,-61,-59,-60,-63,-149,-123,57,-149,-149,57,57,-149,57,-129,-149,57,]),'VOID':([9,],[23,]),'RIGHT_BRACKET':([72,73,74,76,77,78,80,81,82,83,84,85,109,110,111,112,114,131,133,135,138,143,144,165,167,171,176,203,204,208,209,210,211,212,213,214,215,234,],[-120,-113,-147,-121,-117,-103,-118,-97,-148,-119,115,-111,-121,-112,-149,-149,-149,-116,-69,-102,-108,-96,-100,-30,-34,208,-115,-34,-33,-68,-105,-104,-106,-107,-110,-99,-98,-32,]),'EOL':([11,29,33,34,35,36,39,41,43,44,51,53,54,56,60,61,63,64,66,69,71,72,73,74,76,77,78,80,81,82,83,85,86,92,93,94,107,109,110,111,112,114,115,117,119,120,122,123,124,128,130,131,133,135,138,143,144,148,155,156,158,161,165,167,168,176,186,203,204,206,207,208,209,210,211,212,213,214,215,216,217,219,222,223,230,234,237,240,241,244,251,252,253,261,263,264,265,266,270,273,275,276,278,],[-124,-26,39,39,-121,-149,39,-149,-20,-18,-135,-137,-19,39,-138,39,39,39,39,-139,39,-120,-113,-147,-121,-117,-103,-118,-97,-148,-119,-111,39,-149,-86,-80,-25,-121,-112,-149,-149,-149,-136,39,-134,-130,-132,-149,-149,-123,39,-116,-69,-102,-108,-96,-100,-131,-85,-88,-79,-83,-30,-34,39,-115,-87,-34,-33,39,-124,-68,-105,-104,-106,-107,-110,-99,-98,39,39,-52,-81,-82,-76,-32,-145,39,39,-65,-143,-52,-52,-122,-146,39,39,-52,-129,39,-145,39,-140,]),'EQUALS_EQUALS':([72,73,74,76,77,78,80,81,82,83,85,93,109,110,111,112,114,123,131,133,135,138,143,144,165,167,176,203,204,208,209,210,211,212,213,214,215,234,],[-120,-113,-147,-121,-117,-103,-118,-97,-148,-119,-111,-86,-121,-112,-149,-149,-149,154,-116,-69,-102,-108,-96,-100,-30,-34,-115,-34,-33,-68,-105,-104,-106,-107,-110,-99,-98,-32,]),'WHILE':([10,26,27,28,39,40,46,47,48,49,50,62,90,96,100,101,104,108,116,128,145,146,168,184,205,206,236,270,276,279,],[-149,-7,-6,-8,-149,-77,68,-9,-11,-10,-16,68,-64,-62,-61,-59,-60,-63,-149,-123,68,-149,-149,68,68,-149,68,-129,-149,68,]),'COLON':([72,73,74,76,77,78,80,81,82,83,85,93,94,105,109,110,111,112,114,123,124,129,131,133,135,138,143,144,155,156,158,161,165,167,169,176,186,203,204,208,209,210,211,212,213,214,215,222,223,234,249,259,262,269,],[-120,-113,-147,-121,-117,-103,-118,-97,-148,-119,-111,-86,-80,128,-121,-112,-149,-149,-149,-149,-149,-123,-116,-69,-102,-108,-96,-100,-85,-88,-79,-83,-30,-34,206,-115,-87,-34,-33,-68,-105,-104,-106,-107,-110,-99,-98,-81,-82,-32,-128,-144,270,206,]),'PRINT':([10,26,27,28,39,40,46,47,48,49,50,62,90,96,100,101,104,108,116,128,145,146,168,184,205,206,236,270,276,279,],[-149,-7,-6,-8,-149,-77,58,-9,-11,-10,-16,58,-64,-62,-61,-59,-60,-63,-149,-123,58,-149,-149,58,58,-149,58,-129,-149,58,]),'TRUE':([52,58,67,68,75,79,106,113,127,132,134,136,137,139,141,142,149,150,151,152,153,154,157,159,160,162,172,173,174,175,177,178,179,187,188,189,190,191,192,193,194,196,197,198,199,200,201,217,225,226,227,228,229,232,243,],[74,74,74,-144,74,-114,74,74,74,74,-109,-109,-109,-109,-101,-101,74,-89,-89,-89,-89,-89,-89,-84,-84,74,74,74,74,74,74,74,74,-90,-92,-95,-93,-94,-91,74,74,-75,-75,-75,-75,-75,74,74,-74,-73,-71,-72,-70,74,74,]),'MINUS':([52,58,67,68,72,73,74,76,77,78,79,80,81,82,83,85,106,109,110,111,112,113,114,127,131,132,133,134,135,136,137,138,139,141,142,149,150,151,152,153,154,157,159,160,162,165,167,172,173,174,175,176,177,178,179,187,188,189,190,191,192,193,194,196,197,198,199,200,201,203,204,208,209,210,211,212,213,217,225,226,227,228,229,232,234,243,],[75,75,75,-144,-120,-113,-147,-121,-117,-103,-114,-118,-97,-148,-119,-111,75,-121,-112,-149,-149,75,141,75,-116,75,-69,-109,-102,-109,-109,-108,-109,-101,-101,75,-89,-89,-89,-89,-89,-89,-84,-84,75,-30,-34,75,75,75,75,-115,75,75,75,-90,-92,-95,-93,-94,-91,75,75,-75,-75,-75,-75,-75,75,-34,-33,-68,-105,-104,-106,-107,-110,75,-74,-73,-71,-72,-70,75,-32,75,]),'DIVIDE':([72,73,74,76,77,78,80,82,83,85,109,110,111,112,131,133,165,167,176,203,204,208,213,234,],[-120,-113,-147,-121,-117,-103,-118,-148,-119,-111,-121,-112,-149,134,-116,-69,-30,-34,-115,-34,-33,-68,-110,-32,]),'MINUS_EQUALS':([65,102,126,133,163,208,],[-66,-67,-149,-69,196,-68,]),'END_MAIN':([39,47,48,49,62,70,90,96,97,98,99,100,101,104,108,],[-149,-9,-11,-10,-149,107,-64,-62,-29,-27,-28,-61,-59,-60,-63,]),'NOT_EQUALS':([72,73,74,76,77,78,80,81,82,83,85,93,109,110,111,112,114,123,131,133,135,138,143,144,165,167,176,203,204,208,209,210,211,212,213,214,215,234,],[-120,-113,-147,-121,-117,-103,-118,-97,-148,-119,-111,-86,-121,-112,-149,-149,-149,152,-116,-69,-102,-108,-96,-100,-30,-34,-115,-34,-33,-68,-105,-104,-106,-107,-110,-99,-98,-32,]),'DOUBLE_CONSTANT':([52,58,67,68,75,79,106,113,127,132,134,136,137,139,141,142,149,150,151,152,153,154,157,159,160,162,172,173,174,175,177,178,179,187,188,189,190,191,192,193,194,196,197,198,199,200,201,217,225,226,227,228,229,232,243,],[80,80,80,-144,80,-114,80,80,80,80,-109,-109,-109,-109,-101,-101,80,-89,-89,-89,-89,-89,-89,-84,-84,80,80,80,80,80,80,80,80,-90,-92,-95,-93,-94,-91,80,80,-75,-75,-75,-75,-75,80,80,-74,-73,-71,-72,-70,80,80,]),'GREATER_EQUALS':([72,73,74,76,77,78,80,81,82,83,85,93,109,110,111,112,114,123,131,133,135,138,143,144,165,167,176,203,204,208,209,210,211,212,213,214,215,234,],[-120,-113,-147,-121,-117,-103,-118,-97,-148,-119,-111,-86,-121,-112,-149,-149,-149,151,-116,-69,-102,-108,-96,-100,-30,-34,-115,-34,-33,-68,-105,-104,-106,-107,-110,-99,-98,-32,]),'LESS_EQUALS':([72,73,74,76,77,78,80,81,82,83,85,93,109,110,111,112,114,123,131,133,135,138,143,144,165,167,176,203,204,208,209,210,211,212,213,214,215,234,],[-120,-113,-147,-121,-117,-103,-118,-97,-148,-119,-111,-86,-121,-112,-149,-149,-149,153,-116,-69,-102,-108,-96,-100,-30,-34,-115,-34,-33,-68,-105,-104,-106,-107,-110,-99,-98,-32,]),'TO':([72,73,74,76,77,78,80,81,82,83,85,109,110,111,112,114,131,133,135,138,143,144,165,167,176,195,203,204,208,209,210,211,212,213,214,215,224,234,],[-120,-113,-147,-121,-117,-103,-118,-97,-148,-119,-111,-121,-112,-149,-149,-149,-116,-69,-102,-108,-96,-100,-30,-34,-115,-142,-34,-33,-68,-105,-104,-106,-107,-110,-99,-98,243,-32,]),'INT_CONSTANT':([52,58,67,68,75,79,106,113,127,132,134,136,137,139,141,142,149,150,151,152,153,154,157,159,160,162,172,173,174,175,177,178,179,187,188,189,190,191,192,193,194,196,197,198,199,200,201,217,225,226,227,228,229,232,243,],[77,77,77,-144,77,-114,77,77,77,77,-109,-109,-109,-109,-101,-101,77,-89,-89,-89,-89,-89,-89,-84,-84,77,77,77,77,77,77,77,77,-90,-92,-95,-93,-94,-91,77,77,-75,-75,-75,-75,-75,77,77,-74,-73,-71,-72,-70,77,77,]),'COMMA':([35,36,41,51,53,72,73,74,76,77,78,80,81,82,83,85,92,93,94,109,110,111,112,114,115,123,124,131,133,135,138,143,144,155,156,158,161,164,165,167,176,186,202,203,204,208,209,210,211,212,213,214,215,221,222,223,234,242,],[-121,42,-149,-135,-137,-120,-113,-147,-121,-117,-103,-118,-97,-148,-119,-111,121,-86,-80,-121,-112,-149,-149,-149,-136,-149,-149,-116,-69,-102,-108,-96,-100,-85,-88,-79,-83,-36,-30,-34,-115,-87,232,-34,-33,-68,-105,-104,-106,-107,-110,-99,-98,-56,-81,-82,-32,257,]),'PLUS':([72,73,74,76,77,78,80,81,82,83,85,109,110,111,112,114,131,133,135,138,165,167,176,203,204,208,209,210,211,212,213,234,],[-120,-113,-147,-121,-117,-103,-118,-97,-148,-119,-111,-121,-112,-149,-149,142,-116,-69,-102,-108,-30,-34,-115,-34,-33,-68,-105,-104,-106,-107,-110,-32,]),'PERCENTAGE':([72,73,74,76,77,78,80,82,83,85,109,110,111,112,131,133,165,167,176,203,204,208,213,234,],[-120,-113,-147,-121,-117,-103,-118,-148,-119,-111,-121,-112,-149,137,-116,-69,-30,-34,-115,-34,-33,-68,-110,-32,]),'PLUS_EQUALS':([65,102,126,133,163,208,],[-66,-67,-149,-69,197,-68,]),'LEFT_PARENTHESIS':([37,45,52,57,58,65,67,68,76,79,103,106,113,127,132,134,136,137,139,141,142,149,150,151,152,153,154,157,159,160,162,172,173,174,175,177,178,179,187,188,189,190,191,192,193,194,196,197,198,199,200,201,217,225,226,227,228,229,232,243,],[-42,55,79,91,79,-31,79,-144,-31,-114,127,79,79,79,79,-109,-109,-109,-109,-101,-101,79,-89,-89,-89,-89,-89,-89,-84,-84,79,79,79,79,79,79,79,79,-90,-92,-95,-93,-94,-91,79,79,-75,-75,-75,-75,-75,79,79,-74,-73,-71,-72,-70,79,79,]),'$end':([1,4,5,12,22,31,39,47,48,49,107,130,170,],[0,-1,-5,-3,-4,-2,-149,-9,-11,-10,-25,-149,-24,]),'END':([39,47,48,49,62,90,96,97,98,99,100,101,104,108,183,235,238,239,246,247,248,250,254,260,280,281,],[-149,-9,-11,-10,-149,-64,-62,-29,-27,-28,-61,-59,-60,-63,219,-124,252,253,-149,261,-125,263,266,-126,-124,-127,]),'STRING':([0,2,6,9,10,38,39,40,47,48,49,50,55,88,116,118,146,257,],[-129,-78,13,13,-78,-78,-149,-77,-9,-11,-10,-16,-78,-54,-78,13,-78,-78,]),'FOR':([10,26,27,28,39,40,46,47,48,49,50,62,90,96,100,101,104,108,116,128,145,146,168,184,205,206,236,270,276,279,],[-149,-7,-6,-8,-149,-77,59,-9,-11,-10,-16,59,-64,-62,-61,-59,-60,-63,-149,-123,59,-149,-149,59,59,-149,59,-129,-149,59,]),'EQUALS':([65,102,126,133,163,208,],[-66,-67,-149,-69,200,-68,]),'ELSE':([39,47,48,49,62,90,96,97,98,99,100,101,104,108,235,],[-149,-9,-11,-10,-149,-64,-62,-29,-27,-28,-61,-59,-60,-63,249,]),'FUNC':([0,2,7,8,10,26,27,28,39,40,47,48,49,50,89,180,181,182,218,220,255,271,272,277,],[-129,9,9,9,-149,-7,-6,-8,-149,-77,-9,-11,-10,-16,-39,-44,-46,-45,-47,-43,-48,-51,-49,-50,]),'FROM':([95,125,],[-141,162,]),'RIGHT_PARENTHESIS':([35,41,51,53,55,72,73,74,76,77,78,80,81,82,83,85,87,91,93,94,109,110,111,112,114,115,123,124,127,131,133,135,138,140,143,144,155,156,158,161,164,165,166,167,176,186,202,203,204,208,209,210,211,212,213,214,215,221,222,223,231,233,234,242,245,256,258,267,268,274,],[-121,-149,-135,-137,86,-120,-113,-147,-121,-117,-103,-118,-97,-148,-119,-111,117,119,-86,-80,-121,-112,-149,-149,-149,-136,-149,-149,167,-116,-69,-102,-108,176,-96,-100,-85,-88,-79,-83,-36,-30,203,-34,-115,-87,-149,-34,-33,-68,-105,-104,-106,-107,-110,-99,-98,-56,-81,-82,-35,-38,-32,-149,-37,-55,-58,-77,-57,-53,]),'TIMES':([72,73,74,76,77,78,80,82,83,85,109,110,111,112,131,133,165,167,176,203,204,208,213,234,],[-120,-113,-147,-121,-117,-103,-118,-148,-119,-111,-121,-112,-149,136,-116,-69,-30,-34,-115,-34,-33,-68,-110,-32,]),'ID':([10,13,14,15,16,17,23,24,25,26,27,28,30,32,39,40,42,46,47,48,49,50,52,58,59,62,67,68,75,79,90,96,100,101,104,106,108,113,116,127,128,132,134,136,137,139,141,142,145,146,147,149,150,151,152,153,154,157,159,160,162,168,172,173,174,175,177,178,179,184,185,187,188,189,190,191,192,193,194,196,197,198,199,200,201,205,206,217,225,226,227,228,229,232,236,243,270,276,279,],[-149,-14,-12,-13,-15,-17,-41,-40,-17,-7,-6,-8,35,37,-149,-77,35,65,-9,-11,-10,-16,76,76,95,65,76,-144,109,-114,-64,-62,-61,-59,-60,76,-63,76,-149,76,-123,76,-109,-109,-109,-109,-101,-101,65,-149,-17,76,-89,-89,-89,-89,-89,-89,-84,-84,76,-149,76,76,76,76,76,76,76,65,35,-90,-92,-95,-93,-94,-91,76,76,-75,-75,-75,-75,-75,76,65,-149,76,-74,-73,-71,-72,-70,76,65,76,-129,-149,65,]),'IF':([10,26,27,28,39,40,46,47,48,49,50,62,90,96,100,101,104,108,116,128,145,146,168,184,205,206,236,270,276,279,],[-149,-7,-6,-8,-149,-77,67,-9,-11,-10,-16,67,-64,-62,-61,-59,-60,-63,-149,-123,67,-149,-149,67,67,-149,67,-129,-149,67,]),'AND':([72,73,74,76,77,78,80,81,82,83,85,93,94,109,110,111,112,114,123,124,131,133,135,138,143,144,155,156,165,167,176,186,203,204,208,209,210,211,212,213,214,215,234,],[-120,-113,-147,-121,-117,-103,-118,-97,-148,-119,-111,-86,-80,-121,-112,-149,-149,-149,-149,159,-116,-69,-102,-108,-96,-100,-85,-88,-30,-34,-115,-87,-34,-33,-68,-105,-104,-106,-107,-110,-99,-98,-32,]),'FALSE':([52,58,67,68,75,79,106,113,127,132,134,136,137,139,141,142,149,150,151,152,153,154,157,159,160,162,172,173,174,175,177,178,179,187,188,189,190,191,192,193,194,196,197,198,199,200,201,217,225,226,227,228,229,232,243,],[82,82,82,-144,82,-114,82,82,82,82,-109,-109,-109,-109,-101,-101,82,-89,-89,-89,-89,-89,-89,-84,-84,82,82,82,82,82,82,82,82,-90,-92,-95,-93,-94,-91,82,82,-75,-75,-75,-75,-75,82,82,-74,-73,-71,-72,-70,82,82,]),'GREATER':([72,73,74,76,77,78,80,81,82,83,85,93,109,110,111,112,114,123,131,133,135,138,143,144,165,167,176,203,204,208,209,210,211,212,213,214,215,234,],[-120,-113,-147,-121,-117,-103,-118,-97,-148,-119,-111,-86,-121,-112,-149,-149,-149,157,-116,-69,-102,-108,-96,-100,-30,-34,-115,-34,-33,-68,-105,-104,-106,-107,-110,-99,-98,-32,]),'INT':([0,2,6,9,10,38,39,40,47,48,49,50,55,88,116,118,146,257,],[-129,-78,14,14,-78,-78,-149,-77,-9,-11,-10,-16,-78,-54,-78,14,-78,-78,]),'DOUBLE':([0,2,6,9,10,38,39,40,47,48,49,50,55,88,116,118,146,257,],[-129,-78,15,15,-78,-78,-149,-77,-9,-11,-10,-16,-78,-54,-78,15,-78,-78,]),'DIVIDE_EQUALS':([65,102,126,133,163,208,],[-66,-67,-149,-69,199,-68,]),'BOOL':([0,2,6,9,10,38,39,40,47,48,49,50,55,88,116,118,146,257,],[-129,-78,16,16,-78,-78,-149,-77,-9,-11,-10,-16,-78,-54,-78,16,-78,-78,]),'STRING_CONSTANT':([52,58,67,68,75,79,106,113,121,127,132,134,136,137,139,141,142,149,150,151,152,153,154,157,159,160,162,172,173,174,175,177,178,179,187,188,189,190,191,192,193,194,196,197,198,199,200,201,217,225,226,227,228,229,232,243,],[83,83,83,-144,83,-114,83,83,148,83,83,-109,-109,-109,-109,-101,-101,83,-89,-89,-89,-89,-89,-89,-84,-84,83,83,83,83,83,83,83,83,-90,-92,-95,-93,-94,-91,83,83,-75,-75,-75,-75,-75,83,83,-74,-73,-71,-72,-70,83,83,]),'TIMES_EQUALS':([65,102,126,133,163,208,],[-66,-67,-149,-69,198,-68,]),'LEFT_BRACKET':([35,41,65,76,102,109,111,126,],[-121,52,-66,-121,-67,-121,132,132,]),'MAIN':([0,2,3,7,8,10,18,19,20,21,26,27,28,39,40,47,48,49,50,89,180,181,182,218,220,255,271,272,277,],[-129,11,11,-149,11,-149,-21,-22,-23,11,-7,-6,-8,-149,-77,-9,-11,-10,-16,-39,-44,-46,-45,-47,-43,-48,-51,-49,-50,]),'OR':([72,73,74,76,77,78,80,81,82,83,85,93,94,109,110,111,112,114,123,124,131,133,135,138,143,144,155,156,165,167,176,186,203,204,208,209,210,211,212,213,214,215,234,],[-120,-113,-147,-121,-117,-103,-118,-97,-148,-119,-111,-86,-80,-121,-112,-149,-149,-149,-149,160,-116,-69,-102,-108,-96,-100,-85,-88,-30,-34,-115,-87,-34,-33,-68,-105,-104,-106,-107,-110,-99,-98,-32,]),'MOD':([72,73,74,76,77,78,80,82,83,85,109,110,111,112,131,133,165,167,176,203,204,208,213,234,],[-120,-113,-147,-121,-117,-103,-118,-148,-119,-111,-121,-112,-149,139,-116,-69,-30,-34,-115,-34,-33,-68,-110,-32,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'relational_operator':([123,],[149,]),'post_function':([55,],[89,]),'push_assignment':([196,197,198,199,200,],[225,226,227,228,229,]),'parameters':([55,257,],[87,268,]),'increase_call_arguments':([164,],[202,]),'post_variables':([10,116,146,],[27,145,184,]),'finish_params':([256,],[267,]),'init':([0,],[1,]),'program':([2,],[4,]),'factor':([52,58,67,106,113,127,132,149,162,172,173,174,175,177,178,179,193,194,201,217,232,243,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'main':([2,3,8,21,],[5,12,22,31,]),'finish_evaluating':([2,10,38,55,116,146,257,],[6,6,6,88,6,6,88,]),'read':([46,62,145,184,205,236,279,],[61,61,61,61,61,61,61,]),'post_term':([112,],[135,]),'condition':([46,62,145,184,205,236,279,],[66,66,66,66,66,66,66,]),'term':([52,58,67,106,113,127,132,149,162,172,173,174,175,177,178,179,193,194,201,217,232,243,],[81,81,81,81,81,81,81,81,81,209,210,211,212,81,81,81,81,81,81,81,81,81,]),'push_end':([107,],[130,]),'post_void_return':([183,],[218,]),'push_term':([134,136,137,139,],[172,173,174,175,]),'register_function':([37,],[45,]),'identifier':([30,42,185,],[36,36,221,]),'push_paren':([79,],[113,]),'BOOL_CONSTANT':([52,58,67,75,106,113,127,132,149,162,172,173,174,175,177,178,179,193,194,201,217,232,243,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'call_function':([46,52,58,62,67,106,113,127,132,145,149,162,172,173,174,175,177,178,179,184,193,194,201,205,217,232,236,243,279,],[56,73,73,56,73,73,73,73,73,56,73,73,73,73,73,73,73,73,73,56,73,73,73,56,73,73,56,73,56,]),'reset_scope':([219,252,253,266,],[241,264,265,273,]),'push_relop':([150,151,152,153,154,157,],[187,188,189,190,191,192,]),'post_parameters':([242,],[256,]),'start_evaluating':([40,267,],[50,274,]),'post_print':([92,],[120,]),'fill_goto':([11,207,235,280,],[29,237,246,281,]),'for':([46,62,145,184,205,236,279,],[60,60,60,60,60,60,60,]),'post_exp':([114,],[143,]),'print':([46,62,145,184,205,236,279,],[63,63,63,63,63,63,63,]),'push_exp':([141,142,],[177,178,]),'set_type':([17,25,147,],[30,32,185,]),'inter_declaration':([30,42,],[34,54,]),'void_return':([145,184,],[182,182,]),'pop_paren':([176,],[213,]),'push_gotoF':([128,129,],[168,169,]),'assignment_operator':([163,],[201,]),'expression':([58,67,106,113,127,149,179,193,194,201,217,232,],[94,94,94,94,94,186,94,94,94,94,94,94,]),'pop_exp':([81,],[114,]),'block':([46,62,145,184,205,236,279,],[70,99,183,183,235,250,280,]),'optional_eol':([39,130,168,206,276,],[47,170,205,236,279,]),'post_functions':([7,],[18,]),'pop_term':([78,],[112,]),'required_eol':([33,34,39,56,61,63,64,66,71,86,117,130,168,206,216,217,240,241,264,265,273,276,],[38,40,48,90,96,100,101,104,108,116,146,48,48,48,238,239,254,255,271,272,277,48,]),'push_goto':([0,270,],[2,276,]),'post_arguments':([202,],[231,]),'validate_function_call':([65,76,],[103,103,]),'post_cycle':([169,269,],[207,275,]),'post_cond':([124,],[158,]),'func_return':([145,184,],[180,220,]),'post_call_function':([127,],[165,]),'validate_var':([65,],[102,]),'push_cycle':([68,259,],[106,269,]),'process_variable':([35,76,109,],[41,111,111,]),'empty':([7,10,36,39,41,62,92,111,112,114,116,123,124,126,130,146,168,202,206,242,246,276,],[20,28,43,49,53,97,122,133,138,144,28,156,161,133,49,28,49,233,49,258,260,49,]),'function':([2,7,8,],[7,7,7,]),'statement':([46,62,145,184,205,236,279,],[62,62,62,62,62,62,62,]),'pre_variables':([2,10,38,116,146,],[8,26,46,26,26,]),'else':([235,],[248,]),'value_return':([145,184,],[181,181,]),'cycle_declaration':([36,],[44,]),'declaration':([2,10,38,116,146,],[10,10,10,10,10,]),'set_main_scope':([29,],[33,]),'init_var':([195,],[224,]),'push_op_and_or':([159,160,],[193,194,]),'fill_goto_else':([249,],[262,]),'while':([46,62,145,184,205,236,279,],[69,69,69,69,69,69,69,]),'post_expression':([123,],[155,]),'loop':([46,62,145,184,205,236,279,],[71,71,71,71,71,71,71,]),'validate_call_arguments':([167,203,],[204,234,]),'cond':([58,67,106,113,127,179,193,194,201,217,232,],[92,105,129,140,164,216,222,223,230,240,164,]),'functions':([2,7,8,],[3,19,21,]),'pop_op_and_or':([94,],[124,]),'arguments':([127,232,],[166,245,]),'pop_relop':([93,],[123,]),'exp':([52,58,67,106,113,127,132,149,162,177,178,179,193,194,201,217,232,243,],[84,93,93,93,93,93,171,93,195,214,215,93,93,93,93,93,93,259,]),'post_condition':([235,],[247,]),'assignment':([46,62,145,184,205,236,279,],[64,64,64,64,64,64,64,]),'post_identifier':([41,],[51,]),'pop_assignment':([230,],[244,]),'post_block':([62,],[98,]),'types':([6,9,118,],[17,24,147,]),'create_pending_goto':([237,275,],[251,278,]),'update_function_parameters':([221,],[242,]),'array_notation':([111,126,],[131,163,]),'add_var':([95,],[125,]),'push_var':([102,],[126,]),'start_params':([88,],[118,]),'func_types':([9,],[25,]),'variable_constant':([52,58,67,75,106,113,127,132,149,162,172,173,174,175,177,178,179,193,194,201,217,232,243,],[85,85,85,110,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> push_goto program','init',2,'p_init','parser.py',25),
  ('program -> pre_variables functions main','program',3,'p_program','parser.py',28),
  ('program -> functions main','program',2,'p_program','parser.py',29),
  ('program -> pre_variables main','program',2,'p_program','parser.py',30),
  ('program -> main','program',1,'p_program','parser.py',31),
  ('pre_variables -> declaration post_variables','pre_variables',2,'p_pre_variables','parser.py',37),
  ('post_variables -> pre_variables','post_variables',1,'p_post_variables','parser.py',40),
  ('post_variables -> empty','post_variables',1,'p_post_variables','parser.py',41),
  ('required_eol -> EOL optional_eol','required_eol',2,'p_required_eol','parser.py',45),
  ('optional_eol -> empty','optional_eol',1,'p_optional_eol','parser.py',48),
  ('optional_eol -> required_eol','optional_eol',1,'p_optional_eol','parser.py',49),
  ('types -> INT','types',1,'p_types','parser.py',53),
  ('types -> DOUBLE','types',1,'p_types','parser.py',54),
  ('types -> STRING','types',1,'p_types','parser.py',55),
  ('types -> BOOL','types',1,'p_types','parser.py',56),
  ('declaration -> finish_evaluating types set_type inter_declaration required_eol start_evaluating','declaration',6,'p_declaration','parser.py',61),
  ('set_type -> <empty>','set_type',0,'p_set_type','parser.py',64),
  ('inter_declaration -> identifier cycle_declaration','inter_declaration',2,'p_inter_declaration','parser.py',67),
  ('cycle_declaration -> COMMA inter_declaration','cycle_declaration',2,'p_cycle_declaration','parser.py',70),
  ('cycle_declaration -> empty','cycle_declaration',1,'p_cycle_declaration','parser.py',71),
  ('functions -> function post_functions','functions',2,'p_functions','parser.py',75),
  ('post_functions -> functions','post_functions',1,'p_post_functions','parser.py',79),
  ('post_functions -> empty','post_functions',1,'p_post_functions','parser.py',80),
  ('main -> MAIN fill_goto set_main_scope required_eol pre_variables block END_MAIN push_end optional_eol','main',9,'p_main','parser.py',84),
  ('push_end -> <empty>','push_end',0,'p_push_end','parser.py',87),
  ('set_main_scope -> <empty>','set_main_scope',0,'p_set_main_scope','parser.py',91),
  ('block -> statement post_block','block',2,'p_block','parser.py',98),
  ('post_block -> block','post_block',1,'p_post_block','parser.py',101),
  ('post_block -> empty','post_block',1,'p_post_block','parser.py',102),
  ('call_function -> ID validate_function_call LEFT_PARENTHESIS post_call_function','call_function',4,'p_call_function','parser.py',106),
  ('validate_function_call -> <empty>','validate_function_call',0,'p_validate_function_call','parser.py',110),
  ('post_call_function -> arguments RIGHT_PARENTHESIS validate_call_arguments','post_call_function',3,'p_post_call_function','parser.py',118),
  ('post_call_function -> RIGHT_PARENTHESIS validate_call_arguments','post_call_function',2,'p_post_call_function','parser.py',119),
  ('validate_call_arguments -> <empty>','validate_call_arguments',0,'p_validate_call_arguments','parser.py',122),
  ('arguments -> cond increase_call_arguments post_arguments','arguments',3,'p_arguments','parser.py',128),
  ('increase_call_arguments -> <empty>','increase_call_arguments',0,'p_increase_call_arguments','parser.py',132),
  ('post_arguments -> COMMA arguments','post_arguments',2,'p_post_arguments','parser.py',140),
  ('post_arguments -> empty','post_arguments',1,'p_post_arguments','parser.py',141),
  ('function -> FUNC func_types set_type ID register_function LEFT_PARENTHESIS post_function','function',7,'p_function','parser.py',145),
  ('func_types -> types','func_types',1,'p_func_types','parser.py',148),
  ('func_types -> VOID','func_types',1,'p_func_types','parser.py',149),
  ('register_function -> <empty>','register_function',0,'p_register_function','parser.py',155),
  ('post_function -> parameters RIGHT_PARENTHESIS required_eol post_variables func_return','post_function',5,'p_post_function','parser.py',163),
  ('post_function -> RIGHT_PARENTHESIS required_eol post_variables func_return','post_function',4,'p_post_function','parser.py',164),
  ('func_return -> void_return','func_return',1,'p_func_return','parser.py',167),
  ('func_return -> value_return','func_return',1,'p_func_return','parser.py',168),
  ('void_return -> block post_void_return','void_return',2,'p_void_return','parser.py',171),
  ('post_void_return -> END reset_scope required_eol','post_void_return',3,'p_post_void_return','parser.py',174),
  ('post_void_return -> RETURN required_eol END reset_scope required_eol','post_void_return',5,'p_post_void_return','parser.py',175),
  ('value_return -> block RETURN cond required_eol END reset_scope required_eol','value_return',7,'p_value_return','parser.py',178),
  ('value_return -> RETURN cond required_eol END reset_scope required_eol','value_return',6,'p_value_return','parser.py',179),
  ('reset_scope -> <empty>','reset_scope',0,'p_reset_scope','parser.py',182),
  ('parameters -> finish_evaluating start_params types set_type identifier update_function_parameters post_parameters finish_params start_evaluating','parameters',9,'p_parameters','parser.py',188),
  ('start_params -> <empty>','start_params',0,'p_start_params','parser.py',191),
  ('finish_params -> <empty>','finish_params',0,'p_finish_params','parser.py',195),
  ('update_function_parameters -> <empty>','update_function_parameters',0,'p_update_function_parameters','parser.py',202),
  ('post_parameters -> COMMA parameters','post_parameters',2,'p_post_parameters','parser.py',206),
  ('post_parameters -> empty','post_parameters',1,'p_post_parameters','parser.py',207),
  ('statement -> assignment required_eol','statement',2,'p_statement','parser.py',211),
  ('statement -> condition required_eol','statement',2,'p_statement','parser.py',212),
  ('statement -> print required_eol','statement',2,'p_statement','parser.py',213),
  ('statement -> read required_eol','statement',2,'p_statement','parser.py',214),
  ('statement -> loop required_eol','statement',2,'p_statement','parser.py',215),
  ('statement -> call_function required_eol','statement',2,'p_statement','parser.py',216),
  ('assignment -> ID validate_var push_var array_notation assignment_operator cond pop_assignment','assignment',7,'p_assignment','parser.py',221),
  ('validate_var -> <empty>','validate_var',0,'p_validate_var','parser.py',224),
  ('push_var -> <empty>','push_var',0,'p_push_var','parser.py',229),
  ('array_notation -> LEFT_BRACKET exp RIGHT_BRACKET','array_notation',3,'p_array_notation','parser.py',238),
  ('array_notation -> empty','array_notation',1,'p_array_notation','parser.py',239),
  ('assignment_operator -> EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',244),
  ('assignment_operator -> TIMES_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',245),
  ('assignment_operator -> DIVIDE_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',246),
  ('assignment_operator -> PLUS_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',247),
  ('assignment_operator -> MINUS_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',248),
  ('push_assignment -> <empty>','push_assignment',0,'p_push_assignment','parser.py',251),
  ('pop_assignment -> <empty>','pop_assignment',0,'p_pop_assignment','parser.py',255),
  ('start_evaluating -> <empty>','start_evaluating',0,'p_start_evaluating','parser.py',261),
  ('finish_evaluating -> <empty>','finish_evaluating',0,'p_finish_evaluating','parser.py',265),
  ('cond -> expression pop_op_and_or post_cond','cond',3,'p_cond','parser.py',270),
  ('pop_op_and_or -> <empty>','pop_op_and_or',0,'p_pop_op_and_or','parser.py',273),
  ('post_cond -> AND push_op_and_or cond','post_cond',3,'p_post_cond','parser.py',278),
  ('post_cond -> OR push_op_and_or cond','post_cond',3,'p_post_cond','parser.py',279),
  ('post_cond -> empty','post_cond',1,'p_post_cond','parser.py',280),
  ('push_op_and_or -> <empty>','push_op_and_or',0,'p_push_op_and_or','parser.py',283),
  ('expression -> exp pop_relop post_expression','expression',3,'p_expression','parser.py',288),
  ('pop_relop -> <empty>','pop_relop',0,'p_pop_relop','parser.py',291),
  ('post_expression -> relational_operator expression','post_expression',2,'p_post_expression','parser.py',297),
  ('post_expression -> empty','post_expression',1,'p_post_expression','parser.py',298),
  ('push_relop -> <empty>','push_relop',0,'p_push_relop','parser.py',301),
  ('relational_operator -> LESS push_relop','relational_operator',2,'p_relational_operator','parser.py',305),
  ('relational_operator -> GREATER push_relop','relational_operator',2,'p_relational_operator','parser.py',306),
  ('relational_operator -> GREATER_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',307),
  ('relational_operator -> LESS_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',308),
  ('relational_operator -> EQUALS_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',309),
  ('relational_operator -> NOT_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',310),
  ('exp -> term pop_exp post_exp','exp',3,'p_exp','parser.py',314),
  ('pop_exp -> <empty>','pop_exp',0,'p_pop_exp','parser.py',317),
  ('post_exp -> PLUS push_exp exp','post_exp',3,'p_post_exp','parser.py',322),
  ('post_exp -> MINUS push_exp exp','post_exp',3,'p_post_exp','parser.py',323),
  ('post_exp -> empty','post_exp',1,'p_post_exp','parser.py',324),
  ('push_exp -> <empty>','push_exp',0,'p_push_exp','parser.py',327),
  ('term -> factor pop_term post_term','term',3,'p_term','parser.py',332),
  ('pop_term -> <empty>','pop_term',0,'p_pop_term','parser.py',335),
  ('post_term -> TIMES push_term term','post_term',3,'p_post_term','parser.py',341),
  ('post_term -> DIVIDE push_term term','post_term',3,'p_post_term','parser.py',342),
  ('post_term -> PERCENTAGE push_term term','post_term',3,'p_post_term','parser.py',343),
  ('post_term -> MOD push_term term','post_term',3,'p_post_term','parser.py',344),
  ('post_term -> empty','post_term',1,'p_post_term','parser.py',345),
  ('push_term -> <empty>','push_term',0,'p_push_term','parser.py',348),
  ('factor -> LEFT_PARENTHESIS push_paren cond RIGHT_PARENTHESIS pop_paren','factor',5,'p_factor','parser.py',353),
  ('factor -> variable_constant','factor',1,'p_factor','parser.py',354),
  ('factor -> MINUS variable_constant','factor',2,'p_factor','parser.py',355),
  ('factor -> call_function','factor',1,'p_factor','parser.py',356),
  ('push_paren -> <empty>','push_paren',0,'p_push_paren','parser.py',359),
  ('pop_paren -> <empty>','pop_paren',0,'p_pop_paren','parser.py',363),
  ('variable_constant -> ID process_variable array_notation','variable_constant',3,'p_variable_constant','parser.py',368),
  ('variable_constant -> INT_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',369),
  ('variable_constant -> DOUBLE_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',370),
  ('variable_constant -> STRING_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',371),
  ('variable_constant -> BOOL_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',372),
  ('process_variable -> <empty>','process_variable',0,'p_process_variable','parser.py',385),
  ('condition -> IF cond COLON push_gotoF optional_eol block post_condition END','condition',8,'p_condition','parser.py',396),
  ('push_gotoF -> <empty>','push_gotoF',0,'p_push_gotoF','parser.py',399),
  ('fill_goto -> <empty>','fill_goto',0,'p_fill_goto','parser.py',403),
  ('post_condition -> else','post_condition',1,'p_post_condition','parser.py',408),
  ('post_condition -> fill_goto empty','post_condition',2,'p_post_condition','parser.py',409),
  ('else -> ELSE fill_goto_else COLON push_goto optional_eol block fill_goto','else',7,'p_else','parser.py',413),
  ('fill_goto_else -> <empty>','fill_goto_else',0,'p_fill_goto_else','parser.py',416),
  ('push_goto -> <empty>','push_goto',0,'p_push_goto','parser.py',420),
  ('print -> PRINT cond post_print','print',3,'p_print','parser.py',425),
  ('post_print -> COMMA STRING_CONSTANT','post_print',2,'p_post_print','parser.py',428),
  ('post_print -> empty','post_print',1,'p_post_print','parser.py',429),
  ('push_print -> <empty>','push_print',0,'p_push_print','parser.py',432),
  ('read -> READ LEFT_PARENTHESIS RIGHT_PARENTHESIS','read',3,'p_read','parser.py',436),
  ('identifier -> ID process_variable post_identifier','identifier',3,'p_identifier','parser.py',440),
  ('post_identifier -> LEFT_BRACKET exp RIGHT_BRACKET','post_identifier',3,'p_post_identifier','parser.py',443),
  ('post_identifier -> empty','post_identifier',1,'p_post_identifier','parser.py',444),
  ('loop -> for','loop',1,'p_loop','parser.py',448),
  ('loop -> while','loop',1,'p_loop','parser.py',449),
  ('for -> FOR ID add_var FROM exp init_var TO exp push_cycle post_cycle create_pending_goto','for',11,'p_for','parser.py',453),
  ('add_var -> <empty>','add_var',0,'p_add_var','parser.py',456),
  ('init_var -> <empty>','init_var',0,'p_init_var','parser.py',462),
  ('while -> WHILE push_cycle cond push_gotoF post_cycle fill_goto create_pending_goto','while',7,'p_while','parser.py',467),
  ('push_cycle -> <empty>','push_cycle',0,'p_push_cycle','parser.py',470),
  ('create_pending_goto -> <empty>','create_pending_goto',0,'p_create_pending_goto','parser.py',474),
  ('post_cycle -> COLON optional_eol block END','post_cycle',4,'p_post_cycle','parser.py',479),
  ('BOOL_CONSTANT -> TRUE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',482),
  ('BOOL_CONSTANT -> FALSE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',483),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',486),
]
