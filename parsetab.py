
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '78DE2B17D3F746DB123DA306FF7B2493'
    
_lr_action_items = {'RETURN':([56,62,104,105,106,111,112,113,114,115,116,117,118,121,123,133,134,144,145,146,156,159,164,166,167,178,],[-106,-106,-14,-44,-106,-19,-17,-18,-41,-106,-42,-39,-40,-43,160,-20,-106,-14,-15,-13,-6,160,176,-106,-22,-21,]),'LESS':([9,23,25,37,38,39,41,42,43,45,46,47,48,50,51,54,75,77,80,84,87,88,104,106,127,128,129,130,131,133,134,135,136,144,145,146,166,167,178,],[-106,-94,-96,-82,-77,-104,-80,-79,-106,-106,-106,-105,-81,-78,-75,92,-76,-68,-73,-64,-67,-95,-14,-106,-70,-69,-71,-72,-74,-20,-106,-65,-66,-14,-15,-13,-106,-22,-21,]),'READ':([34,56,62,104,105,106,114,115,116,117,118,121,123,133,134,144,145,146,148,156,157,159,166,167,178,191,],[57,-106,57,-14,-44,-106,-41,-106,-42,-39,-40,-43,57,-20,-106,-14,-15,-13,57,-6,57,57,-106,-22,-21,57,]),'FOR':([34,56,62,104,105,106,114,115,116,117,118,121,123,133,134,144,145,146,148,156,157,159,166,167,178,191,],[60,-106,60,-14,-44,-106,-41,-106,-42,-39,-40,-43,60,-20,-106,-14,-15,-13,60,-6,60,60,-106,-22,-21,60,]),'RIGHT_BRACKET':([9,23,25,37,38,39,41,42,43,45,46,47,48,49,50,51,54,55,75,77,80,84,87,88,89,90,96,98,100,103,104,106,127,128,129,130,131,133,134,135,136,137,139,141,142,143,144,145,146,166,167,168,178,],[-106,-94,-96,-82,-77,-104,-80,-79,-106,-106,-106,-105,-81,88,-78,-75,-106,-106,-76,-68,-73,-64,-67,-95,-106,140,-55,-57,-51,-54,-14,-106,-70,-69,-71,-72,-74,-20,-106,-65,-66,-23,-25,-56,-52,-53,-14,-15,-13,-106,-22,-24,-21,]),'EOL':([6,9,10,11,12,23,25,27,32,37,38,39,41,42,43,45,46,47,48,50,51,53,54,55,56,61,63,64,65,66,68,70,73,75,77,80,84,87,88,96,98,100,103,104,106,109,115,120,122,127,128,129,130,131,133,134,135,136,140,141,142,143,144,145,146,147,149,150,152,154,166,167,170,175,177,178,179,181,187,190,192,194,197,],[-37,-106,-106,-38,34,-94,-96,-91,-93,-82,-77,-104,-80,-79,-106,-106,-106,-105,-81,-78,-75,-45,-106,-106,106,-97,115,115,115,115,-98,115,115,-76,-68,-73,-64,-67,-95,-55,-57,-51,-54,-14,106,-106,106,106,115,-70,-69,-71,-72,-74,-20,106,-65,-66,-92,-56,-52,-53,-14,-15,-13,-90,-102,-87,-89,-99,106,-22,-88,115,115,-21,-103,-100,115,-83,115,-101,115,]),'EQUALS_EQUALS':([9,23,25,37,38,39,41,42,43,45,46,47,48,50,51,54,75,77,80,84,87,88,104,106,127,128,129,130,131,133,134,135,136,144,145,146,166,167,178,],[-106,-94,-96,-82,-77,-104,-80,-79,-106,-106,-106,-105,-81,-78,-75,95,-76,-68,-73,-64,-67,-95,-14,-106,-70,-69,-71,-72,-74,-20,-106,-65,-66,-14,-15,-13,-106,-22,-21,]),'WHILE':([34,56,62,104,105,106,114,115,116,117,118,121,123,133,134,144,145,146,148,156,157,159,166,167,178,191,],[58,-106,58,-14,-44,-106,-41,-106,-42,-39,-40,-43,58,-20,-106,-14,-15,-13,58,-6,58,58,-106,-22,-21,58,]),'PRINT':([34,56,62,104,105,106,114,115,116,117,118,121,123,133,134,144,145,146,148,156,157,159,166,167,178,191,],[59,-106,59,-14,-44,-106,-41,-106,-42,-39,-40,-43,59,-20,-106,-14,-15,-13,59,-6,59,59,-106,-22,-21,59,]),'GREATER_EQUALS':([9,23,25,37,38,39,41,42,43,45,46,47,48,50,51,54,75,77,80,84,87,88,104,106,127,128,129,130,131,133,134,135,136,144,145,146,166,167,178,],[-106,-94,-96,-82,-77,-104,-80,-79,-106,-106,-106,-105,-81,-78,-75,97,-76,-68,-73,-64,-67,-95,-14,-106,-70,-69,-71,-72,-74,-20,-106,-65,-66,-14,-15,-13,-106,-22,-21,]),'MINUS':([9,23,24,25,26,28,29,30,31,33,37,38,39,41,42,43,44,45,46,47,48,50,51,52,58,59,67,75,76,77,78,79,80,81,83,85,86,88,91,92,93,94,95,97,99,101,102,104,106,127,128,129,130,131,133,134,138,144,145,146,153,160,166,167,176,178,180,],[-106,-94,40,-96,-50,-47,-48,-46,40,-49,-82,-77,-104,-80,-79,-106,40,-106,86,-105,-81,-78,-75,40,40,40,40,-76,40,-68,40,40,-73,40,40,40,40,-95,-59,-58,-63,-61,-62,-60,40,40,40,-14,-106,-70,-69,-71,-72,-74,-20,-106,40,-14,-15,-13,40,40,-106,-22,40,-21,40,]),'MINUS_EQUALS':([9,10,23,25,45,88,],[-106,26,-94,-96,-106,-95,]),'DOUBLE_CONSTANT':([24,26,28,29,30,31,33,40,44,52,58,59,67,76,78,79,81,83,85,86,91,92,93,94,95,97,99,101,102,138,153,160,176,180,],[41,-50,-47,-48,-46,41,-49,41,41,41,41,41,41,41,41,41,41,41,41,41,-59,-58,-63,-61,-62,-60,41,41,41,41,41,41,41,41,]),'NOT_EQUALS':([9,23,25,37,38,39,41,42,43,45,46,47,48,50,51,54,75,77,80,84,87,88,104,106,127,128,129,130,131,133,134,135,136,144,145,146,166,167,178,],[-106,-94,-96,-82,-77,-104,-80,-79,-106,-106,-106,-105,-81,-78,-75,93,-76,-68,-73,-64,-67,-95,-14,-106,-70,-69,-71,-72,-74,-20,-106,-65,-66,-14,-15,-13,-106,-22,-21,]),'TRUE':([24,26,28,29,30,31,33,40,44,52,58,59,67,76,78,79,81,83,85,86,91,92,93,94,95,97,99,101,102,138,153,160,176,180,],[39,-50,-47,-48,-46,39,-49,39,39,39,39,39,39,39,39,39,39,39,39,39,-59,-58,-63,-61,-62,-60,39,39,39,39,39,39,39,39,]),'LESS_EQUALS':([9,23,25,37,38,39,41,42,43,45,46,47,48,50,51,54,75,77,80,84,87,88,104,106,127,128,129,130,131,133,134,135,136,144,145,146,166,167,178,],[-106,-94,-96,-82,-77,-104,-80,-79,-106,-106,-106,-105,-81,-78,-75,94,-76,-68,-73,-64,-67,-95,-14,-106,-70,-69,-71,-72,-74,-20,-106,-65,-66,-14,-15,-13,-106,-22,-21,]),'TO':([9,23,25,37,38,39,41,42,43,45,46,47,48,50,51,75,77,80,84,87,88,104,106,127,128,129,130,131,133,134,135,136,144,145,146,166,167,171,178,],[-106,-94,-96,-82,-77,-104,-80,-79,-106,-106,-106,-105,-81,-78,-75,-76,-68,-73,-64,-67,-95,-14,-106,-70,-69,-71,-72,-74,-20,-106,-65,-66,-14,-15,-13,-106,-22,180,-21,]),'INT_CONSTANT':([24,26,28,29,30,31,33,40,44,52,58,59,67,76,78,79,81,83,85,86,91,92,93,94,95,97,99,101,102,138,153,160,176,180,],[42,-50,-47,-48,-46,42,-49,42,42,42,42,42,42,42,42,42,42,42,42,42,-59,-58,-63,-61,-62,-60,42,42,42,42,42,42,42,42,]),'COLON':([9,23,25,37,38,39,41,42,43,45,46,47,48,50,51,54,55,75,77,80,84,87,88,96,98,100,103,104,106,108,119,127,128,129,130,131,133,134,135,136,141,142,143,144,145,146,166,167,172,178,185,189,],[-106,-94,-96,-82,-77,-104,-80,-79,-106,-106,-106,-105,-81,-78,-75,-106,-106,-76,-68,-73,-64,-67,-95,-55,-57,-51,-54,-14,-106,148,157,-70,-69,-71,-72,-74,-20,-106,-65,-66,-56,-52,-53,-14,-15,-13,-106,-22,148,-21,191,148,]),'PLUS':([9,23,25,37,38,39,41,42,43,45,46,47,48,50,51,75,77,80,88,104,106,127,128,129,130,131,133,134,144,145,146,166,167,178,],[-106,-94,-96,-82,-77,-104,-80,-79,-106,-106,85,-105,-81,-78,-75,-76,-68,-73,-95,-14,-106,-70,-69,-71,-72,-74,-20,-106,-14,-15,-13,-106,-22,-21,]),'PERCENTAGE':([9,23,25,37,38,39,41,42,43,45,47,48,50,51,75,88,104,106,131,133,134,144,145,146,166,167,178,],[-106,-94,-96,-82,-77,-104,-80,-79,79,-106,-105,-81,-78,-75,-76,-95,-14,-106,-74,-20,-106,-14,-15,-13,-106,-22,-21,]),'IF':([34,56,62,104,105,106,114,115,116,117,118,121,123,133,134,144,145,146,148,156,157,159,166,167,178,191,],[67,-106,67,-14,-44,-106,-41,-106,-42,-39,-40,-43,67,-20,-106,-14,-15,-13,67,-6,67,67,-106,-22,-21,67,]),'LEFT_PARENTHESIS':([19,24,26,28,29,30,31,33,44,45,52,57,58,59,67,76,78,79,81,83,85,86,91,92,93,94,95,97,99,101,102,138,153,160,176,180,],[36,44,-50,-47,-48,-46,44,-49,44,83,44,107,44,44,44,44,44,44,44,44,44,44,-59,-58,-63,-61,-62,-60,44,44,44,44,44,44,44,44,]),'$end':([2,3,13,18,35,104,106,120,144,145,146,158,],[0,-4,-2,-3,-1,-14,-106,-106,-14,-15,-13,-12,]),'END':([56,62,104,105,106,111,112,113,114,115,116,117,118,121,133,134,144,145,146,156,164,166,167,169,173,178,182,183,184,186,193,195,],[-106,-106,-14,-44,-106,-19,-17,-18,-41,-106,-42,-39,-40,-43,-20,-106,-14,-15,-13,-6,177,-106,-22,179,-106,-21,190,-84,-85,192,197,-86,]),'DIVIDE':([9,23,25,37,38,39,41,42,43,45,47,48,50,51,75,88,104,106,131,133,134,144,145,146,166,167,178,],[-106,-94,-96,-82,-77,-104,-80,-79,76,-106,-105,-81,-78,-75,-76,-95,-14,-106,-74,-20,-106,-14,-15,-13,-106,-22,-21,]),'TIMES_EQUALS':([9,10,23,25,45,88,],[-106,28,-94,-96,-106,-95,]),'EQUALS':([9,10,23,25,45,88,],[-106,30,-94,-96,-106,-95,]),'TIMES':([9,23,25,37,38,39,41,42,43,45,47,48,50,51,75,88,104,106,131,133,134,144,145,146,166,167,178,],[-106,-94,-96,-82,-77,-104,-80,-79,78,-106,-105,-81,-78,-75,-76,-95,-14,-106,-74,-20,-106,-14,-15,-13,-106,-22,-21,]),'FUNC':([0,4,5,6,8,9,10,11,20,21,22,23,25,27,32,37,38,39,41,42,43,45,46,47,48,50,51,53,54,55,72,75,77,80,84,87,88,96,98,100,103,104,106,115,127,128,129,130,131,133,134,135,136,140,141,142,143,144,145,146,156,161,162,163,166,167,174,178,188,196,198,],[7,7,7,-37,-106,-106,-106,-38,-7,-5,-8,-94,-96,-91,-93,-82,-77,-104,-80,-79,-106,-106,-106,-105,-81,-78,-75,-45,-106,-106,-26,-76,-68,-73,-64,-67,-95,-55,-57,-51,-54,-14,-106,-106,-70,-69,-71,-72,-74,-20,-106,-65,-66,-92,-56,-52,-53,-14,-15,-13,-6,-28,-30,-29,-106,-22,-27,-21,-31,-33,-32,]),'IN':([9,23,25,88,110,],[-106,-94,-96,-95,155,]),'FALSE':([24,26,28,29,30,31,33,40,44,52,58,59,67,76,78,79,81,83,85,86,91,92,93,94,95,97,99,101,102,138,153,160,176,180,],[47,-50,-47,-48,-46,47,-49,47,47,47,47,47,47,47,47,47,47,47,47,47,-59,-58,-63,-61,-62,-60,47,47,47,47,47,47,47,47,]),'RIGHT_PARENTHESIS':([9,23,25,36,37,38,39,41,42,43,45,46,47,48,50,51,54,55,71,74,75,77,80,82,83,84,87,88,89,96,98,100,103,104,106,107,124,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,143,144,145,146,165,166,167,168,178,],[-106,-94,-96,73,-82,-77,-104,-80,-79,-106,-106,-106,-105,-81,-78,-75,-106,-106,122,-106,-76,-68,-73,131,134,-64,-67,-95,-106,-55,-57,-51,-54,-14,-106,147,-34,-36,-70,-69,-71,-72,-74,166,-20,-106,-65,-66,-23,-25,-56,-52,-53,-14,-15,-13,-35,-106,-22,-24,-21,]),'ELSE':([56,62,104,105,106,111,112,113,114,115,116,117,118,121,133,134,144,145,146,156,166,167,173,178,],[-106,-106,-14,-44,-106,-19,-17,-18,-41,-106,-42,-39,-40,-43,-20,-106,-14,-15,-13,-6,-106,-22,185,-21,]),'ID':([0,6,7,8,9,10,11,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,58,59,60,62,67,75,76,77,78,79,80,81,83,84,85,86,87,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,114,115,116,117,118,121,123,125,127,128,129,130,131,133,134,135,136,138,140,141,142,143,144,145,146,148,153,155,156,157,159,160,166,167,176,178,180,191,],[9,-37,19,9,-106,-106,-38,-94,45,-96,-50,-91,-47,-48,-46,45,-93,-49,45,9,-82,-77,-104,9,-80,-79,-106,45,-106,-106,-105,-81,-78,-75,45,-45,-106,-106,-106,45,45,9,45,45,-76,45,-68,45,45,-73,45,45,-64,45,45,-67,-95,-59,-58,-63,-61,-62,-55,-60,-57,45,-51,45,45,-54,-14,-44,-106,-41,-106,-42,-39,-40,-43,45,9,-70,-69,-71,-72,-74,-20,-106,-65,-66,45,-92,-56,-52,-53,-14,-15,-13,45,45,9,-6,45,45,45,-106,-22,45,-21,45,45,]),'PLUS_EQUALS':([9,10,23,25,45,88,],[-106,33,-94,-96,-106,-95,]),'AND':([9,23,25,37,38,39,41,42,43,45,46,47,48,50,51,54,55,75,77,80,84,87,88,96,98,104,106,127,128,129,130,131,133,134,135,136,141,144,145,146,166,167,178,],[-106,-94,-96,-82,-77,-104,-80,-79,-106,-106,-106,-105,-81,-78,-75,-106,101,-76,-68,-73,-64,-67,-95,-55,-57,-14,-106,-70,-69,-71,-72,-74,-20,-106,-65,-66,-56,-14,-15,-13,-106,-22,-21,]),'MAIN':([0,1,4,5,6,8,9,10,11,14,15,16,17,20,21,22,23,25,27,32,37,38,39,41,42,43,45,46,47,48,50,51,53,54,55,72,75,77,80,84,87,88,96,98,100,103,104,106,115,127,128,129,130,131,133,134,135,136,140,141,142,143,144,145,146,156,161,162,163,166,167,174,178,188,196,198,],[12,12,-106,12,-37,-106,-106,-106,-38,-9,-10,-11,12,-7,-5,-8,-94,-96,-91,-93,-82,-77,-104,-80,-79,-106,-106,-106,-105,-81,-78,-75,-45,-106,-106,-26,-76,-68,-73,-64,-67,-95,-55,-57,-51,-54,-14,-106,-106,-70,-69,-71,-72,-74,-20,-106,-65,-66,-92,-56,-52,-53,-14,-15,-13,-6,-28,-30,-29,-106,-22,-27,-21,-31,-33,-32,]),'FROM':([9,23,25,88,110,],[-106,-94,-96,-95,153,]),'GREATER':([9,23,25,37,38,39,41,42,43,45,46,47,48,50,51,54,75,77,80,84,87,88,104,106,127,128,129,130,131,133,134,135,136,144,145,146,166,167,178,],[-106,-94,-96,-82,-77,-104,-80,-79,-106,-106,-106,-105,-81,-78,-75,91,-76,-68,-73,-64,-67,-95,-14,-106,-70,-69,-71,-72,-74,-20,-106,-65,-66,-14,-15,-13,-106,-22,-21,]),'DIVIDE_EQUALS':([9,10,23,25,45,88,],[-106,29,-94,-96,-106,-95,]),'STRING_CONSTANT':([24,26,28,29,30,31,33,40,44,52,58,59,67,76,78,79,81,83,85,86,91,92,93,94,95,97,99,101,102,138,151,153,160,176,180,],[48,-50,-47,-48,-46,48,-49,48,48,48,48,48,48,48,48,48,48,48,48,48,-59,-58,-63,-61,-62,-60,48,48,48,48,170,48,48,48,48,]),'END_MAIN':([56,62,69,104,105,106,111,112,113,114,115,116,117,118,121,133,134,144,145,146,156,166,167,178,],[-106,-106,120,-14,-44,-106,-19,-17,-18,-41,-106,-42,-39,-40,-43,-20,-106,-14,-15,-13,-6,-106,-22,-21,]),'LEFT_BRACKET':([9,30,45,],[24,52,24,]),'COMMA':([9,23,25,37,38,39,41,42,43,45,46,47,48,50,51,54,55,74,75,77,80,84,87,88,89,96,98,100,103,104,106,109,127,128,129,130,131,133,134,135,136,141,142,143,144,145,146,166,167,178,],[-106,-94,-96,-82,-77,-104,-80,-79,-106,-106,-106,-105,-81,-78,-75,-106,-106,125,-76,-68,-73,-64,-67,-95,138,-55,-57,-51,-54,-14,-106,151,-70,-69,-71,-72,-74,-20,-106,-65,-66,-56,-52,-53,-14,-15,-13,-106,-22,-21,]),'OR':([9,23,25,37,38,39,41,42,43,45,46,47,48,50,51,54,55,75,77,80,84,87,88,96,98,104,106,127,128,129,130,131,133,134,135,136,141,144,145,146,166,167,178,],[-106,-94,-96,-82,-77,-104,-80,-79,-106,-106,-106,-105,-81,-78,-75,-106,102,-76,-68,-73,-64,-67,-95,-55,-57,-14,-106,-70,-69,-71,-72,-74,-20,-106,-65,-66,-56,-14,-15,-13,-106,-22,-21,]),'MOD':([9,23,25,37,38,39,41,42,43,45,47,48,50,51,75,88,104,106,131,133,134,144,145,146,166,167,178,],[-106,-94,-96,-82,-77,-104,-80,-79,81,-106,-105,-81,-78,-75,-76,-95,-14,-106,-74,-20,-106,-14,-15,-13,-106,-22,-21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'block':([34,62,123,148,157,159,191,],[69,113,164,169,173,164,195,]),'post_functions':([4,],[14,]),'relational_operator':([54,],[99,]),'call_function':([24,31,34,44,52,58,59,62,67,76,78,79,81,83,85,86,99,101,102,123,138,148,153,157,159,160,176,180,191,],[38,38,56,38,38,38,38,56,38,38,38,38,38,38,38,38,38,38,38,56,38,56,38,56,56,38,38,38,56,]),'BOOL_CONSTANT':([24,31,40,44,52,58,59,67,76,78,79,81,83,85,86,99,101,102,138,153,160,176,180,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'required_eol':([63,64,65,66,70,73,122,175,177,187,192,197,],[114,116,117,118,121,123,159,186,188,193,196,198,]),'post_print':([109,],[150,]),'post_parameters':([74,],[124,]),'cond':([31,44,52,58,59,67,83,101,102,138,160,176,],[53,82,89,108,109,119,89,142,143,89,175,187,]),'loop':([34,62,123,148,157,159,191,],[70,70,70,70,70,70,70,]),'post_function':([36,],[72,]),'post_cycle':([108,172,189,],[149,181,194,]),'post_cond':([55,],[100,]),'functions':([0,4,5,],[1,15,17,]),'call_parameters':([52,83,138,],[90,132,168,]),'post_condition':([173,],[182,]),'for':([34,62,123,148,157,159,191,],[61,61,61,61,61,61,61,]),'post_call_parameters':([89,],[137,]),'post_exp':([46,],[84,]),'post_variables':([8,],[21,]),'read':([34,62,123,148,157,159,191,],[64,64,64,64,64,64,64,]),'program':([0,],[2,]),'statement':([34,62,123,148,157,159,191,],[62,62,62,62,62,62,62,]),'factor':([24,31,44,52,58,59,67,76,78,79,81,83,85,86,99,101,102,138,153,160,176,180,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'print':([34,62,123,148,157,159,191,],[63,63,63,63,63,63,63,]),'main':([0,1,5,17,],[3,13,18,35,]),'empty':([4,8,9,10,43,45,46,54,55,56,62,74,89,106,109,115,120,134,166,173,],[16,22,25,32,80,25,87,98,103,104,111,126,139,144,152,104,104,104,104,184,]),'function':([0,4,5,],[4,4,4,]),'optional_end':([56,106,115,120,134,166,],[105,145,156,158,167,178,]),'post_for':([110,],[154,]),'pre_variables':([0,8,],[5,20,]),'assignment':([0,8,34,62,123,148,157,159,191,],[6,6,6,6,6,6,6,6,6,]),'post_term':([43,],[77,]),'else':([173,],[183,]),'value_return':([123,159,],[162,162,]),'post_identifier':([9,45,],[23,23,]),'void_return':([123,159,],[163,163,]),'post_optional_end':([106,],[146,]),'variable':([0,8,34,62,123,148,157,159,191,],[8,8,65,65,65,65,65,65,65,]),'post_block':([62,],[112,]),'condition':([34,62,123,148,157,159,191,],[66,66,66,66,66,66,66,]),'term':([24,31,44,52,58,59,67,76,78,79,81,83,85,86,99,101,102,138,153,160,176,180,],[46,46,46,46,46,46,46,127,128,129,130,46,46,46,46,46,46,46,46,46,46,46,]),'post_list':([10,],[27,]),'parameters':([36,125,],[71,165,]),'list':([0,8,34,62,123,148,157,159,191,],[11,11,11,11,11,11,11,11,11,]),'func_return':([123,159,],[161,174,]),'while':([34,62,123,148,157,159,191,],[68,68,68,68,68,68,68,]),'post_expression':([54,],[96,]),'assignment_operator':([10,],[31,]),'exp':([24,31,44,52,58,59,67,83,85,86,99,101,102,138,153,160,176,180,],[49,54,54,54,54,54,54,54,135,136,141,54,54,54,171,54,54,189,]),'identifier':([0,8,24,31,34,36,40,44,52,58,59,60,62,67,76,78,79,81,83,85,86,99,101,102,123,125,138,148,153,155,157,159,160,176,180,191,],[10,10,50,50,10,74,50,50,50,50,50,110,10,50,50,50,50,50,50,50,50,50,50,50,10,74,50,10,50,172,10,10,50,50,50,10,]),'expression':([31,44,52,58,59,67,83,101,102,138,160,176,],[55,55,55,55,55,55,55,55,55,55,55,55,]),'post_call_function':([83,],[133,]),'variable_constant':([24,31,40,44,52,58,59,67,76,78,79,81,83,85,86,99,101,102,138,153,160,176,180,],[51,51,75,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> pre_variables functions main','program',3,'p_program','parser.py',19),
  ('program -> functions main','program',2,'p_program','parser.py',20),
  ('program -> pre_variables main','program',2,'p_program','parser.py',21),
  ('program -> main','program',1,'p_program','parser.py',22),
  ('pre_variables -> variable post_variables','pre_variables',2,'p_pre_variables','parser.py',26),
  ('required_eol -> EOL optional_end','required_eol',2,'p_required_eol','parser.py',29),
  ('post_variables -> pre_variables','post_variables',1,'p_post_variables','parser.py',32),
  ('post_variables -> empty','post_variables',1,'p_post_variables','parser.py',33),
  ('functions -> function post_functions','functions',2,'p_functions','parser.py',37),
  ('post_functions -> functions','post_functions',1,'p_post_functions','parser.py',41),
  ('post_functions -> empty','post_functions',1,'p_post_functions','parser.py',42),
  ('main -> MAIN EOL block END_MAIN optional_end','main',5,'p_main','parser.py',46),
  ('optional_end -> EOL post_optional_end','optional_end',2,'p_optional_end','parser.py',49),
  ('optional_end -> empty','optional_end',1,'p_optional_end','parser.py',50),
  ('post_optional_end -> optional_end','post_optional_end',1,'p_post_optional_end','parser.py',53),
  ('post_optional_end -> empty','post_optional_end',1,'p_post_optional_end','parser.py',54),
  ('block -> statement post_block','block',2,'p_block','parser.py',58),
  ('post_block -> block','post_block',1,'p_post_block','parser.py',61),
  ('post_block -> empty','post_block',1,'p_post_block','parser.py',62),
  ('call_function -> ID LEFT_PARENTHESIS post_call_function','call_function',3,'p_call_function','parser.py',66),
  ('post_call_function -> call_parameters RIGHT_PARENTHESIS optional_end','post_call_function',3,'p_post_call_function','parser.py',69),
  ('post_call_function -> RIGHT_PARENTHESIS optional_end','post_call_function',2,'p_post_call_function','parser.py',70),
  ('call_parameters -> cond post_call_parameters','call_parameters',2,'p_call_parameters','parser.py',74),
  ('post_call_parameters -> COMMA call_parameters','post_call_parameters',2,'p_post_call_parameters','parser.py',77),
  ('post_call_parameters -> empty','post_call_parameters',1,'p_post_call_parameters','parser.py',78),
  ('function -> FUNC ID LEFT_PARENTHESIS post_function','function',4,'p_function','parser.py',82),
  ('post_function -> parameters RIGHT_PARENTHESIS required_eol func_return','post_function',4,'p_post_function','parser.py',85),
  ('post_function -> RIGHT_PARENTHESIS required_eol func_return','post_function',3,'p_post_function','parser.py',86),
  ('func_return -> void_return','func_return',1,'p_func_return','parser.py',89),
  ('func_return -> value_return','func_return',1,'p_func_return','parser.py',90),
  ('void_return -> block END required_eol','void_return',3,'p_void_return','parser.py',93),
  ('value_return -> block RETURN cond required_eol END required_eol','value_return',6,'p_value_return','parser.py',96),
  ('value_return -> RETURN cond required_eol END required_eol','value_return',5,'p_value_return','parser.py',97),
  ('parameters -> identifier post_parameters','parameters',2,'p_parameters','parser.py',102),
  ('post_parameters -> COMMA parameters','post_parameters',2,'p_post_parameters','parser.py',105),
  ('post_parameters -> empty','post_parameters',1,'p_post_parameters','parser.py',106),
  ('variable -> assignment','variable',1,'p_variable','parser.py',110),
  ('variable -> list','variable',1,'p_variable','parser.py',111),
  ('statement -> variable required_eol','statement',2,'p_statement','parser.py',115),
  ('statement -> condition required_eol','statement',2,'p_statement','parser.py',116),
  ('statement -> print required_eol','statement',2,'p_statement','parser.py',117),
  ('statement -> read required_eol','statement',2,'p_statement','parser.py',118),
  ('statement -> loop required_eol','statement',2,'p_statement','parser.py',119),
  ('statement -> call_function optional_end','statement',2,'p_statement','parser.py',120),
  ('assignment -> identifier assignment_operator cond','assignment',3,'p_assignment','parser.py',125),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',129),
  ('assignment_operator -> TIMES_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',130),
  ('assignment_operator -> DIVIDE_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',131),
  ('assignment_operator -> PLUS_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',132),
  ('assignment_operator -> MINUS_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',133),
  ('cond -> expression post_cond','cond',2,'p_cond','parser.py',137),
  ('post_cond -> AND cond','post_cond',2,'p_post_cond','parser.py',140),
  ('post_cond -> OR cond','post_cond',2,'p_post_cond','parser.py',141),
  ('post_cond -> empty','post_cond',1,'p_post_cond','parser.py',142),
  ('expression -> exp post_expression','expression',2,'p_expression','parser.py',146),
  ('post_expression -> relational_operator exp','post_expression',2,'p_post_expression','parser.py',149),
  ('post_expression -> empty','post_expression',1,'p_post_expression','parser.py',150),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',154),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',155),
  ('relational_operator -> GREATER_EQUALS','relational_operator',1,'p_relational_operator','parser.py',156),
  ('relational_operator -> LESS_EQUALS','relational_operator',1,'p_relational_operator','parser.py',157),
  ('relational_operator -> EQUALS_EQUALS','relational_operator',1,'p_relational_operator','parser.py',158),
  ('relational_operator -> NOT_EQUALS','relational_operator',1,'p_relational_operator','parser.py',159),
  ('exp -> term post_exp','exp',2,'p_exp','parser.py',163),
  ('post_exp -> PLUS exp','post_exp',2,'p_post_exp','parser.py',166),
  ('post_exp -> MINUS exp','post_exp',2,'p_post_exp','parser.py',167),
  ('post_exp -> empty','post_exp',1,'p_post_exp','parser.py',168),
  ('term -> factor post_term','term',2,'p_term','parser.py',172),
  ('post_term -> TIMES term','post_term',2,'p_post_term','parser.py',175),
  ('post_term -> DIVIDE term','post_term',2,'p_post_term','parser.py',176),
  ('post_term -> PERCENTAGE term','post_term',2,'p_post_term','parser.py',177),
  ('post_term -> MOD term','post_term',2,'p_post_term','parser.py',178),
  ('post_term -> empty','post_term',1,'p_post_term','parser.py',179),
  ('factor -> LEFT_PARENTHESIS cond RIGHT_PARENTHESIS','factor',3,'p_factor','parser.py',183),
  ('factor -> variable_constant','factor',1,'p_factor','parser.py',184),
  ('factor -> MINUS variable_constant','factor',2,'p_factor','parser.py',185),
  ('factor -> call_function','factor',1,'p_factor','parser.py',186),
  ('variable_constant -> identifier','variable_constant',1,'p_variable_constant','parser.py',190),
  ('variable_constant -> INT_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',191),
  ('variable_constant -> DOUBLE_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',192),
  ('variable_constant -> STRING_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',193),
  ('variable_constant -> BOOL_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',194),
  ('condition -> IF cond COLON block post_condition END','condition',6,'p_condition','parser.py',198),
  ('post_condition -> else','post_condition',1,'p_post_condition','parser.py',202),
  ('post_condition -> empty','post_condition',1,'p_post_condition','parser.py',203),
  ('else -> ELSE COLON block','else',3,'p_else','parser.py',207),
  ('print -> PRINT cond post_print','print',3,'p_print','parser.py',211),
  ('post_print -> COMMA STRING_CONSTANT','post_print',2,'p_post_print','parser.py',214),
  ('post_print -> empty','post_print',1,'p_post_print','parser.py',215),
  ('read -> READ LEFT_PARENTHESIS RIGHT_PARENTHESIS','read',3,'p_read','parser.py',219),
  ('list -> identifier post_list','list',2,'p_list','parser.py',223),
  ('post_list -> EQUALS LEFT_BRACKET call_parameters RIGHT_BRACKET','post_list',4,'p_post_list','parser.py',226),
  ('post_list -> empty','post_list',1,'p_post_list','parser.py',227),
  ('identifier -> ID post_identifier','identifier',2,'p_identifier','parser.py',231),
  ('post_identifier -> LEFT_BRACKET exp RIGHT_BRACKET','post_identifier',3,'p_post_identifier','parser.py',234),
  ('post_identifier -> empty','post_identifier',1,'p_post_identifier','parser.py',235),
  ('loop -> for','loop',1,'p_loop','parser.py',239),
  ('loop -> while','loop',1,'p_loop','parser.py',240),
  ('for -> FOR identifier post_for','for',3,'p_for','parser.py',244),
  ('post_for -> IN identifier post_cycle','post_for',3,'p_post_for','parser.py',247),
  ('post_for -> FROM exp TO exp post_cycle','post_for',5,'p_post_for','parser.py',248),
  ('while -> WHILE cond post_cycle','while',3,'p_while','parser.py',252),
  ('post_cycle -> COLON block END','post_cycle',3,'p_post_cycle','parser.py',256),
  ('BOOL_CONSTANT -> TRUE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',259),
  ('BOOL_CONSTANT -> FALSE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',260),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',263),
]
