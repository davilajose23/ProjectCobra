
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'D7D9F4CF15D2947F8F37A986FCE2195F'
    
_lr_action_items = {'LESS':([6,22,24,35,48,49,51,53,54,55,57,58,59,60,61,63,72,73,83,85,88,91,94,108,119,124,125,126,127,128,129,130,],[-2,-78,-80,-2,-61,-56,-90,-59,-58,-2,-2,-91,-60,96,-57,-54,-4,-6,-55,-47,-52,-43,-46,-79,-5,-49,-48,-50,-51,-53,-44,-45,]),'READ':([6,11,22,24,25,30,32,33,34,35,36,39,41,42,44,48,49,51,53,54,55,57,58,59,60,61,62,63,66,72,73,75,82,83,85,88,91,94,100,102,104,107,108,110,112,113,114,116,118,119,121,124,125,126,127,128,129,130,131,132,133,134,136,139,140,141,143,144,145,146,148,149,150,152,153,154,156,157,158,159,160,161,162,],[-2,26,-78,-80,-23,-81,-20,-21,-18,-2,-19,-82,-22,-8,26,-61,-56,-90,-59,-58,-2,-2,-91,-60,-2,-57,-2,-54,-2,-4,-6,26,-24,-55,-47,-52,-43,-46,-34,-36,-30,-33,-79,-71,-73,26,-86,-83,26,-5,-10,-49,-48,-50,-51,-53,-44,-45,-35,-31,-32,-74,26,26,-62,-9,-72,-87,26,-89,-84,-65,-64,-66,-63,-88,26,-85,-67,26,-69,-70,-68,]),'RIGHT_BRACKET':([6,22,24,35,48,49,51,53,54,55,57,58,59,61,63,64,72,73,81,83,85,88,91,94,108,119,124,125,126,127,128,129,130,],[-2,-78,-80,-2,-61,-56,-90,-59,-58,-2,-2,-91,-60,-57,-54,108,-4,-6,123,-55,-47,-52,-43,-46,-79,-5,-49,-48,-50,-51,-53,-44,-45,]),'EOL':([5,6,22,24,35,48,49,50,51,53,54,55,57,58,59,60,61,62,63,72,73,83,85,88,91,94,100,102,104,107,108,109,119,123,124,125,126,127,128,129,130,131,132,133,135,],[19,-2,-78,-80,-2,-61,-56,82,-90,-59,-58,-2,-2,-91,-60,-2,-57,-2,-54,-4,-6,-55,-47,-52,-43,-46,-34,-36,-30,-33,-79,134,-5,142,-49,-48,-50,-51,-53,-44,-45,-35,-31,-32,143,]),'EQUALS_EQUALS':([6,22,24,35,48,49,51,53,54,55,57,58,59,60,61,63,72,73,83,85,88,91,94,108,119,124,125,126,127,128,129,130,],[-2,-78,-80,-2,-61,-56,-90,-59,-58,-2,-2,-91,-60,99,-57,-54,-4,-6,-55,-47,-52,-43,-46,-79,-5,-49,-48,-50,-51,-53,-44,-45,]),'WHILE':([6,11,22,24,25,30,32,33,34,35,36,39,41,42,44,48,49,51,53,54,55,57,58,59,60,61,62,63,66,72,73,75,82,83,85,88,91,94,100,102,104,107,108,110,112,113,114,116,118,119,121,124,125,126,127,128,129,130,131,132,133,134,136,139,140,141,143,144,145,146,148,149,150,152,153,154,156,157,158,159,160,161,162,],[-2,28,-78,-80,-23,-81,-20,-21,-18,-2,-19,-82,-22,-8,28,-61,-56,-90,-59,-58,-2,-2,-91,-60,-2,-57,-2,-54,-2,-4,-6,28,-24,-55,-47,-52,-43,-46,-34,-36,-30,-33,-79,-71,-73,28,-86,-83,28,-5,-10,-49,-48,-50,-51,-53,-44,-45,-35,-31,-32,-74,28,28,-62,-9,-72,-87,28,-89,-84,-65,-64,-66,-63,-88,28,-85,-67,28,-69,-70,-68,]),'PRINT':([6,11,22,24,25,30,32,33,34,35,36,39,41,42,44,48,49,51,53,54,55,57,58,59,60,61,62,63,66,72,73,75,82,83,85,88,91,94,100,102,104,107,108,110,112,113,114,116,118,119,121,124,125,126,127,128,129,130,131,132,133,134,136,139,140,141,143,144,145,146,148,149,150,152,153,154,156,157,158,159,160,161,162,],[-2,27,-78,-80,-23,-81,-20,-21,-18,-2,-19,-82,-22,-8,27,-61,-56,-90,-59,-58,-2,-2,-91,-60,-2,-57,-2,-54,-2,-4,-6,27,-24,-55,-47,-52,-43,-46,-34,-36,-30,-33,-79,-71,-73,27,-86,-83,27,-5,-10,-49,-48,-50,-51,-53,-44,-45,-35,-31,-32,-74,27,27,-62,-9,-72,-87,27,-89,-84,-65,-64,-66,-63,-88,27,-85,-67,27,-69,-70,-68,]),'GREATER_EQUALS':([6,22,24,35,48,49,51,53,54,55,57,58,59,60,61,63,72,73,83,85,88,91,94,108,119,124,125,126,127,128,129,130,],[-2,-78,-80,-2,-61,-56,-90,-59,-58,-2,-2,-91,-60,101,-57,-54,-4,-6,-55,-47,-52,-43,-46,-79,-5,-49,-48,-50,-51,-53,-44,-45,]),'MINUS':([6,14,16,17,18,20,21,22,23,24,27,28,35,37,47,48,49,51,53,54,55,56,57,58,59,61,63,72,73,74,83,84,85,86,87,88,89,92,93,95,96,97,98,99,101,103,105,106,108,115,119,124,125,126,127,128,147,],[-2,-29,-26,-27,-25,52,-28,-78,52,-80,52,52,-2,52,52,-61,-56,-90,-59,-58,-2,52,93,-91,-60,-57,-54,-4,-6,-25,-55,52,-47,52,52,-52,52,52,52,-38,-37,-42,-40,-41,-39,52,52,52,-79,52,-5,-49,-48,-50,-51,-53,52,]),'MINUS_EQUALS':([5,6,22,24,35,40,108,],[14,-2,-78,-80,-2,14,-79,]),'TIMES_EQUALS':([5,6,22,24,35,40,108,],[16,-2,-78,-80,-2,16,-79,]),'NOT_EQUALS':([6,22,24,35,48,49,51,53,54,55,57,58,59,60,61,63,72,73,83,85,88,91,94,108,119,124,125,126,127,128,129,130,],[-2,-78,-80,-2,-61,-56,-90,-59,-58,-2,-2,-91,-60,97,-57,-54,-4,-6,-55,-47,-52,-43,-46,-79,-5,-49,-48,-50,-51,-53,-44,-45,]),'DOUBLE_CONSTANT':([14,16,17,18,20,21,23,27,28,37,47,52,56,74,84,86,87,89,92,93,95,96,97,98,99,101,103,105,106,115,147,],[-29,-26,-27,-25,53,-28,53,53,53,53,53,53,53,-25,53,53,53,53,53,53,-38,-37,-42,-40,-41,-39,53,53,53,53,53,]),'LESS_EQUALS':([6,22,24,35,48,49,51,53,54,55,57,58,59,60,61,63,72,73,83,85,88,91,94,108,119,124,125,126,127,128,129,130,],[-2,-78,-80,-2,-61,-56,-90,-59,-58,-2,-2,-91,-60,98,-57,-54,-4,-6,-55,-47,-52,-43,-46,-79,-5,-49,-48,-50,-51,-53,-44,-45,]),'PLUS':([6,22,24,35,48,49,51,53,54,55,57,58,59,61,63,72,73,83,85,88,108,119,124,125,126,127,128,],[-2,-78,-80,-2,-61,-56,-90,-59,-58,-2,92,-91,-60,-57,-54,-4,-6,-55,-47,-52,-79,-5,-49,-48,-50,-51,-53,]),'TO':([6,22,24,35,48,49,51,53,54,55,57,58,59,61,63,72,73,83,85,88,91,94,108,119,124,125,126,127,128,129,130,137,],[-2,-78,-80,-2,-61,-56,-90,-59,-58,-2,-2,-91,-60,-57,-54,-4,-6,-55,-47,-52,-43,-46,-79,-5,-49,-48,-50,-51,-53,-44,-45,147,]),'INT_CONSTANT':([14,16,17,18,20,21,23,27,28,37,47,52,56,74,84,86,87,89,92,93,95,96,97,98,99,101,103,105,106,115,147,],[-29,-26,-27,-25,54,-28,54,54,54,54,54,54,54,-25,54,54,54,54,54,54,-38,-37,-42,-40,-41,-39,54,54,54,54,54,]),'COLON':([6,22,24,35,48,49,51,53,54,55,57,58,59,60,61,62,63,67,70,72,73,83,85,88,91,94,100,102,104,107,108,119,124,125,126,127,128,129,130,131,132,133,138,151,155,],[-2,-78,-80,-2,-61,-56,-90,-59,-58,-2,-2,-91,-60,-2,-57,-2,-54,113,118,-4,-6,-55,-47,-52,-43,-46,-34,-36,-30,-33,-79,-5,-49,-48,-50,-51,-53,-44,-45,-35,-31,-32,113,156,113,]),'COMMA':([6,22,24,35,45,48,49,51,53,54,55,57,58,59,60,61,62,63,66,72,73,83,85,88,91,94,100,102,104,107,108,119,124,125,126,127,128,129,130,131,132,133,],[-2,-78,-80,-2,78,-61,-56,-90,-59,-58,-2,-2,-91,-60,-2,-57,-2,-54,111,-4,-6,-55,-47,-52,-43,-46,-34,-36,-30,-33,-79,-5,-49,-48,-50,-51,-53,-44,-45,-35,-31,-32,]),'PERCENTAGE':([6,22,24,35,48,49,51,53,54,55,58,59,61,63,72,73,83,108,119,128,],[-2,-78,-80,-2,-61,-56,-90,-59,-58,87,-91,-60,-57,-54,-4,-6,-55,-79,-5,-53,]),'IF':([6,11,22,24,25,30,32,33,34,35,36,39,41,42,44,48,49,51,53,54,55,57,58,59,60,61,62,63,66,72,73,75,82,83,85,88,91,94,100,102,104,107,108,110,112,113,114,116,118,119,121,124,125,126,127,128,129,130,131,132,133,134,136,139,140,141,143,144,145,146,148,149,150,152,153,154,156,157,158,159,160,161,162,],[-2,37,-78,-80,-23,-81,-20,-21,-18,-2,-19,-82,-22,-8,37,-61,-56,-90,-59,-58,-2,-2,-91,-60,-2,-57,-2,-54,-2,-4,-6,37,-24,-55,-47,-52,-43,-46,-34,-36,-30,-33,-79,-71,-73,37,-86,-83,37,-5,-10,-49,-48,-50,-51,-53,-44,-45,-35,-31,-32,-74,37,37,-62,-9,-72,-87,37,-89,-84,-65,-64,-66,-63,-88,37,-85,-67,37,-69,-70,-68,]),'LEFT_PARENTHESIS':([14,16,17,18,20,21,23,26,27,28,35,37,46,47,56,74,84,86,87,89,92,93,95,96,97,98,99,101,103,105,106,115,147,],[-29,-26,-27,-25,56,-28,56,65,56,56,69,56,80,56,56,-25,56,56,56,56,56,56,-38,-37,-42,-40,-41,-39,56,56,56,56,56,]),'$end':([3,6,22,24,25,30,31,32,33,34,35,36,39,41,48,49,51,53,54,55,57,58,59,60,61,62,63,66,72,73,82,83,85,88,91,94,100,102,104,107,108,110,112,114,116,119,124,125,126,127,128,129,130,131,132,133,134,140,143,144,146,148,149,150,152,153,154,157,158,160,161,162,],[0,-2,-78,-80,-23,-81,-1,-20,-21,-18,-2,-19,-82,-22,-61,-56,-90,-59,-58,-2,-2,-91,-60,-2,-57,-2,-54,-2,-4,-6,-24,-55,-47,-52,-43,-46,-34,-36,-30,-33,-79,-71,-73,-86,-83,-5,-49,-48,-50,-51,-53,-44,-45,-35,-31,-32,-74,-62,-72,-87,-89,-84,-65,-64,-66,-63,-88,-85,-67,-69,-70,-68,]),'END':([6,22,24,25,30,32,33,34,35,36,39,41,48,49,51,53,54,55,57,58,59,60,61,62,63,66,72,73,76,82,83,85,88,91,94,100,102,104,107,108,110,112,114,116,119,120,124,125,126,127,128,129,130,131,132,133,134,136,139,140,143,144,145,146,148,149,150,152,153,154,157,158,159,160,161,162,],[-2,-78,-80,-23,-81,-20,-21,-18,-2,-19,-82,-22,-61,-56,-90,-59,-58,-2,-2,-91,-60,-2,-57,-2,-54,-2,-4,-6,121,-24,-55,-47,-52,-43,-46,-34,-36,-30,-33,-79,-71,-73,-86,-83,-5,141,-49,-48,-50,-51,-53,-44,-45,-35,-31,-32,-74,146,149,-62,-72,-87,146,-89,-84,-65,-64,-66,-63,-88,-85,-67,161,-69,-70,-68,]),'DIVIDE':([6,22,24,35,48,49,51,53,54,55,58,59,61,63,72,73,83,108,119,128,],[-2,-78,-80,-2,-61,-56,-90,-59,-58,84,-91,-60,-57,-54,-4,-6,-55,-79,-5,-53,]),'FOR':([6,11,22,24,25,30,32,33,34,35,36,39,41,42,44,48,49,51,53,54,55,57,58,59,60,61,62,63,66,72,73,75,82,83,85,88,91,94,100,102,104,107,108,110,112,113,114,116,118,119,121,124,125,126,127,128,129,130,131,132,133,134,136,139,140,141,143,144,145,146,148,149,150,152,153,154,156,157,158,159,160,161,162,],[-2,29,-78,-80,-23,-81,-20,-21,-18,-2,-19,-82,-22,-8,29,-61,-56,-90,-59,-58,-2,-2,-91,-60,-2,-57,-2,-54,-2,-4,-6,29,-24,-55,-47,-52,-43,-46,-34,-36,-30,-33,-79,-71,-73,29,-86,-83,29,-5,-10,-49,-48,-50,-51,-53,-44,-45,-35,-31,-32,-74,29,29,-62,-9,-72,-87,29,-89,-84,-65,-64,-66,-63,-88,29,-85,-67,29,-69,-70,-68,]),'EQUALS':([5,6,22,24,35,40,108,],[18,-2,-78,-80,-2,74,-79,]),'TIMES':([6,22,24,35,48,49,51,53,54,55,58,59,61,63,72,73,83,108,119,128,],[-2,-78,-80,-2,-61,-56,-90,-59,-58,86,-91,-60,-57,-54,-4,-6,-55,-79,-5,-53,]),'FUNC':([1,2,4,7,8,9,10,15,19,82,142,],[-2,-2,13,-16,-14,-17,-15,-75,-77,-24,-76,]),'IN':([6,22,24,68,108,],[-2,-78,-80,117,-79,]),'FALSE':([14,16,17,18,20,21,23,27,28,37,47,52,56,74,84,86,87,89,92,93,95,96,97,98,99,101,103,105,106,115,147,],[-29,-26,-27,-25,58,-28,58,58,58,58,58,58,58,-25,58,58,58,58,58,58,-38,-37,-42,-40,-41,-39,58,58,58,58,58,]),'RIGHT_PARENTHESIS':([6,12,22,24,35,38,43,45,48,49,51,53,54,55,57,58,59,60,61,62,63,65,69,71,72,73,77,79,80,83,85,88,90,91,94,100,102,104,107,108,119,122,124,125,126,127,128,129,130,131,132,133,],[-2,44,-78,-80,-2,73,75,-2,-61,-56,-90,-59,-58,-2,-2,-91,-60,-2,-57,-2,-54,109,-3,119,-4,-6,-11,-13,-7,-55,-47,-52,128,-43,-46,-34,-36,-30,-33,-79,-5,-12,-49,-48,-50,-51,-53,-44,-45,-35,-31,-32,]),'ELSE':([6,22,24,25,30,32,33,34,35,36,39,41,48,49,51,53,54,55,57,58,59,60,61,62,63,66,72,73,82,83,85,88,91,94,100,102,104,107,108,110,112,114,116,119,124,125,126,127,128,129,130,131,132,133,134,139,140,143,144,146,148,149,150,152,153,154,157,158,160,161,162,],[-2,-78,-80,-23,-81,-20,-21,-18,-2,-19,-82,-22,-61,-56,-90,-59,-58,-2,-2,-91,-60,-2,-57,-2,-54,-2,-4,-6,-24,-55,-47,-52,-43,-46,-34,-36,-30,-33,-79,-71,-73,-86,-83,-5,-49,-48,-50,-51,-53,-44,-45,-35,-31,-32,-74,151,-62,-72,-87,-89,-84,-65,-64,-66,-63,-88,-85,-67,-69,-70,-68,]),'ID':([0,1,2,6,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,32,33,34,35,36,37,38,39,41,42,44,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,66,69,72,73,74,75,78,80,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,112,113,114,115,116,117,118,119,121,124,125,126,127,128,129,130,131,132,133,134,136,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,156,157,158,159,160,161,162,],[6,6,6,-2,35,6,46,-29,-75,-26,-27,-25,-77,35,-28,-78,35,-80,-23,35,35,6,-81,-20,-21,-18,-2,-19,35,6,-82,-22,-8,35,35,-61,-56,-90,6,-59,-58,-2,35,-2,-91,-60,-2,-57,-2,-54,-2,-3,-4,-6,-25,35,6,-7,-24,-55,35,-47,35,35,-52,35,-43,35,35,-46,-38,-37,-42,-40,-41,-34,-39,-36,35,-30,35,35,-33,-79,-71,-73,35,-86,35,-83,6,35,-5,-10,-49,-48,-50,-51,-53,-44,-45,-35,-31,-32,-74,35,35,-62,-9,-76,-72,-87,35,-89,35,-84,-65,-64,-66,-63,-88,35,-85,-67,35,-69,-70,-68,]),'TRUE':([14,16,17,18,20,21,23,27,28,37,47,52,56,74,84,86,87,89,92,93,95,96,97,98,99,101,103,105,106,115,147,],[-29,-26,-27,-25,51,-28,51,51,51,51,51,51,51,-25,51,51,51,51,51,51,-38,-37,-42,-40,-41,-39,51,51,51,51,51,]),'PLUS_EQUALS':([5,6,22,24,35,40,108,],[21,-2,-78,-80,-2,21,-79,]),'AND':([6,22,24,35,48,49,51,53,54,55,57,58,59,60,61,62,63,72,73,83,85,88,91,94,100,102,108,119,124,125,126,127,128,129,130,131,],[-2,-78,-80,-2,-61,-56,-90,-59,-58,-2,-2,-91,-60,-2,-57,105,-54,-4,-6,-55,-47,-52,-43,-46,-34,-36,-79,-5,-49,-48,-50,-51,-53,-44,-45,-35,]),'FROM':([6,22,24,68,108,],[-2,-78,-80,115,-79,]),'GREATER':([6,22,24,35,48,49,51,53,54,55,57,58,59,60,61,63,72,73,83,85,88,91,94,108,119,124,125,126,127,128,129,130,],[-2,-78,-80,-2,-61,-56,-90,-59,-58,-2,-2,-91,-60,95,-57,-54,-4,-6,-55,-47,-52,-43,-46,-79,-5,-49,-48,-50,-51,-53,-44,-45,]),'DIVIDE_EQUALS':([5,6,22,24,35,40,108,],[17,-2,-78,-80,-2,17,-79,]),'STRING_CONSTANT':([14,16,17,18,20,21,23,27,28,37,47,52,56,74,84,86,87,89,92,93,95,96,97,98,99,101,103,105,106,111,115,147,],[-29,-26,-27,-25,59,-28,59,59,59,59,59,59,59,-25,59,59,59,59,59,59,-38,-37,-42,-40,-41,-39,59,59,59,135,59,59,]),'LEFT_BRACKET':([6,18,35,],[23,47,23,]),'OR':([6,22,24,35,48,49,51,53,54,55,57,58,59,60,61,62,63,72,73,83,85,88,91,94,100,102,108,119,124,125,126,127,128,129,130,131,],[-2,-78,-80,-2,-61,-56,-90,-59,-58,-2,-2,-91,-60,-2,-57,106,-54,-4,-6,-55,-47,-52,-43,-46,-34,-36,-79,-5,-49,-48,-50,-51,-53,-44,-45,-35,]),'MOD':([6,22,24,35,48,49,51,53,54,55,58,59,61,63,72,73,83,108,119,128,],[-2,-78,-80,-2,-61,-56,-90,-59,-58,89,-91,-60,-57,-54,-4,-6,-55,-79,-5,-53,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'BOOL_CONSTANT':([20,23,27,28,37,47,52,56,84,86,87,89,92,93,103,105,106,115,147,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'relational_operator':([60,],[103,]),'call_function':([11,20,23,27,28,37,44,47,56,75,84,86,87,89,92,93,103,105,106,113,115,118,136,139,145,147,156,159,],[25,49,49,49,49,49,25,49,49,25,49,49,49,49,49,49,49,49,49,25,49,25,25,25,25,49,25,25,]),'post_else':([156,159,],[158,160,]),'post_parameters':([45,],[77,]),'cond':([20,27,28,37,56,105,106,],[50,66,67,70,90,132,133,]),'post_print':([66,],[110,]),'post_cycle':([67,138,155,],[114,148,157,]),'post_cond':([62,],[104,]),'post_post_cycle':([136,145,],[144,154,]),'post_condition':([118,139,],[140,150,]),'for':([11,44,75,113,118,136,139,145,156,159,],[30,30,30,30,30,30,30,30,30,30,]),'post_call_function':([38,],[72,]),'pre_def_function':([4,],[12,]),'program':([0,],[3,]),'statement':([11,44,75,113,118,136,139,145,156,159,],[31,76,120,136,139,145,139,145,159,159,]),'factor':([20,23,27,28,37,47,56,84,86,87,89,92,93,103,105,106,115,147,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'print':([11,44,75,113,118,136,139,145,156,159,],[32,32,32,32,32,32,32,32,32,32,]),'post_variable':([1,2,],[8,10,]),'empty':([1,2,6,35,45,55,57,60,62,66,],[9,9,24,24,79,88,94,102,107,112,]),'function':([4,],[11,]),'post_post_condition':([139,],[153,]),'post_for':([68,],[116,]),'read':([11,44,75,113,118,136,139,145,156,159,],[33,33,33,33,33,33,33,33,33,33,]),'assignment':([0,1,2,11,44,75,113,118,136,139,145,156,159,],[1,1,1,34,34,34,34,34,34,34,34,34,34,]),'post_term':([55,],[85,]),'else':([139,],[152,]),'post_identifier':([6,35,],[22,22,]),'variable':([0,1,2,],[4,7,7,]),'variable_constant':([20,23,27,28,37,47,52,56,84,86,87,89,92,93,103,105,106,115,147,],[63,63,63,63,63,63,83,63,63,63,63,63,63,63,63,63,63,63,63,]),'post_post_else':([159,],[162,]),'condition':([11,44,75,113,118,136,139,145,156,159,],[36,36,36,36,36,36,36,36,36,36,]),'post_def_function':([12,],[42,]),'term':([20,23,27,28,37,47,56,84,86,87,89,92,93,103,105,106,115,147,],[57,57,57,57,57,57,57,124,125,126,127,57,57,57,57,57,57,57,]),'post_list':([5,],[15,]),'parameters':([12,38,78,],[43,71,122,]),'pre_call_function':([11,20,23,27,28,37,44,47,56,75,84,86,87,89,92,93,103,105,106,113,115,118,136,139,145,147,156,159,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'list':([0,1,2,],[2,2,2,]),'while':([11,44,75,113,118,136,139,145,156,159,],[39,39,39,39,39,39,39,39,39,39,]),'post_expression':([60,],[100,]),'assignment_operator':([5,40,],[20,20,]),'exp':([20,23,27,28,37,47,56,92,93,103,105,106,115,147,],[60,64,60,60,60,81,60,129,130,131,60,60,137,155,]),'identifier':([0,1,2,11,12,20,23,27,28,29,37,38,44,47,52,56,75,78,84,86,87,89,92,93,103,105,106,113,115,117,118,136,139,145,147,156,159,],[5,5,5,40,45,61,61,61,61,68,61,45,40,61,61,61,40,45,61,61,61,61,61,61,61,61,61,40,61,138,40,40,40,40,61,40,40,]),'expression':([20,27,28,37,56,105,106,],[62,62,62,62,62,62,62,]),'post_exp':([57,],[91,]),'loop':([11,44,75,113,118,136,139,145,156,159,],[41,41,41,41,41,41,41,41,41,41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> variable function statement','program',3,'p_program','parser.py',18),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',21),
  ('pre_call_function -> ID LEFT_PARENTHESIS','pre_call_function',2,'p_pre_call_function','parser.py',25),
  ('call_function -> pre_call_function post_call_function','call_function',2,'p_call_function','parser.py',28),
  ('post_call_function -> parameters RIGHT_PARENTHESIS','post_call_function',2,'p_post_call_function','parser.py',31),
  ('post_call_function -> RIGHT_PARENTHESIS','post_call_function',1,'p_post_call_function','parser.py',32),
  ('pre_def_function -> FUNC ID LEFT_PARENTHESIS','pre_def_function',3,'p_pre_def_function','parser.py',35),
  ('function -> pre_def_function post_def_function','function',2,'p_function','parser.py',38),
  ('post_def_function -> parameters RIGHT_PARENTHESIS statement END','post_def_function',4,'p_post_def_function','parser.py',41),
  ('post_def_function -> RIGHT_PARENTHESIS statement END','post_def_function',3,'p_post_def_function','parser.py',42),
  ('parameters -> identifier post_parameters','parameters',2,'p_parameters','parser.py',45),
  ('post_parameters -> COMMA parameters','post_parameters',2,'p_post_parameters','parser.py',48),
  ('post_parameters -> empty','post_parameters',1,'p_post_parameters','parser.py',49),
  ('variable -> assignment post_variable','variable',2,'p_variable','parser.py',52),
  ('variable -> list post_variable','variable',2,'p_variable','parser.py',53),
  ('post_variable -> variable','post_variable',1,'p_post_variable','parser.py',56),
  ('post_variable -> empty','post_variable',1,'p_post_variable','parser.py',57),
  ('statement -> assignment','statement',1,'p_statement','parser.py',60),
  ('statement -> condition','statement',1,'p_statement','parser.py',61),
  ('statement -> print','statement',1,'p_statement','parser.py',62),
  ('statement -> read','statement',1,'p_statement','parser.py',63),
  ('statement -> loop','statement',1,'p_statement','parser.py',64),
  ('statement -> call_function','statement',1,'p_statement','parser.py',65),
  ('assignment -> identifier assignment_operator cond EOL','assignment',4,'p_assignment','parser.py',67),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',70),
  ('assignment_operator -> TIMES_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',71),
  ('assignment_operator -> DIVIDE_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',72),
  ('assignment_operator -> PLUS_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',73),
  ('assignment_operator -> MINUS_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',74),
  ('cond -> expression post_cond','cond',2,'p_cond','parser.py',77),
  ('post_cond -> AND cond','post_cond',2,'p_post_cond','parser.py',80),
  ('post_cond -> OR cond','post_cond',2,'p_post_cond','parser.py',81),
  ('post_cond -> empty','post_cond',1,'p_post_cond','parser.py',82),
  ('expression -> exp post_expression','expression',2,'p_expression','parser.py',85),
  ('post_expression -> relational_operator exp','post_expression',2,'p_post_expression','parser.py',88),
  ('post_expression -> empty','post_expression',1,'p_post_expression','parser.py',89),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',92),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',93),
  ('relational_operator -> GREATER_EQUALS','relational_operator',1,'p_relational_operator','parser.py',94),
  ('relational_operator -> LESS_EQUALS','relational_operator',1,'p_relational_operator','parser.py',95),
  ('relational_operator -> EQUALS_EQUALS','relational_operator',1,'p_relational_operator','parser.py',96),
  ('relational_operator -> NOT_EQUALS','relational_operator',1,'p_relational_operator','parser.py',97),
  ('exp -> term post_exp','exp',2,'p_exp','parser.py',100),
  ('post_exp -> PLUS exp','post_exp',2,'p_post_exp','parser.py',103),
  ('post_exp -> MINUS exp','post_exp',2,'p_post_exp','parser.py',104),
  ('post_exp -> empty','post_exp',1,'p_post_exp','parser.py',105),
  ('term -> factor post_term','term',2,'p_term','parser.py',108),
  ('post_term -> TIMES term','post_term',2,'p_post_term','parser.py',111),
  ('post_term -> DIVIDE term','post_term',2,'p_post_term','parser.py',112),
  ('post_term -> PERCENTAGE term','post_term',2,'p_post_term','parser.py',113),
  ('post_term -> MOD term','post_term',2,'p_post_term','parser.py',114),
  ('post_term -> empty','post_term',1,'p_post_term','parser.py',115),
  ('factor -> LEFT_PARENTHESIS cond RIGHT_PARENTHESIS','factor',3,'p_factor','parser.py',118),
  ('factor -> variable_constant','factor',1,'p_factor','parser.py',119),
  ('factor -> MINUS variable_constant','factor',2,'p_factor','parser.py',120),
  ('factor -> call_function','factor',1,'p_factor','parser.py',121),
  ('variable_constant -> identifier','variable_constant',1,'p_variable_constant','parser.py',124),
  ('variable_constant -> INT_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',125),
  ('variable_constant -> DOUBLE_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',126),
  ('variable_constant -> STRING_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',127),
  ('variable_constant -> BOOL_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',128),
  ('condition -> IF cond COLON post_condition','condition',4,'p_condition','parser.py',132),
  ('post_condition -> statement post_post_condition','post_condition',2,'p_post_condition','parser.py',135),
  ('post_post_condition -> post_condition','post_post_condition',1,'p_post_post_condition','parser.py',138),
  ('post_post_condition -> END','post_post_condition',1,'p_post_post_condition','parser.py',139),
  ('post_post_condition -> else','post_post_condition',1,'p_post_post_condition','parser.py',140),
  ('else -> ELSE COLON post_else','else',3,'p_else','parser.py',144),
  ('post_else -> statement post_post_else','post_else',2,'p_post_else','parser.py',147),
  ('post_post_else -> post_else','post_post_else',1,'p_post_post_else','parser.py',150),
  ('post_post_else -> END','post_post_else',1,'p_post_post_else','parser.py',151),
  ('print -> PRINT cond post_print','print',3,'p_print','parser.py',154),
  ('post_print -> COMMA STRING_CONSTANT EOL','post_print',3,'p_post_print','parser.py',157),
  ('post_print -> empty','post_print',1,'p_post_print','parser.py',158),
  ('read -> READ LEFT_PARENTHESIS RIGHT_PARENTHESIS EOL','read',4,'p_read','parser.py',161),
  ('list -> identifier post_list','list',2,'p_list','parser.py',164),
  ('post_list -> EQUALS LEFT_BRACKET exp RIGHT_BRACKET EOL','post_list',5,'p_post_list','parser.py',167),
  ('post_list -> EOL','post_list',1,'p_post_list','parser.py',168),
  ('identifier -> ID post_identifier','identifier',2,'p_identifier','parser.py',171),
  ('post_identifier -> LEFT_BRACKET exp RIGHT_BRACKET','post_identifier',3,'p_post_identifier','parser.py',174),
  ('post_identifier -> empty','post_identifier',1,'p_post_identifier','parser.py',175),
  ('loop -> for','loop',1,'p_loop','parser.py',178),
  ('loop -> while','loop',1,'p_loop','parser.py',179),
  ('for -> FOR identifier post_for','for',3,'p_for','parser.py',183),
  ('post_for -> IN identifier post_cycle','post_for',3,'p_post_for','parser.py',186),
  ('post_for -> FROM exp TO exp post_cycle','post_for',5,'p_post_for','parser.py',187),
  ('while -> WHILE cond post_cycle','while',3,'p_while','parser.py',191),
  ('post_cycle -> COLON statement post_post_cycle','post_cycle',3,'p_post_cycle','parser.py',195),
  ('post_post_cycle -> statement post_post_cycle','post_post_cycle',2,'p_post_post_cycle','parser.py',198),
  ('post_post_cycle -> END','post_post_cycle',1,'p_post_post_cycle','parser.py',199),
  ('BOOL_CONSTANT -> TRUE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',202),
  ('BOOL_CONSTANT -> FALSE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',203),
]
