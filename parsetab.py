
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'A1FA89309CB853A4942D3A2EFE582A09'
    
_lr_action_items = {'RETURN':([8,24,25,26,32,38,39,40,41,53,63,69,88,89,90,91,92,93,96,100,125,164,165,202,203,],[-142,-6,-5,-7,-142,-8,-10,-9,-71,-142,-15,-58,-56,-27,-25,-26,-55,-53,-54,-57,-142,198,-142,227,198,]),'LESS':([71,72,74,76,77,78,80,81,82,83,84,86,110,111,112,113,115,116,129,131,133,136,141,142,159,161,172,194,205,206,207,208,209,210,211,212,],[-114,-107,-140,-115,-111,-97,-112,-91,-141,-113,-80,-105,-115,-106,-142,-142,-142,144,-110,-63,-96,-102,-90,-94,-28,-31,-109,-30,-62,-99,-98,-100,-101,-104,-93,-92,]),'READ':([8,24,25,26,32,37,38,39,40,41,53,63,69,88,92,93,96,100,121,125,162,164,165,195,196,203,224,258,263,268,],[-142,-6,-5,-7,-142,48,-8,-10,-9,-71,48,-15,-58,-56,-55,-53,-54,-57,-117,-142,-142,48,-142,48,-142,48,48,-122,-142,48,]),'VOID':([7,],[21,]),'RIGHT_BRACKET':([71,72,74,76,77,78,80,81,82,83,86,101,110,111,112,113,115,129,131,133,136,141,142,159,161,167,172,194,205,206,207,208,209,210,211,212,],[-114,-107,-140,-115,-111,-97,-112,-91,-141,-113,-105,124,-115,-106,-142,-142,-142,-110,-63,-96,-102,-90,-94,-28,-31,205,-109,-30,-62,-99,-98,-100,-101,-104,-93,-92,]),'EOL':([9,27,32,33,34,35,42,44,45,47,51,52,54,55,57,60,62,64,66,67,71,72,73,74,76,77,78,80,81,82,83,84,85,86,99,102,106,107,109,110,111,112,113,115,116,117,121,124,126,128,129,131,133,136,141,142,149,150,152,155,159,161,162,172,175,194,196,197,205,206,207,208,209,210,211,212,213,214,221,225,226,227,229,233,236,239,240,249,250,251,257,258,259,260,261,262,263,266,267,],[-24,32,32,32,-115,-142,-142,-19,-17,32,-131,32,32,32,32,-132,32,-128,-130,-18,-114,-107,-142,-140,-115,-111,-97,-112,-91,-141,-113,-80,-74,-105,32,32,-127,-123,-125,-115,-106,-142,-142,-142,-142,-142,-117,-129,32,-124,-110,-63,-96,-102,-90,-94,-79,-82,-73,-77,-28,-31,32,-109,-81,-30,32,-118,-62,-99,-98,-100,-101,-104,-93,-92,-75,-76,-70,-138,32,32,-48,-59,-136,32,32,-139,-48,-48,-116,-122,32,32,-48,-138,32,32,-133,]),'EQUALS_EQUALS':([71,72,74,76,77,78,80,81,82,83,84,86,110,111,112,113,115,116,129,131,133,136,141,142,159,161,172,194,205,206,207,208,209,210,211,212,],[-114,-107,-140,-115,-111,-97,-112,-91,-141,-113,-80,-105,-115,-106,-142,-142,-142,148,-110,-63,-96,-102,-90,-94,-28,-31,-109,-30,-62,-99,-98,-100,-101,-104,-93,-92,]),'WHILE':([8,24,25,26,32,37,38,39,40,41,53,63,69,88,92,93,96,100,121,125,162,164,165,195,196,203,224,258,263,268,],[-142,-6,-5,-7,-142,59,-8,-10,-9,-71,59,-15,-58,-56,-55,-53,-54,-57,-117,-142,-142,59,-142,59,-142,59,59,-122,-142,59,]),'PRINT':([8,24,25,26,32,37,38,39,40,41,53,63,69,88,92,93,96,100,121,125,162,164,165,195,196,203,224,258,263,268,],[-142,-6,-5,-7,-142,49,-8,-10,-9,-71,49,-15,-58,-56,-55,-53,-54,-57,-117,-142,-142,49,-142,49,-142,49,49,-122,-142,49,]),'TRUE':([49,58,59,65,75,79,98,114,120,130,132,134,135,137,139,140,143,144,145,146,147,148,151,153,154,156,168,169,170,171,173,174,176,177,178,179,180,181,182,183,185,186,187,188,189,190,192,198,216,217,218,219,220,227,232,],[74,74,-137,74,74,-108,74,74,74,74,-103,-103,-103,-103,-95,-95,74,-83,-83,-83,-83,-83,-83,-78,-78,74,74,74,74,74,74,74,-84,-86,-89,-87,-88,-85,74,74,-69,-69,-69,-69,-69,74,74,74,-68,-67,-65,-66,-64,74,74,]),'MINUS':([49,58,59,65,71,72,74,76,77,78,79,80,81,82,83,86,98,110,111,112,113,114,115,120,129,130,131,132,133,134,135,136,137,139,140,143,144,145,146,147,148,151,153,154,156,159,161,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,185,186,187,188,189,190,192,194,198,205,206,207,208,209,210,216,217,218,219,220,227,232,],[75,75,-137,75,-114,-107,-140,-115,-111,-97,-108,-112,-91,-141,-113,-105,75,-115,-106,-142,-142,75,139,75,-110,75,-63,-103,-96,-103,-103,-102,-103,-95,-95,75,-83,-83,-83,-83,-83,-83,-78,-78,75,-28,-31,75,75,75,75,-109,75,75,-84,-86,-89,-87,-88,-85,75,75,-69,-69,-69,-69,-69,75,75,-30,75,-62,-99,-98,-100,-101,-104,-68,-67,-65,-66,-64,75,75,]),'DIVIDE':([71,72,74,76,77,78,80,82,83,86,110,111,112,113,129,131,159,161,172,194,205,210,],[-114,-107,-140,-115,-111,-97,-112,-141,-113,-105,-115,-106,-142,132,-110,-63,-28,-31,-109,-30,-62,-104,]),'MINUS_EQUALS':([56,94,119,131,157,205,],[-60,-61,-142,-63,185,-62,]),'END_MAIN':([32,38,39,40,53,61,69,88,89,90,91,92,93,96,100,],[-142,-8,-10,-9,-142,99,-58,-56,-27,-25,-26,-55,-53,-54,-57,]),'NOT_EQUALS':([71,72,74,76,77,78,80,81,82,83,84,86,110,111,112,113,115,116,129,131,133,136,141,142,159,161,172,194,205,206,207,208,209,210,211,212,],[-114,-107,-140,-115,-111,-97,-112,-91,-141,-113,-80,-105,-115,-106,-142,-142,-142,146,-110,-63,-96,-102,-90,-94,-28,-31,-109,-30,-62,-99,-98,-100,-101,-104,-93,-92,]),'DOUBLE_CONSTANT':([49,58,59,65,75,79,98,114,120,130,132,134,135,137,139,140,143,144,145,146,147,148,151,153,154,156,168,169,170,171,173,174,176,177,178,179,180,181,182,183,185,186,187,188,189,190,192,198,216,217,218,219,220,227,232,],[80,80,-137,80,80,-108,80,80,80,80,-103,-103,-103,-103,-95,-95,80,-83,-83,-83,-83,-83,-83,-78,-78,80,80,80,80,80,80,80,-84,-86,-89,-87,-88,-85,80,80,-69,-69,-69,-69,-69,80,80,80,-68,-67,-65,-66,-64,80,80,]),'GREATER_EQUALS':([71,72,74,76,77,78,80,81,82,83,84,86,110,111,112,113,115,116,129,131,133,136,141,142,159,161,172,194,205,206,207,208,209,210,211,212,],[-114,-107,-140,-115,-111,-97,-112,-91,-141,-113,-80,-105,-115,-106,-142,-142,-142,145,-110,-63,-96,-102,-90,-94,-28,-31,-109,-30,-62,-99,-98,-100,-101,-104,-93,-92,]),'LESS_EQUALS':([71,72,74,76,77,78,80,81,82,83,84,86,110,111,112,113,115,116,129,131,133,136,141,142,159,161,172,194,205,206,207,208,209,210,211,212,],[-114,-107,-140,-115,-111,-97,-112,-91,-141,-113,-80,-105,-115,-106,-142,-142,-142,147,-110,-63,-96,-102,-90,-94,-28,-31,-109,-30,-62,-99,-98,-100,-101,-104,-93,-92,]),'PLUS':([71,72,74,76,77,78,80,81,82,83,86,110,111,112,113,115,129,131,133,136,159,161,172,194,205,206,207,208,209,210,],[-114,-107,-140,-115,-111,-97,-112,-91,-141,-113,-105,-115,-106,-142,-142,140,-110,-63,-96,-102,-28,-31,-109,-30,-62,-99,-98,-100,-101,-104,]),'TO':([71,72,74,76,77,78,80,81,82,83,86,110,111,112,113,115,129,131,133,136,141,142,159,161,172,184,194,205,206,207,208,209,210,211,212,215,],[-114,-107,-140,-115,-111,-97,-112,-91,-141,-113,-105,-115,-106,-142,-142,-142,-110,-63,-96,-102,-90,-94,-28,-31,-109,-135,-30,-62,-99,-98,-100,-101,-104,-93,-92,232,]),'INT_CONSTANT':([49,58,59,65,75,79,98,114,120,130,132,134,135,137,139,140,143,144,145,146,147,148,151,153,154,156,168,169,170,171,173,174,176,177,178,179,180,181,182,183,185,186,187,188,189,190,192,198,216,217,218,219,220,227,232,],[77,77,-137,77,77,-108,77,77,77,77,-103,-103,-103,-103,-95,-95,77,-83,-83,-83,-83,-83,-83,-78,-78,77,77,77,77,77,77,77,-84,-86,-89,-87,-88,-85,77,77,-69,-69,-69,-69,-69,77,77,77,-68,-67,-65,-66,-64,77,77,]),'COMMA':([34,35,42,64,66,71,72,73,74,76,77,78,80,81,82,83,84,85,86,110,111,112,113,115,116,117,124,129,131,133,136,141,142,149,150,152,155,158,159,161,172,175,194,204,205,206,207,208,209,210,211,212,213,214,231,],[-115,43,-142,-128,-130,-114,-107,108,-140,-115,-111,-97,-112,-91,-141,-113,-80,-74,-105,-115,-106,-142,-142,-142,-142,-142,-129,-110,-63,-96,-102,-90,-94,-79,-82,-73,-77,192,-28,-31,-109,-81,-30,-50,-62,-99,-98,-100,-101,-104,-93,-92,-75,-76,242,]),'COLON':([71,72,74,76,77,78,80,81,82,83,84,85,86,97,110,111,112,113,115,116,117,122,129,131,133,136,141,142,149,150,152,155,159,161,163,172,175,194,205,206,207,208,209,210,211,212,213,214,244,248,256,],[-114,-107,-140,-115,-111,-97,-112,-91,-141,-113,-80,-74,-105,121,-115,-106,-142,-142,-142,-142,-142,-117,-110,-63,-96,-102,-90,-94,-79,-82,-73,-77,-28,-31,196,-109,-81,-30,-62,-99,-98,-100,-101,-104,-93,-92,-75,-76,-137,258,196,]),'PERCENTAGE':([71,72,74,76,77,78,80,82,83,86,110,111,112,113,129,131,159,161,172,194,205,210,],[-114,-107,-140,-115,-111,-97,-112,-141,-113,-105,-115,-106,-142,135,-110,-63,-28,-31,-109,-30,-62,-104,]),'PLUS_EQUALS':([56,94,119,131,157,205,],[-60,-61,-142,-63,186,-62,]),'LEFT_PARENTHESIS':([36,46,48,49,56,58,59,65,76,79,95,98,114,120,130,132,134,135,137,139,140,143,144,145,146,147,148,151,153,154,156,168,169,170,171,173,174,176,177,178,179,180,181,182,183,185,186,187,188,189,190,192,198,216,217,218,219,220,227,232,],[-38,68,70,79,-29,79,-137,79,-29,-108,120,79,79,79,79,-103,-103,-103,-103,-95,-95,79,-83,-83,-83,-83,-83,-83,-78,-78,79,79,79,79,79,79,79,-84,-86,-89,-87,-88,-85,79,79,-69,-69,-69,-69,-69,79,79,79,-68,-67,-65,-66,-64,79,79,]),'$end':([2,3,10,20,29,32,38,39,40,99,123,],[0,-4,-2,-3,-1,-142,-8,-10,-9,-142,-23,]),'END':([32,38,39,40,53,69,88,89,90,91,92,93,96,100,202,223,234,235,237,238,245,246,247,252,270,271,],[-142,-8,-10,-9,-142,-58,-56,-27,-25,-26,-55,-53,-54,-57,229,-118,-142,249,250,251,257,-119,-120,261,-118,-121,]),'STRING':([0,4,7,8,31,32,38,39,40,41,63,68,104,125,165,242,],[-72,11,11,-72,-72,-142,-8,-10,-9,-71,-15,-72,11,-72,-72,-72,]),'FOR':([8,24,25,26,32,37,38,39,40,41,53,63,69,88,92,93,96,100,121,125,162,164,165,195,196,203,224,258,263,268,],[-142,-6,-5,-7,-142,50,-8,-10,-9,-71,50,-15,-58,-56,-55,-53,-54,-57,-117,-142,-142,50,-142,50,-142,50,50,-122,-142,50,]),'EQUALS':([56,94,119,131,157,205,],[-60,-61,-142,-63,189,-62,]),'ELSE':([32,38,39,40,53,69,88,89,90,91,92,93,96,100,223,234,],[-142,-8,-10,-9,-142,-58,-56,-27,-25,-26,-55,-53,-54,-57,-118,248,]),'FUNC':([0,5,6,8,24,25,26,32,38,39,40,41,63,105,199,200,201,228,230,253,264,265,269,],[7,7,7,-142,-6,-5,-7,-142,-8,-10,-9,-71,-15,-35,-40,-42,-41,-43,-39,-44,-47,-45,-46,]),'FROM':([87,118,],[-134,156,]),'RIGHT_PARENTHESIS':([34,42,64,66,68,70,71,72,74,76,77,78,80,81,82,83,84,85,86,103,110,111,112,113,115,116,117,120,124,129,131,133,136,138,141,142,149,150,152,155,158,159,160,161,172,175,191,193,194,204,205,206,207,208,209,210,211,212,213,214,222,231,241,243,254,255,],[-115,-142,-128,-130,102,106,-114,-107,-140,-115,-111,-97,-112,-91,-141,-113,-80,-74,-105,126,-115,-106,-142,-142,-142,-142,-142,161,-129,-110,-63,-96,-102,172,-90,-94,-79,-82,-73,-77,-142,-28,194,-31,-109,-81,-32,-34,-30,-50,-62,-99,-98,-100,-101,-104,-93,-92,-75,-76,-33,-142,-71,-52,-49,-51,]),'TIMES':([71,72,74,76,77,78,80,82,83,86,110,111,112,113,129,131,159,161,172,194,205,210,],[-114,-107,-140,-115,-111,-97,-112,-141,-113,-105,-115,-106,-142,134,-110,-63,-28,-31,-109,-30,-62,-104,]),'ID':([8,11,12,13,14,15,21,22,23,24,25,26,28,30,32,37,38,39,40,41,43,49,50,53,58,59,63,65,69,75,79,88,92,93,96,98,100,114,120,121,125,127,130,132,134,135,137,139,140,143,144,145,146,147,148,151,153,154,156,162,164,165,166,168,169,170,171,173,174,176,177,178,179,180,181,182,183,185,186,187,188,189,190,192,195,196,198,203,216,217,218,219,220,224,227,232,258,263,268,],[-142,-13,-11,-12,-14,-16,-37,-36,-16,-6,-5,-7,34,36,-142,56,-8,-10,-9,-71,34,76,87,56,76,-137,-15,76,-58,110,-108,-56,-55,-53,-54,76,-57,76,76,-117,-142,-16,76,-103,-103,-103,-103,-95,-95,76,-83,-83,-83,-83,-83,-83,-78,-78,76,-142,56,-142,34,76,76,76,76,76,76,-84,-86,-89,-87,-88,-85,76,76,-69,-69,-69,-69,-69,76,76,56,-142,76,56,-68,-67,-65,-66,-64,56,76,76,-122,-142,56,]),'IF':([8,24,25,26,32,37,38,39,40,41,53,63,69,88,92,93,96,100,121,125,162,164,165,195,196,203,224,258,263,268,],[-142,-6,-5,-7,-142,58,-8,-10,-9,-71,58,-15,-58,-56,-55,-53,-54,-57,-117,-142,-142,58,-142,58,-142,58,58,-122,-142,58,]),'AND':([71,72,74,76,77,78,80,81,82,83,84,85,86,110,111,112,113,115,116,117,129,131,133,136,141,142,149,150,159,161,172,175,194,205,206,207,208,209,210,211,212,],[-114,-107,-140,-115,-111,-97,-112,-91,-141,-113,-80,-74,-105,-115,-106,-142,-142,-142,-142,153,-110,-63,-96,-102,-90,-94,-79,-82,-28,-31,-109,-81,-30,-62,-99,-98,-100,-101,-104,-93,-92,]),'FALSE':([49,58,59,65,75,79,98,114,120,130,132,134,135,137,139,140,143,144,145,146,147,148,151,153,154,156,168,169,170,171,173,174,176,177,178,179,180,181,182,183,185,186,187,188,189,190,192,198,216,217,218,219,220,227,232,],[82,82,-137,82,82,-108,82,82,82,82,-103,-103,-103,-103,-95,-95,82,-83,-83,-83,-83,-83,-83,-78,-78,82,82,82,82,82,82,82,-84,-86,-89,-87,-88,-85,82,82,-69,-69,-69,-69,-69,82,82,82,-68,-67,-65,-66,-64,82,82,]),'GREATER':([71,72,74,76,77,78,80,81,82,83,84,86,110,111,112,113,115,116,129,131,133,136,141,142,159,161,172,194,205,206,207,208,209,210,211,212,],[-114,-107,-140,-115,-111,-97,-112,-91,-141,-113,-80,-105,-115,-106,-142,-142,-142,151,-110,-63,-96,-102,-90,-94,-28,-31,-109,-30,-62,-99,-98,-100,-101,-104,-93,-92,]),'INT':([0,4,7,8,31,32,38,39,40,41,63,68,104,125,165,242,],[-72,12,12,-72,-72,-142,-8,-10,-9,-71,-15,-72,12,-72,-72,-72,]),'DOUBLE':([0,4,7,8,31,32,38,39,40,41,63,68,104,125,165,242,],[-72,13,13,-72,-72,-142,-8,-10,-9,-71,-15,-72,13,-72,-72,-72,]),'DIVIDE_EQUALS':([56,94,119,131,157,205,],[-60,-61,-142,-63,188,-62,]),'BOOL':([0,4,7,8,31,32,38,39,40,41,63,68,104,125,165,242,],[-72,14,14,-72,-72,-142,-8,-10,-9,-71,-15,-72,14,-72,-72,-72,]),'STRING_CONSTANT':([49,58,59,65,75,79,98,108,114,120,130,132,134,135,137,139,140,143,144,145,146,147,148,151,153,154,156,168,169,170,171,173,174,176,177,178,179,180,181,182,183,185,186,187,188,189,190,192,198,216,217,218,219,220,227,232,],[83,83,-137,83,83,-108,83,128,83,83,83,-103,-103,-103,-103,-95,-95,83,-83,-83,-83,-83,-83,-83,-78,-78,83,83,83,83,83,83,83,-84,-86,-89,-87,-88,-85,83,83,-69,-69,-69,-69,-69,83,83,83,-68,-67,-65,-66,-64,83,83,]),'TIMES_EQUALS':([56,94,119,131,157,205,],[-60,-61,-142,-63,187,-62,]),'LEFT_BRACKET':([34,42,56,76,94,110,112,119,],[-115,65,-60,-115,-61,-115,130,130,]),'MAIN':([0,1,5,6,8,16,17,18,19,24,25,26,32,38,39,40,41,63,105,199,200,201,228,230,253,264,265,269,],[9,9,-142,9,-142,-20,-21,-22,9,-6,-5,-7,-142,-8,-10,-9,-71,-15,-35,-40,-42,-41,-43,-39,-44,-47,-45,-46,]),'OR':([71,72,74,76,77,78,80,81,82,83,84,85,86,110,111,112,113,115,116,117,129,131,133,136,141,142,149,150,159,161,172,175,194,205,206,207,208,209,210,211,212,],[-114,-107,-140,-115,-111,-97,-112,-91,-141,-113,-80,-74,-105,-115,-106,-142,-142,-142,-142,154,-110,-63,-96,-102,-90,-94,-79,-82,-28,-31,-109,-81,-30,-62,-99,-98,-100,-101,-104,-93,-92,]),'MOD':([71,72,74,76,77,78,80,82,83,86,110,111,112,113,129,131,159,161,172,194,205,210,],[-114,-107,-140,-115,-111,-97,-112,-141,-113,-105,-115,-106,-142,137,-110,-63,-28,-31,-109,-30,-62,-104,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'relational_operator':([116,],[143,]),'post_function':([68,],[105,]),'push_assignment':([185,186,187,188,189,],[216,217,218,219,220,]),'parameters':([68,242,],[103,255,]),'post_variables':([8,125,165,],[25,164,203,]),'program':([0,],[2,]),'factor':([49,58,65,98,114,120,130,143,156,168,169,170,171,173,174,182,183,190,192,198,227,232,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'main':([0,1,6,19,],[3,10,20,29,]),'finish_evaluating':([0,8,31,68,125,165,242,],[4,4,4,104,4,4,104,]),'read':([37,53,164,195,203,224,268,],[52,52,52,52,52,52,52,]),'post_term':([113,],[133,]),'condition':([37,53,164,195,203,224,268,],[57,57,57,57,57,57,57,]),'term':([49,58,65,98,114,120,130,143,156,168,169,170,171,173,174,182,183,190,192,198,227,232,],[81,81,81,81,81,81,81,81,81,206,207,208,209,81,81,81,81,81,81,81,81,81,]),'post_void_return':([202,],[228,]),'push_term':([132,134,135,137,],[168,169,170,171,]),'register_function':([36,],[46,]),'identifier':([28,43,166,],[35,35,204,]),'push_paren':([79,],[114,]),'BOOL_CONSTANT':([49,58,65,75,98,114,120,130,143,156,168,169,170,171,173,174,182,183,190,192,198,227,232,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'call_function':([37,49,53,58,65,98,114,120,130,143,156,164,168,169,170,171,173,174,182,183,190,192,195,198,203,224,227,232,268,],[47,72,47,72,72,72,72,72,72,72,72,47,72,72,72,72,72,72,72,72,72,72,47,72,47,47,72,72,47,]),'reset_scope':([229,250,251,261,],[240,259,260,266,]),'push_relop':([144,145,146,147,148,151,],[176,177,178,179,180,181,]),'post_parameters':([231,],[241,]),'start_evaluating':([41,241,],[63,254,]),'post_print':([73,],[107,]),'fill_goto':([197,223,270,],[225,234,271,]),'for':([37,53,164,195,203,224,268,],[51,51,51,51,51,51,51,]),'post_exp':([115,],[141,]),'print':([37,53,164,195,203,224,268,],[54,54,54,54,54,54,54,]),'push_exp':([139,140,],[173,174,]),'set_type':([15,23,127,],[28,30,166,]),'inter_declaration':([28,43,],[33,67,]),'void_return':([164,203,],[201,201,]),'pop_paren':([172,],[210,]),'push_gotoF':([121,122,],[162,163,]),'assignment_operator':([157,],[190,]),'expression':([49,58,98,114,120,143,182,183,190,192,198,227,],[85,85,85,85,85,175,85,85,85,85,85,85,]),'pop_exp':([81,],[115,]),'block':([37,53,164,195,203,224,268,],[61,91,202,223,202,235,270,]),'optional_eol':([32,99,162,196,263,],[38,123,195,224,268,]),'post_functions':([5,],[16,]),'pop_term':([78,],[113,]),'required_eol':([27,32,33,47,52,54,55,57,62,99,102,126,162,196,226,227,239,240,259,260,263,266,],[31,39,41,69,88,92,93,96,100,39,125,165,39,39,237,238,252,253,264,265,39,269,]),'push_goto':([258,],[263,]),'post_arguments':([158,],[191,]),'validate_function_call':([56,76,],[95,95,]),'post_cycle':([163,256,],[197,262,]),'post_cond':([117,],[152,]),'func_return':([164,203,],[199,230,]),'post_call_function':([120,],[159,]),'validate_var':([56,],[94,]),'push_cycle':([59,244,],[98,256,]),'process_variable':([34,76,110,],[42,112,112,]),'empty':([5,8,32,35,42,53,73,99,112,113,115,116,117,119,125,158,162,165,196,231,234,263,],[18,26,40,44,66,89,109,40,131,136,142,150,155,131,26,193,40,26,40,243,247,40,]),'function':([0,5,6,],[5,5,5,]),'statement':([37,53,164,195,203,224,268,],[53,53,53,53,53,53,53,]),'pre_variables':([0,8,31,125,165,],[6,24,37,24,24,]),'else':([234,],[246,]),'value_return':([164,203,],[200,200,]),'cycle_declaration':([35,],[45,]),'declaration':([0,8,31,125,165,],[8,8,8,8,8,]),'init_var':([184,],[215,]),'push_op_and_or':([153,154,],[182,183,]),'while':([37,53,164,195,203,224,268,],[60,60,60,60,60,60,60,]),'post_expression':([116,],[149,]),'loop':([37,53,164,195,203,224,268,],[62,62,62,62,62,62,62,]),'set_main_scope':([9,],[27,]),'cond':([49,58,98,114,120,182,183,190,192,198,227,],[73,97,122,138,158,213,214,221,158,226,239,]),'functions':([0,5,6,],[1,17,19,]),'pop_op_and_or':([85,],[117,]),'arguments':([120,192,],[160,222,]),'pop_relop':([84,],[116,]),'exp':([49,58,65,98,114,120,130,143,156,173,174,182,183,190,192,198,227,232,],[84,84,101,84,84,84,167,84,184,211,212,84,84,84,84,84,84,244,]),'post_condition':([234,],[245,]),'assignment':([37,53,164,195,203,224,268,],[55,55,55,55,55,55,55,]),'post_identifier':([42,],[64,]),'pop_assignment':([221,],[233,]),'post_block':([53,],[90,]),'types':([4,7,104,],[15,22,127,]),'create_pending_goto':([225,262,],[236,267,]),'update_function_parameters':([204,],[231,]),'array_notation':([112,119,],[129,157,]),'add_var':([87,],[118,]),'push_var':([94,],[119,]),'func_types':([7,],[23,]),'variable_constant':([49,58,65,75,98,114,120,130,143,156,168,169,170,171,173,174,182,183,190,192,198,227,232,],[86,86,86,111,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> pre_variables functions main','program',3,'p_program','parser.py',24),
  ('program -> functions main','program',2,'p_program','parser.py',25),
  ('program -> pre_variables main','program',2,'p_program','parser.py',26),
  ('program -> main','program',1,'p_program','parser.py',27),
  ('pre_variables -> declaration post_variables','pre_variables',2,'p_pre_variables','parser.py',33),
  ('post_variables -> pre_variables','post_variables',1,'p_post_variables','parser.py',36),
  ('post_variables -> empty','post_variables',1,'p_post_variables','parser.py',37),
  ('required_eol -> EOL optional_eol','required_eol',2,'p_required_eol','parser.py',41),
  ('optional_eol -> empty','optional_eol',1,'p_optional_eol','parser.py',44),
  ('optional_eol -> required_eol','optional_eol',1,'p_optional_eol','parser.py',45),
  ('types -> INT','types',1,'p_types','parser.py',49),
  ('types -> DOUBLE','types',1,'p_types','parser.py',50),
  ('types -> STRING','types',1,'p_types','parser.py',51),
  ('types -> BOOL','types',1,'p_types','parser.py',52),
  ('declaration -> finish_evaluating types set_type inter_declaration required_eol start_evaluating','declaration',6,'p_declaration','parser.py',57),
  ('set_type -> <empty>','set_type',0,'p_set_type','parser.py',60),
  ('inter_declaration -> identifier cycle_declaration','inter_declaration',2,'p_inter_declaration','parser.py',63),
  ('cycle_declaration -> COMMA inter_declaration','cycle_declaration',2,'p_cycle_declaration','parser.py',66),
  ('cycle_declaration -> empty','cycle_declaration',1,'p_cycle_declaration','parser.py',67),
  ('functions -> function post_functions','functions',2,'p_functions','parser.py',71),
  ('post_functions -> functions','post_functions',1,'p_post_functions','parser.py',75),
  ('post_functions -> empty','post_functions',1,'p_post_functions','parser.py',76),
  ('main -> MAIN set_main_scope required_eol pre_variables block END_MAIN optional_eol','main',7,'p_main','parser.py',80),
  ('set_main_scope -> <empty>','set_main_scope',0,'p_set_main_scope','parser.py',83),
  ('block -> statement post_block','block',2,'p_block','parser.py',88),
  ('post_block -> block','post_block',1,'p_post_block','parser.py',91),
  ('post_block -> empty','post_block',1,'p_post_block','parser.py',92),
  ('call_function -> ID validate_function_call LEFT_PARENTHESIS post_call_function','call_function',4,'p_call_function','parser.py',96),
  ('validate_function_call -> <empty>','validate_function_call',0,'p_validate_function_call','parser.py',100),
  ('post_call_function -> arguments RIGHT_PARENTHESIS','post_call_function',2,'p_post_call_function','parser.py',104),
  ('post_call_function -> RIGHT_PARENTHESIS','post_call_function',1,'p_post_call_function','parser.py',105),
  ('arguments -> cond post_arguments','arguments',2,'p_arguments','parser.py',109),
  ('post_arguments -> COMMA arguments','post_arguments',2,'p_post_arguments','parser.py',112),
  ('post_arguments -> empty','post_arguments',1,'p_post_arguments','parser.py',113),
  ('function -> FUNC func_types set_type ID register_function LEFT_PARENTHESIS post_function','function',7,'p_function','parser.py',117),
  ('func_types -> types','func_types',1,'p_func_types','parser.py',122),
  ('func_types -> VOID','func_types',1,'p_func_types','parser.py',123),
  ('register_function -> <empty>','register_function',0,'p_register_function','parser.py',129),
  ('post_function -> parameters RIGHT_PARENTHESIS required_eol post_variables func_return','post_function',5,'p_post_function','parser.py',136),
  ('post_function -> RIGHT_PARENTHESIS required_eol post_variables func_return','post_function',4,'p_post_function','parser.py',137),
  ('func_return -> void_return','func_return',1,'p_func_return','parser.py',140),
  ('func_return -> value_return','func_return',1,'p_func_return','parser.py',141),
  ('void_return -> block post_void_return','void_return',2,'p_void_return','parser.py',144),
  ('post_void_return -> END reset_scope required_eol','post_void_return',3,'p_post_void_return','parser.py',147),
  ('post_void_return -> RETURN required_eol END reset_scope required_eol','post_void_return',5,'p_post_void_return','parser.py',148),
  ('value_return -> block RETURN cond required_eol END reset_scope required_eol','value_return',7,'p_value_return','parser.py',151),
  ('value_return -> RETURN cond required_eol END reset_scope required_eol','value_return',6,'p_value_return','parser.py',152),
  ('reset_scope -> <empty>','reset_scope',0,'p_reset_scope','parser.py',155),
  ('parameters -> finish_evaluating types set_type identifier update_function_parameters post_parameters start_evaluating','parameters',7,'p_parameters','parser.py',160),
  ('update_function_parameters -> <empty>','update_function_parameters',0,'p_update_function_parameters','parser.py',164),
  ('post_parameters -> COMMA parameters','post_parameters',2,'p_post_parameters','parser.py',168),
  ('post_parameters -> empty','post_parameters',1,'p_post_parameters','parser.py',169),
  ('statement -> assignment required_eol','statement',2,'p_statement','parser.py',173),
  ('statement -> condition required_eol','statement',2,'p_statement','parser.py',174),
  ('statement -> print required_eol','statement',2,'p_statement','parser.py',175),
  ('statement -> read required_eol','statement',2,'p_statement','parser.py',176),
  ('statement -> loop required_eol','statement',2,'p_statement','parser.py',177),
  ('statement -> call_function required_eol','statement',2,'p_statement','parser.py',178),
  ('assignment -> ID validate_var push_var array_notation assignment_operator cond pop_assignment','assignment',7,'p_assignment','parser.py',183),
  ('validate_var -> <empty>','validate_var',0,'p_validate_var','parser.py',186),
  ('push_var -> <empty>','push_var',0,'p_push_var','parser.py',191),
  ('array_notation -> LEFT_BRACKET exp RIGHT_BRACKET','array_notation',3,'p_array_notation','parser.py',200),
  ('array_notation -> empty','array_notation',1,'p_array_notation','parser.py',201),
  ('assignment_operator -> EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',206),
  ('assignment_operator -> TIMES_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',207),
  ('assignment_operator -> DIVIDE_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',208),
  ('assignment_operator -> PLUS_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',209),
  ('assignment_operator -> MINUS_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',210),
  ('push_assignment -> <empty>','push_assignment',0,'p_push_assignment','parser.py',213),
  ('pop_assignment -> <empty>','pop_assignment',0,'p_pop_assignment','parser.py',217),
  ('start_evaluating -> <empty>','start_evaluating',0,'p_start_evaluating','parser.py',223),
  ('finish_evaluating -> <empty>','finish_evaluating',0,'p_finish_evaluating','parser.py',227),
  ('cond -> expression pop_op_and_or post_cond','cond',3,'p_cond','parser.py',232),
  ('pop_op_and_or -> <empty>','pop_op_and_or',0,'p_pop_op_and_or','parser.py',235),
  ('post_cond -> AND push_op_and_or cond','post_cond',3,'p_post_cond','parser.py',240),
  ('post_cond -> OR push_op_and_or cond','post_cond',3,'p_post_cond','parser.py',241),
  ('post_cond -> empty','post_cond',1,'p_post_cond','parser.py',242),
  ('push_op_and_or -> <empty>','push_op_and_or',0,'p_push_op_and_or','parser.py',245),
  ('expression -> exp pop_relop post_expression','expression',3,'p_expression','parser.py',250),
  ('pop_relop -> <empty>','pop_relop',0,'p_pop_relop','parser.py',253),
  ('post_expression -> relational_operator expression','post_expression',2,'p_post_expression','parser.py',259),
  ('post_expression -> empty','post_expression',1,'p_post_expression','parser.py',260),
  ('push_relop -> <empty>','push_relop',0,'p_push_relop','parser.py',263),
  ('relational_operator -> LESS push_relop','relational_operator',2,'p_relational_operator','parser.py',267),
  ('relational_operator -> GREATER push_relop','relational_operator',2,'p_relational_operator','parser.py',268),
  ('relational_operator -> GREATER_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',269),
  ('relational_operator -> LESS_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',270),
  ('relational_operator -> EQUALS_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',271),
  ('relational_operator -> NOT_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',272),
  ('exp -> term pop_exp post_exp','exp',3,'p_exp','parser.py',278),
  ('pop_exp -> <empty>','pop_exp',0,'p_pop_exp','parser.py',281),
  ('post_exp -> PLUS push_exp exp','post_exp',3,'p_post_exp','parser.py',286),
  ('post_exp -> MINUS push_exp exp','post_exp',3,'p_post_exp','parser.py',287),
  ('post_exp -> empty','post_exp',1,'p_post_exp','parser.py',288),
  ('push_exp -> <empty>','push_exp',0,'p_push_exp','parser.py',291),
  ('term -> factor pop_term post_term','term',3,'p_term','parser.py',296),
  ('pop_term -> <empty>','pop_term',0,'p_pop_term','parser.py',299),
  ('post_term -> TIMES push_term term','post_term',3,'p_post_term','parser.py',305),
  ('post_term -> DIVIDE push_term term','post_term',3,'p_post_term','parser.py',306),
  ('post_term -> PERCENTAGE push_term term','post_term',3,'p_post_term','parser.py',307),
  ('post_term -> MOD push_term term','post_term',3,'p_post_term','parser.py',308),
  ('post_term -> empty','post_term',1,'p_post_term','parser.py',309),
  ('push_term -> <empty>','push_term',0,'p_push_term','parser.py',312),
  ('factor -> LEFT_PARENTHESIS push_paren cond RIGHT_PARENTHESIS pop_paren','factor',5,'p_factor','parser.py',317),
  ('factor -> variable_constant','factor',1,'p_factor','parser.py',318),
  ('factor -> MINUS variable_constant','factor',2,'p_factor','parser.py',319),
  ('factor -> call_function','factor',1,'p_factor','parser.py',320),
  ('push_paren -> <empty>','push_paren',0,'p_push_paren','parser.py',323),
  ('pop_paren -> <empty>','pop_paren',0,'p_pop_paren','parser.py',327),
  ('variable_constant -> ID process_variable array_notation','variable_constant',3,'p_variable_constant','parser.py',332),
  ('variable_constant -> INT_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',333),
  ('variable_constant -> DOUBLE_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',334),
  ('variable_constant -> STRING_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',335),
  ('variable_constant -> BOOL_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',336),
  ('process_variable -> <empty>','process_variable',0,'p_process_variable','parser.py',350),
  ('condition -> IF cond COLON push_gotoF optional_eol block fill_goto post_condition END','condition',9,'p_condition','parser.py',359),
  ('push_gotoF -> <empty>','push_gotoF',0,'p_push_gotoF','parser.py',362),
  ('fill_goto -> <empty>','fill_goto',0,'p_fill_goto','parser.py',366),
  ('post_condition -> else','post_condition',1,'p_post_condition','parser.py',371),
  ('post_condition -> empty','post_condition',1,'p_post_condition','parser.py',372),
  ('else -> ELSE COLON push_goto optional_eol block fill_goto','else',6,'p_else','parser.py',376),
  ('push_goto -> <empty>','push_goto',0,'p_push_goto','parser.py',379),
  ('print -> PRINT cond post_print','print',3,'p_print','parser.py',384),
  ('post_print -> COMMA STRING_CONSTANT','post_print',2,'p_post_print','parser.py',387),
  ('post_print -> empty','post_print',1,'p_post_print','parser.py',388),
  ('push_print -> <empty>','push_print',0,'p_push_print','parser.py',391),
  ('read -> READ LEFT_PARENTHESIS RIGHT_PARENTHESIS','read',3,'p_read','parser.py',396),
  ('identifier -> ID process_variable post_identifier','identifier',3,'p_identifier','parser.py',400),
  ('post_identifier -> LEFT_BRACKET exp RIGHT_BRACKET','post_identifier',3,'p_post_identifier','parser.py',403),
  ('post_identifier -> empty','post_identifier',1,'p_post_identifier','parser.py',404),
  ('loop -> for','loop',1,'p_loop','parser.py',408),
  ('loop -> while','loop',1,'p_loop','parser.py',409),
  ('for -> FOR ID add_var FROM exp init_var TO exp push_cycle post_cycle create_pending_goto','for',11,'p_for','parser.py',413),
  ('add_var -> <empty>','add_var',0,'p_add_var','parser.py',416),
  ('init_var -> <empty>','init_var',0,'p_init_var','parser.py',422),
  ('while -> WHILE push_cycle cond push_gotoF post_cycle fill_goto create_pending_goto','while',7,'p_while','parser.py',427),
  ('push_cycle -> <empty>','push_cycle',0,'p_push_cycle','parser.py',430),
  ('create_pending_goto -> <empty>','create_pending_goto',0,'p_create_pending_goto','parser.py',434),
  ('post_cycle -> COLON optional_eol block END','post_cycle',4,'p_post_cycle','parser.py',439),
  ('BOOL_CONSTANT -> TRUE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',442),
  ('BOOL_CONSTANT -> FALSE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',443),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',446),
]
