
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '473B314042351F91407D6C42EB7AAD3E'
    
_lr_action_items = {'LESS':([6,21,23,34,43,44,46,48,49,50,52,53,54,55,56,58,67,68,74,76,79,82,85,99,110,118,119,120,121,122,123,124,],[-2,-77,-79,-2,-60,-55,-89,-58,-57,-2,-2,-90,-59,87,-56,-53,-4,-6,-54,-46,-51,-42,-45,-78,-5,-48,-47,-49,-50,-52,-43,-44,]),'READ':([6,11,21,23,24,29,31,32,33,34,35,38,40,43,44,46,48,49,50,52,53,54,55,56,57,58,61,67,68,73,74,76,79,82,85,91,93,95,98,99,101,103,104,105,107,109,110,114,116,118,119,120,121,122,123,124,125,126,127,128,130,133,134,136,139,140,141,142,144,145,146,148,149,151,152,154,155,156,157,158,159,160,161,],[-2,25,-77,-79,-22,-80,-19,-20,-17,-2,-18,-81,-21,-60,-55,-89,-58,-57,-2,-2,-90,-59,-2,-56,-2,-53,-2,-4,-6,-23,-54,-46,-51,-42,-45,-33,-35,-29,-32,-78,-70,-72,25,-85,-82,25,-5,-7,25,-48,-47,-49,-50,-52,-43,-44,-34,-30,-31,-73,25,25,-61,25,-71,-86,25,-88,-83,-64,-63,-65,-62,-9,-87,25,-8,-84,-66,25,-68,-69,-67,]),'RIGHT_BRACKET':([6,21,23,34,43,44,46,48,49,50,52,53,54,56,58,59,67,68,72,74,76,79,82,85,99,110,118,119,120,121,122,123,124,],[-2,-77,-79,-2,-60,-55,-89,-58,-57,-2,-2,-90,-59,-56,-53,99,-4,-6,117,-54,-46,-51,-42,-45,-78,-5,-48,-47,-49,-50,-52,-43,-44,]),'EOL':([5,6,21,23,34,43,44,45,46,48,49,50,52,53,54,55,56,57,58,67,68,74,76,79,82,85,91,93,95,98,99,100,110,117,118,119,120,121,122,123,124,125,126,127,129,],[18,-2,-77,-79,-2,-60,-55,73,-89,-58,-57,-2,-2,-90,-59,-2,-56,-2,-53,-4,-6,-54,-46,-51,-42,-45,-33,-35,-29,-32,-78,128,-5,138,-48,-47,-49,-50,-52,-43,-44,-34,-30,-31,139,]),'EQUALS_EQUALS':([6,21,23,34,43,44,46,48,49,50,52,53,54,55,56,58,67,68,74,76,79,82,85,99,110,118,119,120,121,122,123,124,],[-2,-77,-79,-2,-60,-55,-89,-58,-57,-2,-2,-90,-59,90,-56,-53,-4,-6,-54,-46,-51,-42,-45,-78,-5,-48,-47,-49,-50,-52,-43,-44,]),'WHILE':([6,11,21,23,24,29,31,32,33,34,35,38,40,43,44,46,48,49,50,52,53,54,55,56,57,58,61,67,68,73,74,76,79,82,85,91,93,95,98,99,101,103,104,105,107,109,110,114,116,118,119,120,121,122,123,124,125,126,127,128,130,133,134,136,139,140,141,142,144,145,146,148,149,151,152,154,155,156,157,158,159,160,161,],[-2,27,-77,-79,-22,-80,-19,-20,-17,-2,-18,-81,-21,-60,-55,-89,-58,-57,-2,-2,-90,-59,-2,-56,-2,-53,-2,-4,-6,-23,-54,-46,-51,-42,-45,-33,-35,-29,-32,-78,-70,-72,27,-85,-82,27,-5,-7,27,-48,-47,-49,-50,-52,-43,-44,-34,-30,-31,-73,27,27,-61,27,-71,-86,27,-88,-83,-64,-63,-65,-62,-9,-87,27,-8,-84,-66,27,-68,-69,-67,]),'PRINT':([6,11,21,23,24,29,31,32,33,34,35,38,40,43,44,46,48,49,50,52,53,54,55,56,57,58,61,67,68,73,74,76,79,82,85,91,93,95,98,99,101,103,104,105,107,109,110,114,116,118,119,120,121,122,123,124,125,126,127,128,130,133,134,136,139,140,141,142,144,145,146,148,149,151,152,154,155,156,157,158,159,160,161,],[-2,26,-77,-79,-22,-80,-19,-20,-17,-2,-18,-81,-21,-60,-55,-89,-58,-57,-2,-2,-90,-59,-2,-56,-2,-53,-2,-4,-6,-23,-54,-46,-51,-42,-45,-33,-35,-29,-32,-78,-70,-72,26,-85,-82,26,-5,-7,26,-48,-47,-49,-50,-52,-43,-44,-34,-30,-31,-73,26,26,-61,26,-71,-86,26,-88,-83,-64,-63,-65,-62,-9,-87,26,-8,-84,-66,26,-68,-69,-67,]),'GREATER_EQUALS':([6,21,23,34,43,44,46,48,49,50,52,53,54,55,56,58,67,68,74,76,79,82,85,99,110,118,119,120,121,122,123,124,],[-2,-77,-79,-2,-60,-55,-89,-58,-57,-2,-2,-90,-59,92,-56,-53,-4,-6,-54,-46,-51,-42,-45,-78,-5,-48,-47,-49,-50,-52,-43,-44,]),'MINUS':([6,13,15,16,17,19,20,21,22,23,26,27,34,36,42,43,44,46,48,49,50,51,52,53,54,56,58,67,68,70,74,75,76,77,78,79,80,83,84,86,87,88,89,90,92,94,96,97,99,106,110,118,119,120,121,122,143,],[-2,-28,-25,-26,-24,47,-27,-77,47,-79,47,47,-2,47,47,-60,-55,-89,-58,-57,-2,47,84,-90,-59,-56,-53,-4,-6,-24,-54,47,-46,47,47,-51,47,47,47,-37,-36,-41,-39,-40,-38,47,47,47,-78,47,-5,-48,-47,-49,-50,-52,47,]),'MINUS_EQUALS':([5,6,21,23,34,39,99,],[13,-2,-77,-79,-2,13,-78,]),'TIMES_EQUALS':([5,6,21,23,34,39,99,],[15,-2,-77,-79,-2,15,-78,]),'NOT_EQUALS':([6,21,23,34,43,44,46,48,49,50,52,53,54,55,56,58,67,68,74,76,79,82,85,99,110,118,119,120,121,122,123,124,],[-2,-77,-79,-2,-60,-55,-89,-58,-57,-2,-2,-90,-59,88,-56,-53,-4,-6,-54,-46,-51,-42,-45,-78,-5,-48,-47,-49,-50,-52,-43,-44,]),'DOUBLE_CONSTANT':([13,15,16,17,19,20,22,26,27,36,42,47,51,70,75,77,78,80,83,84,86,87,88,89,90,92,94,96,97,106,143,],[-28,-25,-26,-24,48,-27,48,48,48,48,48,48,48,-24,48,48,48,48,48,48,-37,-36,-41,-39,-40,-38,48,48,48,48,48,]),'LESS_EQUALS':([6,21,23,34,43,44,46,48,49,50,52,53,54,55,56,58,67,68,74,76,79,82,85,99,110,118,119,120,121,122,123,124,],[-2,-77,-79,-2,-60,-55,-89,-58,-57,-2,-2,-90,-59,89,-56,-53,-4,-6,-54,-46,-51,-42,-45,-78,-5,-48,-47,-49,-50,-52,-43,-44,]),'PLUS':([6,21,23,34,43,44,46,48,49,50,52,53,54,56,58,67,68,74,76,79,99,110,118,119,120,121,122,],[-2,-77,-79,-2,-60,-55,-89,-58,-57,-2,83,-90,-59,-56,-53,-4,-6,-54,-46,-51,-78,-5,-48,-47,-49,-50,-52,]),'TO':([6,21,23,34,43,44,46,48,49,50,52,53,54,56,58,67,68,74,76,79,82,85,99,110,118,119,120,121,122,123,124,131,],[-2,-77,-79,-2,-60,-55,-89,-58,-57,-2,-2,-90,-59,-56,-53,-4,-6,-54,-46,-51,-42,-45,-78,-5,-48,-47,-49,-50,-52,-43,-44,143,]),'INT_CONSTANT':([13,15,16,17,19,20,22,26,27,36,42,47,51,70,75,77,78,80,83,84,86,87,88,89,90,92,94,96,97,106,143,],[-28,-25,-26,-24,49,-27,49,49,49,49,49,49,49,-24,49,49,49,49,49,49,-37,-36,-41,-39,-40,-38,49,49,49,49,49,]),'COLON':([6,21,23,34,43,44,46,48,49,50,52,53,54,55,56,57,58,62,65,67,68,74,76,79,82,85,91,93,95,98,99,110,118,119,120,121,122,123,124,125,126,127,132,147,153,],[-2,-77,-79,-2,-60,-55,-89,-58,-57,-2,-2,-90,-59,-2,-56,-2,-53,104,109,-4,-6,-54,-46,-51,-42,-45,-33,-35,-29,-32,-78,-5,-48,-47,-49,-50,-52,-43,-44,-34,-30,-31,104,154,104,]),'COMMA':([6,21,23,34,43,44,46,48,49,50,52,53,54,55,56,57,58,61,67,68,69,74,76,79,82,85,91,93,95,98,99,110,118,119,120,121,122,123,124,125,126,127,],[-2,-77,-79,-2,-60,-55,-89,-58,-57,-2,-2,-90,-59,-2,-56,-2,-53,102,-4,-6,112,-54,-46,-51,-42,-45,-33,-35,-29,-32,-78,-5,-48,-47,-49,-50,-52,-43,-44,-34,-30,-31,]),'PERCENTAGE':([6,21,23,34,43,44,46,48,49,50,53,54,56,58,67,68,74,99,110,122,],[-2,-77,-79,-2,-60,-55,-89,-58,-57,78,-90,-59,-56,-53,-4,-6,-54,-78,-5,-52,]),'IF':([6,11,21,23,24,29,31,32,33,34,35,38,40,43,44,46,48,49,50,52,53,54,55,56,57,58,61,67,68,73,74,76,79,82,85,91,93,95,98,99,101,103,104,105,107,109,110,114,116,118,119,120,121,122,123,124,125,126,127,128,130,133,134,136,139,140,141,142,144,145,146,148,149,151,152,154,155,156,157,158,159,160,161,],[-2,36,-77,-79,-22,-80,-19,-20,-17,-2,-18,-81,-21,-60,-55,-89,-58,-57,-2,-2,-90,-59,-2,-56,-2,-53,-2,-4,-6,-23,-54,-46,-51,-42,-45,-33,-35,-29,-32,-78,-70,-72,36,-85,-82,36,-5,-7,36,-48,-47,-49,-50,-52,-43,-44,-34,-30,-31,-73,36,36,-61,36,-71,-86,36,-88,-83,-64,-63,-65,-62,-9,-87,36,-8,-84,-66,36,-68,-69,-67,]),'LEFT_PARENTHESIS':([13,15,16,17,19,20,22,25,26,27,34,36,41,42,51,70,75,77,78,80,83,84,86,87,88,89,90,92,94,96,97,106,143,],[-28,-25,-26,-24,51,-27,51,60,51,51,64,51,71,51,51,-24,51,51,51,51,51,51,-37,-36,-41,-39,-40,-38,51,51,51,51,51,]),'$end':([3,6,21,23,24,29,30,31,32,33,34,35,38,40,43,44,46,48,49,50,52,53,54,55,56,57,58,61,67,68,73,74,76,79,82,85,91,93,95,98,99,101,103,105,107,110,118,119,120,121,122,123,124,125,126,127,128,134,139,140,142,144,145,146,148,149,152,156,157,159,160,161,],[0,-2,-77,-79,-22,-80,-1,-19,-20,-17,-2,-18,-81,-21,-60,-55,-89,-58,-57,-2,-2,-90,-59,-2,-56,-2,-53,-2,-4,-6,-23,-54,-46,-51,-42,-45,-33,-35,-29,-32,-78,-70,-72,-85,-82,-5,-48,-47,-49,-50,-52,-43,-44,-34,-30,-31,-73,-61,-71,-86,-88,-83,-64,-63,-65,-62,-87,-84,-66,-68,-69,-67,]),'END':([6,21,23,24,29,31,32,33,34,35,38,40,43,44,46,48,49,50,52,53,54,55,56,57,58,61,67,68,73,74,76,79,82,85,91,93,95,98,99,101,103,105,107,110,118,119,120,121,122,123,124,125,126,127,128,130,133,134,137,139,140,141,142,144,145,146,148,149,150,152,156,157,158,159,160,161,],[-2,-77,-79,-22,-80,-19,-20,-17,-2,-18,-81,-21,-60,-55,-89,-58,-57,-2,-2,-90,-59,-2,-56,-2,-53,-2,-4,-6,-23,-54,-46,-51,-42,-45,-33,-35,-29,-32,-78,-70,-72,-85,-82,-5,-48,-47,-49,-50,-52,-43,-44,-34,-30,-31,-73,142,145,-61,151,-71,-86,142,-88,-83,-64,-63,-65,-62,155,-87,-84,-66,160,-68,-69,-67,]),'DIVIDE':([6,21,23,34,43,44,46,48,49,50,53,54,56,58,67,68,74,99,110,122,],[-2,-77,-79,-2,-60,-55,-89,-58,-57,75,-90,-59,-56,-53,-4,-6,-54,-78,-5,-52,]),'FOR':([6,11,21,23,24,29,31,32,33,34,35,38,40,43,44,46,48,49,50,52,53,54,55,56,57,58,61,67,68,73,74,76,79,82,85,91,93,95,98,99,101,103,104,105,107,109,110,114,116,118,119,120,121,122,123,124,125,126,127,128,130,133,134,136,139,140,141,142,144,145,146,148,149,151,152,154,155,156,157,158,159,160,161,],[-2,28,-77,-79,-22,-80,-19,-20,-17,-2,-18,-81,-21,-60,-55,-89,-58,-57,-2,-2,-90,-59,-2,-56,-2,-53,-2,-4,-6,-23,-54,-46,-51,-42,-45,-33,-35,-29,-32,-78,-70,-72,28,-85,-82,28,-5,-7,28,-48,-47,-49,-50,-52,-43,-44,-34,-30,-31,-73,28,28,-61,28,-71,-86,28,-88,-83,-64,-63,-65,-62,-9,-87,28,-8,-84,-66,28,-68,-69,-67,]),'EQUALS':([5,6,21,23,34,39,99,],[17,-2,-77,-79,-2,70,-78,]),'TIMES':([6,21,23,34,43,44,46,48,49,50,53,54,56,58,67,68,74,99,110,122,],[-2,-77,-79,-2,-60,-55,-89,-58,-57,77,-90,-59,-56,-53,-4,-6,-54,-78,-5,-52,]),'FUNC':([1,2,4,7,8,9,10,14,18,73,138,],[-2,-2,12,-15,-13,-16,-14,-74,-76,-23,-75,]),'IN':([6,21,23,63,99,],[-2,-77,-79,108,-78,]),'FALSE':([13,15,16,17,19,20,22,26,27,36,42,47,51,70,75,77,78,80,83,84,86,87,88,89,90,92,94,96,97,106,143,],[-28,-25,-26,-24,53,-27,53,53,53,53,53,53,53,-24,53,53,53,53,53,53,-37,-36,-41,-39,-40,-38,53,53,53,53,53,]),'RIGHT_PARENTHESIS':([6,21,23,34,37,43,44,46,48,49,50,52,53,54,55,56,57,58,60,64,66,67,68,69,71,74,76,79,81,82,85,91,93,95,98,99,110,111,113,115,118,119,120,121,122,123,124,125,126,127,135,],[-2,-77,-79,-2,68,-60,-55,-89,-58,-57,-2,-2,-90,-59,-2,-56,-2,-53,100,-3,110,-4,-6,-2,116,-54,-46,-51,122,-42,-45,-33,-35,-29,-32,-78,-5,-10,-12,136,-48,-47,-49,-50,-52,-43,-44,-34,-30,-31,-11,]),'ELSE':([6,21,23,24,29,31,32,33,34,35,38,40,43,44,46,48,49,50,52,53,54,55,56,57,58,61,67,68,73,74,76,79,82,85,91,93,95,98,99,101,103,105,107,110,118,119,120,121,122,123,124,125,126,127,128,133,134,139,140,142,144,145,146,148,149,152,156,157,159,160,161,],[-2,-77,-79,-22,-80,-19,-20,-17,-2,-18,-81,-21,-60,-55,-89,-58,-57,-2,-2,-90,-59,-2,-56,-2,-53,-2,-4,-6,-23,-54,-46,-51,-42,-45,-33,-35,-29,-32,-78,-70,-72,-85,-82,-5,-48,-47,-49,-50,-52,-43,-44,-34,-30,-31,-73,147,-61,-71,-86,-88,-83,-64,-63,-65,-62,-87,-84,-66,-68,-69,-67,]),'ID':([0,1,2,6,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,31,32,33,34,35,36,37,38,40,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,61,64,67,68,70,71,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,103,104,105,106,107,108,109,110,112,114,116,118,119,120,121,122,123,124,125,126,127,128,130,133,134,136,138,139,140,141,142,143,144,145,146,148,149,151,152,154,155,156,157,158,159,160,161,],[6,6,6,-2,34,41,-28,-74,-25,-26,-24,-76,34,-27,-77,34,-79,-22,34,34,6,-80,-19,-20,-17,-2,-18,34,6,-81,-21,34,-60,-55,-89,6,-58,-57,-2,34,-2,-90,-59,-2,-56,-2,-53,-2,-3,-4,-6,-24,6,-23,-54,34,-46,34,34,-51,34,-42,34,34,-45,-37,-36,-41,-39,-40,-33,-38,-35,34,-29,34,34,-32,-78,-70,-72,34,-85,34,-82,6,34,-5,6,-7,34,-48,-47,-49,-50,-52,-43,-44,-34,-30,-31,-73,34,34,-61,34,-75,-71,-86,34,-88,34,-83,-64,-63,-65,-62,-9,-87,34,-8,-84,-66,34,-68,-69,-67,]),'TRUE':([13,15,16,17,19,20,22,26,27,36,42,47,51,70,75,77,78,80,83,84,86,87,88,89,90,92,94,96,97,106,143,],[-28,-25,-26,-24,46,-27,46,46,46,46,46,46,46,-24,46,46,46,46,46,46,-37,-36,-41,-39,-40,-38,46,46,46,46,46,]),'PLUS_EQUALS':([5,6,21,23,34,39,99,],[20,-2,-77,-79,-2,20,-78,]),'AND':([6,21,23,34,43,44,46,48,49,50,52,53,54,55,56,57,58,67,68,74,76,79,82,85,91,93,99,110,118,119,120,121,122,123,124,125,],[-2,-77,-79,-2,-60,-55,-89,-58,-57,-2,-2,-90,-59,-2,-56,96,-53,-4,-6,-54,-46,-51,-42,-45,-33,-35,-78,-5,-48,-47,-49,-50,-52,-43,-44,-34,]),'FROM':([6,21,23,63,99,],[-2,-77,-79,106,-78,]),'GREATER':([6,21,23,34,43,44,46,48,49,50,52,53,54,55,56,58,67,68,74,76,79,82,85,99,110,118,119,120,121,122,123,124,],[-2,-77,-79,-2,-60,-55,-89,-58,-57,-2,-2,-90,-59,86,-56,-53,-4,-6,-54,-46,-51,-42,-45,-78,-5,-48,-47,-49,-50,-52,-43,-44,]),'DIVIDE_EQUALS':([5,6,21,23,34,39,99,],[16,-2,-77,-79,-2,16,-78,]),'STRING_CONSTANT':([13,15,16,17,19,20,22,26,27,36,42,47,51,70,75,77,78,80,83,84,86,87,88,89,90,92,94,96,97,102,106,143,],[-28,-25,-26,-24,54,-27,54,54,54,54,54,54,54,-24,54,54,54,54,54,54,-37,-36,-41,-39,-40,-38,54,54,54,129,54,54,]),'LEFT_BRACKET':([6,17,34,],[22,42,22,]),'OR':([6,21,23,34,43,44,46,48,49,50,52,53,54,55,56,57,58,67,68,74,76,79,82,85,91,93,99,110,118,119,120,121,122,123,124,125,],[-2,-77,-79,-2,-60,-55,-89,-58,-57,-2,-2,-90,-59,-2,-56,97,-53,-4,-6,-54,-46,-51,-42,-45,-33,-35,-78,-5,-48,-47,-49,-50,-52,-43,-44,-34,]),'MOD':([6,21,23,34,43,44,46,48,49,50,53,54,56,58,67,68,74,99,110,122,],[-2,-77,-79,-2,-60,-55,-89,-58,-57,80,-90,-59,-56,-53,-4,-6,-54,-78,-5,-52,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'BOOL_CONSTANT':([19,22,26,27,36,42,47,51,75,77,78,80,83,84,94,96,97,106,143,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'relational_operator':([55,],[94,]),'call_function':([11,19,22,26,27,36,42,51,75,77,78,80,83,84,94,96,97,104,106,109,116,130,133,136,141,143,154,158,],[24,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,24,44,24,24,24,24,24,24,44,24,24,]),'post_else':([154,158,],[157,159,]),'post_parameters':([69,],[111,]),'cond':([19,26,27,36,51,96,97,],[45,61,62,65,81,126,127,]),'post_print':([61,],[101,]),'post_cycle':([62,132,153,],[105,144,156,]),'post_cond':([57,],[95,]),'post_post_cycle':([130,141,],[140,152,]),'post_condition':([109,133,],[134,146,]),'for':([11,104,109,116,130,133,136,141,154,158,],[29,29,29,29,29,29,29,29,29,29,]),'post_call_function':([37,],[67,]),'program':([0,],[3,]),'statement':([11,104,109,116,130,133,136,141,154,158,],[30,130,133,137,141,133,150,141,158,158,]),'factor':([19,22,26,27,36,42,51,75,77,78,80,83,84,94,96,97,106,143,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'print':([11,104,109,116,130,133,136,141,154,158,],[31,31,31,31,31,31,31,31,31,31,]),'post_variable':([1,2,],[8,10,]),'empty':([1,2,6,34,50,52,55,57,61,69,],[9,9,23,23,79,85,93,98,103,113,]),'function':([4,],[11,]),'post_post_condition':([133,],[149,]),'post_for':([63,],[107,]),'read':([11,104,109,116,130,133,136,141,154,158,],[32,32,32,32,32,32,32,32,32,32,]),'assignment':([0,1,2,11,104,109,116,130,133,136,141,154,158,],[1,1,1,33,33,33,33,33,33,33,33,33,33,]),'post_term':([50,],[76,]),'else':([133,],[148,]),'post_identifier':([6,34,],[21,21,]),'variable':([0,1,2,],[4,7,7,]),'variable_constant':([19,22,26,27,36,42,47,51,75,77,78,80,83,84,94,96,97,106,143,],[58,58,58,58,58,58,74,58,58,58,58,58,58,58,58,58,58,58,58,]),'post_post_else':([158,],[161,]),'condition':([11,104,109,116,130,133,136,141,154,158,],[35,35,35,35,35,35,35,35,35,35,]),'post_def_function':([71,],[114,]),'term':([19,22,26,27,36,42,51,75,77,78,80,83,84,94,96,97,106,143,],[52,52,52,52,52,52,52,118,119,120,121,52,52,52,52,52,52,52,]),'post_list':([5,],[14,]),'parameters':([37,71,112,],[66,115,135,]),'pre_call_function':([11,19,22,26,27,36,42,51,75,77,78,80,83,84,94,96,97,104,106,109,116,130,133,136,141,143,154,158,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'list':([0,1,2,],[2,2,2,]),'while':([11,104,109,116,130,133,136,141,154,158,],[38,38,38,38,38,38,38,38,38,38,]),'post_expression':([55,],[91,]),'assignment_operator':([5,39,],[19,19,]),'exp':([19,22,26,27,36,42,51,83,84,94,96,97,106,143,],[55,59,55,55,55,72,55,123,124,125,55,55,131,153,]),'identifier':([0,1,2,11,19,22,26,27,28,36,37,42,47,51,71,75,77,78,80,83,84,94,96,97,104,106,108,109,112,116,130,133,136,141,143,154,158,],[5,5,5,39,56,56,56,56,63,56,69,56,56,56,69,56,56,56,56,56,56,56,56,56,39,56,132,39,69,39,39,39,39,39,56,39,39,]),'expression':([19,26,27,36,51,96,97,],[57,57,57,57,57,57,57,]),'post_exp':([52,],[82,]),'loop':([11,104,109,116,130,133,136,141,154,158,],[40,40,40,40,40,40,40,40,40,40,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> variable function statement','program',3,'p_program','parser.py',18),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',21),
  ('pre_call_function -> ID LEFT_PARENTHESIS','pre_call_function',2,'p_pre_call_function','parser.py',25),
  ('call_function -> pre_call_function post_call_function','call_function',2,'p_call_function','parser.py',28),
  ('post_call_function -> parameters RIGHT_PARENTHESIS','post_call_function',2,'p_post_call_function','parser.py',31),
  ('post_call_function -> RIGHT_PARENTHESIS','post_call_function',1,'p_post_call_function','parser.py',32),
  ('function -> FUNC ID LEFT_PARENTHESIS post_def_function','function',4,'p_function','parser.py',35),
  ('post_def_function -> parameters RIGHT_PARENTHESIS statement END','post_def_function',4,'p_post_def_function','parser.py',38),
  ('post_def_function -> RIGHT_PARENTHESIS statement END','post_def_function',3,'p_post_def_function','parser.py',39),
  ('parameters -> identifier post_parameters','parameters',2,'p_parameters','parser.py',42),
  ('post_parameters -> COMMA parameters','post_parameters',2,'p_post_parameters','parser.py',45),
  ('post_parameters -> empty','post_parameters',1,'p_post_parameters','parser.py',46),
  ('variable -> assignment post_variable','variable',2,'p_variable','parser.py',49),
  ('variable -> list post_variable','variable',2,'p_variable','parser.py',50),
  ('post_variable -> variable','post_variable',1,'p_post_variable','parser.py',53),
  ('post_variable -> empty','post_variable',1,'p_post_variable','parser.py',54),
  ('statement -> assignment','statement',1,'p_statement','parser.py',57),
  ('statement -> condition','statement',1,'p_statement','parser.py',58),
  ('statement -> print','statement',1,'p_statement','parser.py',59),
  ('statement -> read','statement',1,'p_statement','parser.py',60),
  ('statement -> loop','statement',1,'p_statement','parser.py',61),
  ('statement -> call_function','statement',1,'p_statement','parser.py',62),
  ('assignment -> identifier assignment_operator cond EOL','assignment',4,'p_assignment','parser.py',64),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',67),
  ('assignment_operator -> TIMES_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',68),
  ('assignment_operator -> DIVIDE_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',69),
  ('assignment_operator -> PLUS_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',70),
  ('assignment_operator -> MINUS_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',71),
  ('cond -> expression post_cond','cond',2,'p_cond','parser.py',74),
  ('post_cond -> AND cond','post_cond',2,'p_post_cond','parser.py',77),
  ('post_cond -> OR cond','post_cond',2,'p_post_cond','parser.py',78),
  ('post_cond -> empty','post_cond',1,'p_post_cond','parser.py',79),
  ('expression -> exp post_expression','expression',2,'p_expression','parser.py',82),
  ('post_expression -> relational_operator exp','post_expression',2,'p_post_expression','parser.py',85),
  ('post_expression -> empty','post_expression',1,'p_post_expression','parser.py',86),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',89),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',90),
  ('relational_operator -> GREATER_EQUALS','relational_operator',1,'p_relational_operator','parser.py',91),
  ('relational_operator -> LESS_EQUALS','relational_operator',1,'p_relational_operator','parser.py',92),
  ('relational_operator -> EQUALS_EQUALS','relational_operator',1,'p_relational_operator','parser.py',93),
  ('relational_operator -> NOT_EQUALS','relational_operator',1,'p_relational_operator','parser.py',94),
  ('exp -> term post_exp','exp',2,'p_exp','parser.py',97),
  ('post_exp -> PLUS exp','post_exp',2,'p_post_exp','parser.py',100),
  ('post_exp -> MINUS exp','post_exp',2,'p_post_exp','parser.py',101),
  ('post_exp -> empty','post_exp',1,'p_post_exp','parser.py',102),
  ('term -> factor post_term','term',2,'p_term','parser.py',105),
  ('post_term -> TIMES term','post_term',2,'p_post_term','parser.py',108),
  ('post_term -> DIVIDE term','post_term',2,'p_post_term','parser.py',109),
  ('post_term -> PERCENTAGE term','post_term',2,'p_post_term','parser.py',110),
  ('post_term -> MOD term','post_term',2,'p_post_term','parser.py',111),
  ('post_term -> empty','post_term',1,'p_post_term','parser.py',112),
  ('factor -> LEFT_PARENTHESIS cond RIGHT_PARENTHESIS','factor',3,'p_factor','parser.py',115),
  ('factor -> variable_constant','factor',1,'p_factor','parser.py',116),
  ('factor -> MINUS variable_constant','factor',2,'p_factor','parser.py',117),
  ('factor -> call_function','factor',1,'p_factor','parser.py',118),
  ('variable_constant -> identifier','variable_constant',1,'p_variable_constant','parser.py',121),
  ('variable_constant -> INT_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',122),
  ('variable_constant -> DOUBLE_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',123),
  ('variable_constant -> STRING_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',124),
  ('variable_constant -> BOOL_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',125),
  ('condition -> IF cond COLON post_condition','condition',4,'p_condition','parser.py',129),
  ('post_condition -> statement post_post_condition','post_condition',2,'p_post_condition','parser.py',132),
  ('post_post_condition -> post_condition','post_post_condition',1,'p_post_post_condition','parser.py',135),
  ('post_post_condition -> END','post_post_condition',1,'p_post_post_condition','parser.py',136),
  ('post_post_condition -> else','post_post_condition',1,'p_post_post_condition','parser.py',137),
  ('else -> ELSE COLON post_else','else',3,'p_else','parser.py',141),
  ('post_else -> statement post_post_else','post_else',2,'p_post_else','parser.py',144),
  ('post_post_else -> post_else','post_post_else',1,'p_post_post_else','parser.py',147),
  ('post_post_else -> END','post_post_else',1,'p_post_post_else','parser.py',148),
  ('print -> PRINT cond post_print','print',3,'p_print','parser.py',151),
  ('post_print -> COMMA STRING_CONSTANT EOL','post_print',3,'p_post_print','parser.py',154),
  ('post_print -> empty','post_print',1,'p_post_print','parser.py',155),
  ('read -> READ LEFT_PARENTHESIS RIGHT_PARENTHESIS EOL','read',4,'p_read','parser.py',158),
  ('list -> identifier post_list','list',2,'p_list','parser.py',161),
  ('post_list -> EQUALS LEFT_BRACKET exp RIGHT_BRACKET EOL','post_list',5,'p_post_list','parser.py',164),
  ('post_list -> EOL','post_list',1,'p_post_list','parser.py',165),
  ('identifier -> ID post_identifier','identifier',2,'p_identifier','parser.py',168),
  ('post_identifier -> LEFT_BRACKET exp RIGHT_BRACKET','post_identifier',3,'p_post_identifier','parser.py',171),
  ('post_identifier -> empty','post_identifier',1,'p_post_identifier','parser.py',172),
  ('loop -> for','loop',1,'p_loop','parser.py',175),
  ('loop -> while','loop',1,'p_loop','parser.py',176),
  ('for -> FOR identifier post_for','for',3,'p_for','parser.py',180),
  ('post_for -> IN identifier post_cycle','post_for',3,'p_post_for','parser.py',183),
  ('post_for -> FROM exp TO exp post_cycle','post_for',5,'p_post_for','parser.py',184),
  ('while -> WHILE cond post_cycle','while',3,'p_while','parser.py',188),
  ('post_cycle -> COLON statement post_post_cycle','post_cycle',3,'p_post_cycle','parser.py',192),
  ('post_post_cycle -> statement post_post_cycle','post_post_cycle',2,'p_post_post_cycle','parser.py',195),
  ('post_post_cycle -> END','post_post_cycle',1,'p_post_post_cycle','parser.py',196),
  ('BOOL_CONSTANT -> TRUE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',199),
  ('BOOL_CONSTANT -> FALSE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',200),
]
