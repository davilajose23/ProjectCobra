
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '6B4F2FDA9DC942E2CFA40B73DDC226FD'
    
_lr_action_items = {'RETURN':([8,24,25,26,28,33,34,35,46,57,63,82,83,84,85,86,87,89,99,100,161,187,188,206,211,],[-127,-6,-5,-7,-127,-8,-10,-9,-127,-64,-57,-55,-26,-24,-25,-54,-52,-53,-56,-15,-127,207,-127,216,207,]),'LESS':([37,49,58,65,66,68,70,71,73,74,75,76,77,78,80,101,103,110,111,113,114,130,133,138,139,155,157,160,168,184,190,191,192,193,194,195,196,],[-108,-108,-127,-107,-100,-125,-104,-90,-105,-84,-126,-106,-73,-103,-98,-117,-119,-99,-127,-127,141,-89,-95,-83,-87,-27,-30,-118,-102,-29,-92,-91,-93,-94,-97,-86,-85,]),'READ':([8,24,25,26,28,32,33,34,35,46,57,63,82,86,87,89,99,100,118,119,158,159,161,187,188,211,215,222,],[-127,-6,-5,-7,-127,41,-8,-10,-9,41,-64,-57,-55,-54,-52,-53,-56,-15,-127,-127,41,41,-127,41,-127,41,-127,41,]),'VOID':([7,],[21,]),'RIGHT_BRACKET':([37,49,58,65,66,68,70,71,73,74,75,76,78,80,101,103,110,111,113,123,130,133,138,139,155,157,160,168,184,190,191,192,193,194,195,196,],[-108,-108,-127,-107,-100,-125,-104,-90,-105,-84,-126,-106,-103,-98,-117,-119,-99,-127,-127,160,-89,-95,-83,-87,-27,-30,-118,-102,-29,-92,-91,-93,-94,-97,-86,-85,]),'EOL':([9,28,36,37,38,40,44,45,47,48,49,50,53,56,58,60,61,65,66,67,68,70,71,73,74,75,76,77,78,79,80,92,101,103,104,106,107,109,110,111,113,114,115,118,119,120,122,124,128,130,133,138,139,146,147,149,152,155,157,160,162,168,171,184,190,191,192,193,194,195,196,197,198,205,213,214,215,216,218,219,224,225,231,234,237,238,239,241,],[28,28,28,-108,-127,28,-120,28,28,28,-108,28,-121,28,-127,-19,-17,-107,-100,-127,-125,-104,-90,-105,-84,-126,-106,-73,-103,-67,-98,28,-117,-119,-18,-116,-113,-115,-99,-127,-127,-127,-127,28,28,-123,-58,28,-114,-89,-95,-83,-87,-72,-75,-66,-70,-27,-30,-118,28,-102,-74,-29,-92,-91,-93,-94,-97,-86,-85,-68,-69,-124,-122,-109,28,28,-47,28,28,28,-47,-47,28,-47,28,28,]),'EQUALS_EQUALS':([37,49,58,65,66,68,70,71,73,74,75,76,77,78,80,101,103,110,111,113,114,130,133,138,139,155,157,160,168,184,190,191,192,193,194,195,196,],[-108,-108,-127,-107,-100,-125,-104,-90,-105,-84,-126,-106,-73,-103,-98,-117,-119,-99,-127,-127,145,-89,-95,-83,-87,-27,-30,-118,-102,-29,-92,-91,-93,-94,-97,-86,-85,]),'WHILE':([8,24,25,26,28,32,33,34,35,46,57,63,82,86,87,89,99,100,118,119,158,159,161,187,188,211,215,222,],[-127,-6,-5,-7,-127,52,-8,-10,-9,52,-64,-57,-55,-54,-52,-53,-56,-15,-127,-127,52,52,-127,52,-127,52,-127,52,]),'PRINT':([8,24,25,26,28,32,33,34,35,46,57,63,82,86,87,89,99,100,118,119,158,159,161,187,188,211,215,222,],[-127,-6,-5,-7,-127,42,-8,-10,-9,42,-64,-57,-55,-54,-52,-53,-56,-15,-127,-127,42,42,-127,42,-127,42,-127,42,]),'GREATER_EQUALS':([37,49,58,65,66,68,70,71,73,74,75,76,77,78,80,101,103,110,111,113,114,130,133,138,139,155,157,160,168,184,190,191,192,193,194,195,196,],[-108,-108,-127,-107,-100,-125,-104,-90,-105,-84,-126,-106,-73,-103,-98,-117,-119,-99,-127,-127,142,-89,-95,-83,-87,-27,-30,-118,-102,-29,-92,-91,-93,-94,-97,-86,-85,]),'MINUS':([37,42,49,51,52,58,65,66,68,70,71,72,73,74,75,76,78,80,93,94,95,96,97,98,101,102,103,110,111,112,113,116,117,129,130,131,132,133,134,136,137,140,141,142,143,144,145,148,150,151,155,157,160,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,182,184,190,191,192,193,194,207,216,],[-108,69,-108,69,69,-127,-107,-100,-125,-104,-90,-101,-105,-84,-126,-106,-103,-98,-63,-60,-61,-59,69,-62,-117,69,-119,-99,-127,69,136,69,69,-96,-89,-96,-96,-95,-96,-88,-88,69,-76,-76,-76,-76,-76,-76,-71,-71,-27,-30,-118,69,69,69,69,-102,69,69,-77,-79,-82,-80,-81,-78,69,69,69,69,-29,-92,-91,-93,-94,-97,69,69,]),'COMMA':([37,38,49,58,65,66,67,68,70,71,73,74,75,76,77,78,79,80,101,103,110,111,113,114,115,130,133,138,139,146,147,149,152,154,155,157,160,168,171,184,190,191,192,193,194,195,196,197,198,212,221,],[-108,59,-108,-127,-107,-100,108,-125,-104,-90,-105,-84,-126,-106,-73,-103,-67,-98,-117,-119,-99,-127,-127,-127,-127,-89,-95,-83,-87,-72,-75,-66,-70,182,-27,-30,-118,-102,-74,-29,-92,-91,-93,-94,-97,-86,-85,-68,-69,-49,228,]),'DIVIDE':([37,49,58,65,66,68,70,71,73,75,76,78,80,101,103,110,111,155,157,160,168,184,194,],[-108,-108,-127,-107,-100,-125,-104,-90,-105,-126,-106,-103,-98,-117,-119,-99,129,-27,-30,-118,-102,-29,-97,]),'MINUS_EQUALS':([49,55,58,101,103,160,],[-108,93,-127,-117,-119,-118,]),'END_MAIN':([28,33,34,35,46,54,63,82,83,84,85,86,87,89,99,],[-127,-8,-10,-9,-127,92,-57,-55,-26,-24,-25,-54,-52,-53,-56,]),'NOT_EQUALS':([37,49,58,65,66,68,70,71,73,74,75,76,77,78,80,101,103,110,111,113,114,130,133,138,139,155,157,160,168,184,190,191,192,193,194,195,196,],[-108,-108,-127,-107,-100,-125,-104,-90,-105,-84,-126,-106,-73,-103,-98,-117,-119,-99,-127,-127,143,-89,-95,-83,-87,-27,-30,-118,-102,-29,-92,-91,-93,-94,-97,-86,-85,]),'DOUBLE_CONSTANT':([42,51,52,69,72,93,94,95,96,97,98,102,112,116,117,129,131,132,134,136,137,140,141,142,143,144,145,148,150,151,164,165,166,167,169,170,172,173,174,175,176,177,178,179,180,182,207,216,],[73,73,73,73,-101,-63,-60,-61,-59,73,-62,73,73,73,73,-96,-96,-96,-96,-88,-88,73,-76,-76,-76,-76,-76,-76,-71,-71,73,73,73,73,73,73,-77,-79,-82,-80,-81,-78,73,73,73,73,73,73,]),'LESS_EQUALS':([37,49,58,65,66,68,70,71,73,74,75,76,77,78,80,101,103,110,111,113,114,130,133,138,139,155,157,160,168,184,190,191,192,193,194,195,196,],[-108,-108,-127,-107,-100,-125,-104,-90,-105,-84,-126,-106,-73,-103,-98,-117,-119,-99,-127,-127,144,-89,-95,-83,-87,-27,-30,-118,-102,-29,-92,-91,-93,-94,-97,-86,-85,]),'TO':([37,49,58,65,66,68,70,71,73,74,75,76,78,80,101,103,110,111,113,130,133,138,139,153,155,157,160,168,184,190,191,192,193,194,195,196,],[-108,-108,-127,-107,-100,-125,-104,-90,-105,-84,-126,-106,-103,-98,-117,-119,-99,-127,-127,-89,-95,-83,-87,180,-27,-30,-118,-102,-29,-92,-91,-93,-94,-97,-86,-85,]),'INT_CONSTANT':([42,51,52,69,72,93,94,95,96,97,98,102,112,116,117,129,131,132,134,136,137,140,141,142,143,144,145,148,150,151,164,165,166,167,169,170,172,173,174,175,176,177,178,179,180,182,207,216,],[70,70,70,70,-101,-63,-60,-61,-59,70,-62,70,70,70,70,-96,-96,-96,-96,-88,-88,70,-76,-76,-76,-76,-76,-76,-71,-71,70,70,70,70,70,70,-77,-79,-82,-80,-81,-78,70,70,70,70,70,70,]),'PLUS':([37,49,58,65,66,68,70,71,73,74,75,76,78,80,101,103,110,111,113,130,133,155,157,160,168,184,190,191,192,193,194,],[-108,-108,-127,-107,-100,-125,-104,-90,-105,-84,-126,-106,-103,-98,-117,-119,-99,-127,137,-89,-95,-27,-30,-118,-102,-29,-92,-91,-93,-94,-97,]),'COLON':([37,49,58,65,66,68,70,71,73,74,75,76,77,78,79,80,90,91,101,103,110,111,113,114,115,130,133,138,139,146,147,149,152,155,157,160,168,171,184,190,191,192,193,194,195,196,197,198,199,204,],[-108,-108,-127,-107,-100,-125,-104,-90,-105,-84,-126,-106,-73,-103,-67,-98,118,119,-117,-119,-99,-127,-127,-127,-127,-89,-95,-83,-87,-72,-75,-66,-70,-27,-30,-118,-102,-74,-29,-92,-91,-93,-94,-97,-86,-85,-68,-69,119,215,]),'PERCENTAGE':([37,49,58,65,66,68,70,71,73,75,76,78,80,101,103,110,111,155,157,160,168,184,194,],[-108,-108,-127,-107,-100,-125,-104,-90,-105,-126,-106,-103,-98,-117,-119,-99,132,-27,-30,-118,-102,-29,-97,]),'PLUS_EQUALS':([49,55,58,101,103,160,],[-108,98,-127,-117,-119,-118,]),'LEFT_PARENTHESIS':([39,41,42,49,51,52,62,72,88,93,94,95,96,97,98,102,112,116,117,129,131,132,134,136,137,140,141,142,143,144,145,148,150,151,164,165,166,167,169,170,172,173,174,175,176,177,178,179,180,182,207,216,],[-37,64,72,-28,72,72,105,-101,117,-63,-60,-61,-59,72,-62,72,72,72,72,-96,-96,-96,-96,-88,-88,72,-76,-76,-76,-76,-76,-76,-71,-71,72,72,72,72,72,72,-77,-79,-82,-80,-81,-78,72,72,72,72,72,72,]),'$end':([2,3,10,20,28,30,33,34,35,92,121,],[0,-4,-2,-3,-127,-1,-8,-10,-9,-127,-23,]),'END':([28,33,34,35,46,63,82,83,84,85,86,87,89,99,185,186,201,202,203,206,223,226,230,232,],[-127,-8,-10,-9,-127,-57,-55,-26,-24,-25,-54,-52,-53,-56,-127,205,214,-110,-111,218,231,234,-112,238,]),'STRING':([0,4,7,8,27,28,33,34,35,57,100,105,126,161,188,228,],[-65,11,11,-65,-65,-127,-8,-10,-9,-64,-15,-65,11,-65,-65,-65,]),'FOR':([8,24,25,26,28,32,33,34,35,46,57,63,82,86,87,89,99,100,118,119,158,159,161,187,188,211,215,222,],[-127,-6,-5,-7,-127,43,-8,-10,-9,43,-64,-57,-55,-54,-52,-53,-56,-15,-127,-127,43,43,-127,43,-127,43,-127,43,]),'EQUALS':([49,55,58,101,103,160,],[-108,96,-127,-117,-119,-118,]),'ELSE':([28,33,34,35,46,63,82,83,84,85,86,87,89,99,185,],[-127,-8,-10,-9,-127,-57,-55,-26,-24,-25,-54,-52,-53,-56,204,]),'FUNC':([0,5,6,8,24,25,26,28,33,34,35,57,100,127,208,209,210,217,220,233,240,242,243,],[7,7,7,-127,-6,-5,-7,-127,-8,-10,-9,-64,-15,-34,-39,-41,-40,-42,-38,-43,-44,-46,-45,]),'FALSE':([42,51,52,69,72,93,94,95,96,97,98,102,112,116,117,129,131,132,134,136,137,140,141,142,143,144,145,148,150,151,164,165,166,167,169,170,172,173,174,175,176,177,178,179,180,182,207,216,],[75,75,75,75,-101,-63,-60,-61,-59,75,-62,75,75,75,75,-96,-96,-96,-96,-88,-88,75,-76,-76,-76,-76,-76,-76,-71,-71,75,75,75,75,75,75,-77,-79,-82,-80,-81,-78,75,75,75,75,75,75,]),'RIGHT_PARENTHESIS':([37,49,58,64,65,66,68,70,71,73,74,75,76,77,78,79,80,101,103,105,110,111,113,114,115,117,125,130,133,135,138,139,146,147,149,152,154,155,156,157,160,168,171,181,183,184,190,191,192,193,194,195,196,197,198,200,212,221,227,229,235,236,],[-108,-108,-127,106,-107,-100,-125,-104,-90,-105,-84,-126,-106,-73,-103,-67,-98,-117,-119,124,-99,-127,-127,-127,-127,157,162,-89,-95,168,-83,-87,-72,-75,-66,-70,-127,-27,184,-30,-118,-102,-74,-31,-33,-29,-92,-91,-93,-94,-97,-86,-85,-68,-69,-32,-49,-127,-64,-51,-48,-50,]),'TIMES':([37,49,58,65,66,68,70,71,73,75,76,78,80,101,103,110,111,155,157,160,168,184,194,],[-108,-108,-127,-107,-100,-125,-104,-90,-105,-126,-106,-103,-98,-117,-119,-99,131,-27,-30,-118,-102,-29,-97,]),'ID':([8,11,12,13,14,15,21,22,23,24,25,26,28,29,31,32,33,34,35,42,43,46,51,52,57,59,63,69,72,82,86,87,89,93,94,95,96,97,98,99,100,102,112,116,117,118,119,129,131,132,134,136,137,140,141,142,143,144,145,148,150,151,158,159,161,163,164,165,166,167,169,170,172,173,174,175,176,177,178,179,180,182,187,188,189,207,211,215,216,222,],[-127,-13,-11,-12,-14,-16,-36,-35,-16,-6,-5,-7,-127,37,39,49,-8,-10,-9,49,37,49,49,49,-64,37,-57,37,-101,-55,-54,-52,-53,-63,-60,-61,-59,49,-62,-56,-15,49,49,49,49,-127,-127,-96,-96,-96,-96,-88,-88,49,-76,-76,-76,-76,-76,-76,-71,-71,49,49,-127,-16,49,49,49,49,49,49,-77,-79,-82,-80,-81,-78,49,49,49,49,49,-127,37,49,49,-127,49,49,]),'TRUE':([42,51,52,69,72,93,94,95,96,97,98,102,112,116,117,129,131,132,134,136,137,140,141,142,143,144,145,148,150,151,164,165,166,167,169,170,172,173,174,175,176,177,178,179,180,182,207,216,],[68,68,68,68,-101,-63,-60,-61,-59,68,-62,68,68,68,68,-96,-96,-96,-96,-88,-88,68,-76,-76,-76,-76,-76,-76,-71,-71,68,68,68,68,68,68,-77,-79,-82,-80,-81,-78,68,68,68,68,68,68,]),'IF':([8,24,25,26,28,32,33,34,35,46,57,63,82,86,87,89,99,100,118,119,158,159,161,187,188,211,215,222,],[-127,-6,-5,-7,-127,51,-8,-10,-9,51,-64,-57,-55,-54,-52,-53,-56,-15,-127,-127,51,51,-127,51,-127,51,-127,51,]),'AND':([37,49,58,65,66,68,70,71,73,74,75,76,77,78,79,80,101,103,110,111,113,114,115,130,133,138,139,146,147,155,157,160,168,171,184,190,191,192,193,194,195,196,],[-108,-108,-127,-107,-100,-125,-104,-90,-105,-84,-126,-106,-73,-103,-67,-98,-117,-119,-99,-127,-127,-127,150,-89,-95,-83,-87,-72,-75,-27,-30,-118,-102,-74,-29,-92,-91,-93,-94,-97,-86,-85,]),'FROM':([37,58,81,101,103,160,],[-108,-127,116,-117,-119,-118,]),'GREATER':([37,49,58,65,66,68,70,71,73,74,75,76,77,78,80,101,103,110,111,113,114,130,133,138,139,155,157,160,168,184,190,191,192,193,194,195,196,],[-108,-108,-127,-107,-100,-125,-104,-90,-105,-84,-126,-106,-73,-103,-98,-117,-119,-99,-127,-127,148,-89,-95,-83,-87,-27,-30,-118,-102,-29,-92,-91,-93,-94,-97,-86,-85,]),'INT':([0,4,7,8,27,28,33,34,35,57,100,105,126,161,188,228,],[-65,12,12,-65,-65,-127,-8,-10,-9,-64,-15,-65,12,-65,-65,-65,]),'DOUBLE':([0,4,7,8,27,28,33,34,35,57,100,105,126,161,188,228,],[-65,13,13,-65,-65,-127,-8,-10,-9,-64,-15,-65,13,-65,-65,-65,]),'DIVIDE_EQUALS':([49,55,58,101,103,160,],[-108,95,-127,-117,-119,-118,]),'BOOL':([0,4,7,8,27,28,33,34,35,57,100,105,126,161,188,228,],[-65,14,14,-65,-65,-127,-8,-10,-9,-64,-15,-65,14,-65,-65,-65,]),'STRING_CONSTANT':([42,51,52,69,72,93,94,95,96,97,98,102,108,112,116,117,129,131,132,134,136,137,140,141,142,143,144,145,148,150,151,164,165,166,167,169,170,172,173,174,175,176,177,178,179,180,182,207,216,],[76,76,76,76,-101,-63,-60,-61,-59,76,-62,76,128,76,76,76,-96,-96,-96,-96,-88,-88,76,-76,-76,-76,-76,-76,-76,-71,-71,76,76,76,76,76,76,-77,-79,-82,-80,-81,-78,76,76,76,76,76,76,]),'TIMES_EQUALS':([49,55,58,101,103,160,],[-108,94,-127,-117,-119,-118,]),'LEFT_BRACKET':([37,49,58,],[-108,-108,102,]),'MAIN':([0,1,5,6,8,16,17,18,19,24,25,26,28,33,34,35,57,100,127,208,209,210,217,220,233,240,242,243,],[9,9,-127,9,-127,-20,-21,-22,9,-6,-5,-7,-127,-8,-10,-9,-64,-15,-34,-39,-41,-40,-42,-38,-43,-44,-46,-45,]),'OR':([37,49,58,65,66,68,70,71,73,74,75,76,77,78,79,80,101,103,110,111,113,114,115,130,133,138,139,146,147,155,157,160,168,171,184,190,191,192,193,194,195,196,],[-108,-108,-127,-107,-100,-125,-104,-90,-105,-84,-126,-106,-73,-103,-67,-98,-117,-119,-99,-127,-127,-127,151,-89,-95,-83,-87,-72,-75,-27,-30,-118,-102,-74,-29,-92,-91,-93,-94,-97,-86,-85,]),'MOD':([37,49,58,65,66,68,70,71,73,75,76,78,80,101,103,110,111,155,157,160,168,184,194,],[-108,-108,-127,-107,-100,-125,-104,-90,-105,-126,-106,-103,-98,-117,-119,-99,134,-27,-30,-118,-102,-29,-97,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'optional_eol':([28,92,118,119,215,],[33,121,158,159,222,]),'post_functions':([5,],[16,]),'post_call_function':([117,],[155,]),'relational_operator':([114,],[140,]),'call_function':([32,42,46,51,52,97,102,112,116,117,140,158,159,164,165,166,167,169,170,178,179,180,182,187,207,211,216,222,],[40,66,40,66,66,66,66,66,66,66,66,40,40,66,66,66,66,66,66,66,66,66,66,40,66,40,66,40,]),'reset_scope':([218,231,234,238,],[225,237,239,241,]),'BOOL_CONSTANT':([42,51,52,69,97,102,112,116,117,140,164,165,166,167,169,170,178,179,180,182,207,216,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'required_eol':([9,28,36,40,45,47,48,50,56,92,118,119,124,162,215,216,219,224,225,237,239,241,],[27,34,57,63,82,86,87,89,99,34,34,34,161,188,34,223,226,232,233,240,242,243,]),'push_relop':([141,142,143,144,145,148,],[172,173,174,175,176,177,]),'post_function':([105,],[127,]),'validate_function_call':([49,],[88,]),'start_evaluating':([57,227,],[100,235,]),'cond':([42,51,52,97,112,117,178,179,182,207,216,],[67,90,91,122,135,154,197,198,154,219,224,]),'post_print':([67,],[107,]),'post_cycle':([91,199,],[120,213,]),'post_cond':([115,],[149,]),'functions':([0,5,6,],[1,17,19,]),'pop_term':([71,],[111,]),'for':([32,46,158,159,187,211,222,],[44,44,44,44,44,44,44,]),'pop_op_and_or':([79,],[115,]),'arguments':([117,182,],[156,200,]),'pop_exp':([74,],[113,]),'post_variables':([8,161,188,],[25,187,211,]),'read':([32,46,158,159,187,211,222,],[45,45,45,45,45,45,45,]),'program':([0,],[2,]),'condition':([32,46,158,159,187,211,222,],[50,50,50,50,50,50,50,]),'statement':([32,46,158,159,187,211,222,],[46,46,46,46,46,46,46,]),'factor':([42,51,52,97,102,112,116,117,140,164,165,166,167,169,170,178,179,180,182,207,216,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'print':([32,46,158,159,187,211,222,],[47,47,47,47,47,47,47,]),'main':([0,1,6,19,],[3,10,20,30,]),'finish_evaluating':([0,8,27,105,161,188,228,],[4,4,4,126,4,4,126,]),'empty':([5,8,28,38,46,58,67,92,111,113,114,115,118,119,154,161,185,188,215,221,],[18,26,35,60,83,103,109,35,133,139,147,152,35,35,183,26,203,26,35,229,]),'assignment_operator':([55,],[97,]),'function':([0,5,6,],[5,5,5,]),'pop_relop':([77,],[114,]),'push_exp':([136,137,],[169,170,]),'process_variable':([37,49,],[58,58,]),'post_condition':([185,],[201,]),'pre_variables':([0,8,27,161,188,],[6,24,32,24,24,]),'assignment':([32,46,158,159,187,211,222,],[48,48,48,48,48,48,48,]),'post_term':([111,],[130,]),'set_type':([15,23,163,],[29,31,189,]),'value_return':([187,211,],[209,209,]),'inter_declaration':([29,59,],[36,104,]),'post_identifier':([58,],[101,]),'void_return':([187,211,],[210,210,]),'cycle_declaration':([38,],[61,]),'declaration':([0,8,27,161,188,],[8,8,8,8,8,]),'variable_constant':([42,51,52,69,97,102,112,116,117,140,164,165,166,167,169,170,178,179,180,182,207,216,],[80,80,80,110,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'post_block':([46,],[84,]),'else':([185,],[202,]),'pop_paren':([168,],[194,]),'types':([4,7,126,],[15,22,163,]),'term':([42,51,52,97,102,112,116,117,140,164,165,166,167,169,170,178,179,180,182,207,216,],[74,74,74,74,74,74,74,74,74,190,191,192,193,74,74,74,74,74,74,74,74,]),'update_function_parameters':([212,],[221,]),'parameters':([105,228,],[125,236,]),'push_op_and_or':([150,151,],[178,179,]),'post_arguments':([154,],[181,]),'post_void_return':([206,],[217,]),'post_parameters':([221,],[227,]),'push_term':([129,131,132,134,],[164,165,166,167,]),'func_return':([187,211,],[208,220,]),'while':([32,46,158,159,187,211,222,],[53,53,53,53,53,53,53,]),'register_function':([39,],[62,]),'post_expression':([114,],[146,]),'loop':([32,46,158,159,187,211,222,],[56,56,56,56,56,56,56,]),'exp':([42,51,52,97,102,112,116,117,140,169,170,178,179,180,182,207,216,],[77,77,77,77,123,77,153,77,77,195,196,77,77,199,77,77,77,]),'func_types':([7,],[23,]),'identifier':([29,32,42,43,46,51,52,59,69,97,102,112,116,117,140,158,159,164,165,166,167,169,170,178,179,180,182,187,189,207,211,216,222,],[38,55,78,81,55,78,78,38,78,78,78,78,78,78,78,55,55,78,78,78,78,78,78,78,78,78,78,55,212,78,55,78,55,]),'expression':([42,51,52,97,112,117,140,178,179,182,207,216,],[79,79,79,79,79,79,171,79,79,79,79,79,]),'post_exp':([113,],[138,]),'block':([32,46,158,159,187,211,222,],[54,85,185,186,206,206,230,]),'push_paren':([72,],[112,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> pre_variables functions main','program',3,'p_program','parser.py',24),
  ('program -> functions main','program',2,'p_program','parser.py',25),
  ('program -> pre_variables main','program',2,'p_program','parser.py',26),
  ('program -> main','program',1,'p_program','parser.py',27),
  ('pre_variables -> declaration post_variables','pre_variables',2,'p_pre_variables','parser.py',32),
  ('post_variables -> pre_variables','post_variables',1,'p_post_variables','parser.py',35),
  ('post_variables -> empty','post_variables',1,'p_post_variables','parser.py',36),
  ('required_eol -> EOL optional_eol','required_eol',2,'p_required_eol','parser.py',40),
  ('optional_eol -> empty','optional_eol',1,'p_optional_eol','parser.py',43),
  ('optional_eol -> required_eol','optional_eol',1,'p_optional_eol','parser.py',44),
  ('types -> INT','types',1,'p_types','parser.py',48),
  ('types -> DOUBLE','types',1,'p_types','parser.py',49),
  ('types -> STRING','types',1,'p_types','parser.py',50),
  ('types -> BOOL','types',1,'p_types','parser.py',51),
  ('declaration -> finish_evaluating types set_type inter_declaration required_eol start_evaluating','declaration',6,'p_declaration','parser.py',56),
  ('set_type -> <empty>','set_type',0,'p_set_type','parser.py',59),
  ('inter_declaration -> identifier cycle_declaration','inter_declaration',2,'p_inter_declaration','parser.py',62),
  ('cycle_declaration -> COMMA inter_declaration','cycle_declaration',2,'p_cycle_declaration','parser.py',65),
  ('cycle_declaration -> empty','cycle_declaration',1,'p_cycle_declaration','parser.py',66),
  ('functions -> function post_functions','functions',2,'p_functions','parser.py',70),
  ('post_functions -> functions','post_functions',1,'p_post_functions','parser.py',74),
  ('post_functions -> empty','post_functions',1,'p_post_functions','parser.py',75),
  ('main -> MAIN required_eol pre_variables block END_MAIN optional_eol','main',6,'p_main','parser.py',79),
  ('block -> statement post_block','block',2,'p_block','parser.py',83),
  ('post_block -> block','post_block',1,'p_post_block','parser.py',86),
  ('post_block -> empty','post_block',1,'p_post_block','parser.py',87),
  ('call_function -> ID validate_function_call LEFT_PARENTHESIS post_call_function','call_function',4,'p_call_function','parser.py',91),
  ('validate_function_call -> <empty>','validate_function_call',0,'p_validate_function_call','parser.py',95),
  ('post_call_function -> arguments RIGHT_PARENTHESIS','post_call_function',2,'p_post_call_function','parser.py',99),
  ('post_call_function -> RIGHT_PARENTHESIS','post_call_function',1,'p_post_call_function','parser.py',100),
  ('arguments -> cond post_arguments','arguments',2,'p_arguments','parser.py',104),
  ('post_arguments -> COMMA arguments','post_arguments',2,'p_post_arguments','parser.py',107),
  ('post_arguments -> empty','post_arguments',1,'p_post_arguments','parser.py',108),
  ('function -> FUNC func_types set_type ID register_function LEFT_PARENTHESIS post_function','function',7,'p_function','parser.py',112),
  ('func_types -> types','func_types',1,'p_func_types','parser.py',117),
  ('func_types -> VOID','func_types',1,'p_func_types','parser.py',118),
  ('register_function -> <empty>','register_function',0,'p_register_function','parser.py',124),
  ('post_function -> parameters RIGHT_PARENTHESIS required_eol post_variables func_return','post_function',5,'p_post_function','parser.py',131),
  ('post_function -> RIGHT_PARENTHESIS required_eol post_variables func_return','post_function',4,'p_post_function','parser.py',132),
  ('func_return -> void_return','func_return',1,'p_func_return','parser.py',135),
  ('func_return -> value_return','func_return',1,'p_func_return','parser.py',136),
  ('void_return -> block post_void_return','void_return',2,'p_void_return','parser.py',139),
  ('post_void_return -> END reset_scope required_eol','post_void_return',3,'p_post_void_return','parser.py',142),
  ('post_void_return -> RETURN required_eol END reset_scope required_eol','post_void_return',5,'p_post_void_return','parser.py',143),
  ('value_return -> block RETURN cond required_eol END reset_scope required_eol','value_return',7,'p_value_return','parser.py',146),
  ('value_return -> RETURN cond required_eol END reset_scope required_eol','value_return',6,'p_value_return','parser.py',147),
  ('reset_scope -> <empty>','reset_scope',0,'p_reset_scope','parser.py',150),
  ('parameters -> finish_evaluating types set_type identifier update_function_parameters post_parameters start_evaluating','parameters',7,'p_parameters','parser.py',169),
  ('update_function_parameters -> <empty>','update_function_parameters',0,'p_update_function_parameters','parser.py',173),
  ('post_parameters -> COMMA parameters','post_parameters',2,'p_post_parameters','parser.py',177),
  ('post_parameters -> empty','post_parameters',1,'p_post_parameters','parser.py',178),
  ('statement -> assignment required_eol','statement',2,'p_statement','parser.py',182),
  ('statement -> condition required_eol','statement',2,'p_statement','parser.py',183),
  ('statement -> print required_eol','statement',2,'p_statement','parser.py',184),
  ('statement -> read required_eol','statement',2,'p_statement','parser.py',185),
  ('statement -> loop required_eol','statement',2,'p_statement','parser.py',186),
  ('statement -> call_function required_eol','statement',2,'p_statement','parser.py',187),
  ('assignment -> identifier assignment_operator cond','assignment',3,'p_assignment','parser.py',192),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',196),
  ('assignment_operator -> TIMES_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',197),
  ('assignment_operator -> DIVIDE_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',198),
  ('assignment_operator -> PLUS_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',199),
  ('assignment_operator -> MINUS_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',200),
  ('start_evaluating -> <empty>','start_evaluating',0,'p_start_evaluating','parser.py',203),
  ('finish_evaluating -> <empty>','finish_evaluating',0,'p_finish_evaluating','parser.py',207),
  ('cond -> expression pop_op_and_or post_cond','cond',3,'p_cond','parser.py',212),
  ('pop_op_and_or -> <empty>','pop_op_and_or',0,'p_pop_op_and_or','parser.py',215),
  ('post_cond -> AND push_op_and_or cond','post_cond',3,'p_post_cond','parser.py',220),
  ('post_cond -> OR push_op_and_or cond','post_cond',3,'p_post_cond','parser.py',221),
  ('post_cond -> empty','post_cond',1,'p_post_cond','parser.py',222),
  ('push_op_and_or -> <empty>','push_op_and_or',0,'p_push_op_and_or','parser.py',225),
  ('expression -> exp pop_relop post_expression','expression',3,'p_expression','parser.py',230),
  ('pop_relop -> <empty>','pop_relop',0,'p_pop_relop','parser.py',233),
  ('post_expression -> relational_operator expression','post_expression',2,'p_post_expression','parser.py',240),
  ('post_expression -> empty','post_expression',1,'p_post_expression','parser.py',241),
  ('push_relop -> <empty>','push_relop',0,'p_push_relop','parser.py',244),
  ('relational_operator -> LESS push_relop','relational_operator',2,'p_relational_operator','parser.py',248),
  ('relational_operator -> GREATER push_relop','relational_operator',2,'p_relational_operator','parser.py',249),
  ('relational_operator -> GREATER_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',250),
  ('relational_operator -> LESS_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',251),
  ('relational_operator -> EQUALS_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',252),
  ('relational_operator -> NOT_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',253),
  ('exp -> term pop_exp post_exp','exp',3,'p_exp','parser.py',259),
  ('pop_exp -> <empty>','pop_exp',0,'p_pop_exp','parser.py',262),
  ('post_exp -> PLUS push_exp exp','post_exp',3,'p_post_exp','parser.py',267),
  ('post_exp -> MINUS push_exp exp','post_exp',3,'p_post_exp','parser.py',268),
  ('post_exp -> empty','post_exp',1,'p_post_exp','parser.py',269),
  ('push_exp -> <empty>','push_exp',0,'p_push_exp','parser.py',272),
  ('term -> factor pop_term post_term','term',3,'p_term','parser.py',277),
  ('pop_term -> <empty>','pop_term',0,'p_pop_term','parser.py',280),
  ('post_term -> TIMES push_term term','post_term',3,'p_post_term','parser.py',286),
  ('post_term -> DIVIDE push_term term','post_term',3,'p_post_term','parser.py',287),
  ('post_term -> PERCENTAGE push_term term','post_term',3,'p_post_term','parser.py',288),
  ('post_term -> MOD push_term term','post_term',3,'p_post_term','parser.py',289),
  ('post_term -> empty','post_term',1,'p_post_term','parser.py',290),
  ('push_term -> <empty>','push_term',0,'p_push_term','parser.py',293),
  ('factor -> LEFT_PARENTHESIS push_paren cond RIGHT_PARENTHESIS pop_paren','factor',5,'p_factor','parser.py',298),
  ('factor -> variable_constant','factor',1,'p_factor','parser.py',299),
  ('factor -> MINUS variable_constant','factor',2,'p_factor','parser.py',300),
  ('factor -> call_function','factor',1,'p_factor','parser.py',301),
  ('push_paren -> <empty>','push_paren',0,'p_push_paren','parser.py',304),
  ('pop_paren -> <empty>','pop_paren',0,'p_pop_paren','parser.py',308),
  ('variable_constant -> identifier','variable_constant',1,'p_variable_constant','parser.py',313),
  ('variable_constant -> INT_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',314),
  ('variable_constant -> DOUBLE_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',315),
  ('variable_constant -> STRING_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',316),
  ('variable_constant -> BOOL_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',317),
  ('process_variable -> <empty>','process_variable',0,'p_process_variable','parser.py',331),
  ('condition -> IF cond COLON optional_eol block post_condition END','condition',7,'p_condition','parser.py',340),
  ('post_condition -> else','post_condition',1,'p_post_condition','parser.py',344),
  ('post_condition -> empty','post_condition',1,'p_post_condition','parser.py',345),
  ('else -> ELSE COLON optional_eol block','else',4,'p_else','parser.py',349),
  ('print -> PRINT cond post_print','print',3,'p_print','parser.py',353),
  ('post_print -> COMMA STRING_CONSTANT','post_print',2,'p_post_print','parser.py',356),
  ('post_print -> empty','post_print',1,'p_post_print','parser.py',357),
  ('read -> READ LEFT_PARENTHESIS RIGHT_PARENTHESIS','read',3,'p_read','parser.py',361),
  ('identifier -> ID process_variable post_identifier','identifier',3,'p_identifier','parser.py',365),
  ('post_identifier -> LEFT_BRACKET exp RIGHT_BRACKET','post_identifier',3,'p_post_identifier','parser.py',368),
  ('post_identifier -> empty','post_identifier',1,'p_post_identifier','parser.py',369),
  ('loop -> for','loop',1,'p_loop','parser.py',373),
  ('loop -> while','loop',1,'p_loop','parser.py',374),
  ('for -> FOR identifier FROM exp TO exp post_cycle','for',7,'p_for','parser.py',378),
  ('while -> WHILE cond post_cycle','while',3,'p_while','parser.py',382),
  ('post_cycle -> COLON optional_eol block END','post_cycle',4,'p_post_cycle','parser.py',386),
  ('BOOL_CONSTANT -> TRUE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',389),
  ('BOOL_CONSTANT -> FALSE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',390),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',393),
]
