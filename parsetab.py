
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'B86E39E62FA8F5F1BED06B2937A6218B'
    
_lr_action_items = {'LESS':([6,21,23,34,42,43,45,47,48,49,51,52,53,54,55,57,69,71,74,77,80,94,105,106,113,114,115,116,117,118,119,128,],[-2,-76,-78,-2,-59,-54,-88,-57,-56,-2,-2,-89,-58,82,-55,-52,-53,-45,-50,-41,-44,-77,-3,-5,-47,-46,-48,-49,-51,-42,-43,-4,]),'READ':([6,11,21,23,24,29,31,32,33,34,35,37,39,42,43,45,47,48,49,51,52,53,54,55,56,57,60,68,69,71,74,77,80,86,88,90,93,94,96,98,99,100,102,105,106,108,109,111,113,114,115,116,117,118,119,120,121,122,123,125,128,132,133,134,137,138,139,140,142,144,145,147,148,150,151,153,154,155,156,157,158,159,160,],[-2,25,-76,-78,-21,-79,-18,-19,-16,-2,-17,-80,-20,-59,-54,-88,-57,-56,-2,-2,-89,-58,-2,-55,-2,-52,-2,-22,-53,-45,-50,-41,-44,-32,-34,-28,-31,-77,-69,-71,25,-84,-81,-3,-5,25,-6,25,-47,-46,-48,-49,-51,-42,-43,-33,-29,-30,-72,25,-4,25,-60,25,-70,-85,25,-87,-82,-63,-62,-64,-61,-8,-86,25,-7,-83,-65,25,-67,-68,-66,]),'RIGHT_BRACKET':([6,21,23,34,42,43,45,47,48,49,51,52,53,55,57,58,67,69,71,74,77,80,94,105,106,113,114,115,116,117,118,119,128,],[-2,-76,-78,-2,-59,-54,-88,-57,-56,-2,-2,-89,-58,-55,-52,94,112,-53,-45,-50,-41,-44,-77,-3,-5,-47,-46,-48,-49,-51,-42,-43,-4,]),'EOL':([5,6,21,23,34,42,43,44,45,47,48,49,51,52,53,54,55,56,57,69,71,74,77,80,86,88,90,93,94,95,105,106,112,113,114,115,116,117,118,119,120,121,122,124,128,],[18,-2,-76,-78,-2,-59,-54,68,-88,-57,-56,-2,-2,-89,-58,-2,-55,-2,-52,-53,-45,-50,-41,-44,-32,-34,-28,-31,-77,123,-3,-5,136,-47,-46,-48,-49,-51,-42,-43,-33,-29,-30,137,-4,]),'EQUALS_EQUALS':([6,21,23,34,42,43,45,47,48,49,51,52,53,54,55,57,69,71,74,77,80,94,105,106,113,114,115,116,117,118,119,128,],[-2,-76,-78,-2,-59,-54,-88,-57,-56,-2,-2,-89,-58,85,-55,-52,-53,-45,-50,-41,-44,-77,-3,-5,-47,-46,-48,-49,-51,-42,-43,-4,]),'WHILE':([6,11,21,23,24,29,31,32,33,34,35,37,39,42,43,45,47,48,49,51,52,53,54,55,56,57,60,68,69,71,74,77,80,86,88,90,93,94,96,98,99,100,102,105,106,108,109,111,113,114,115,116,117,118,119,120,121,122,123,125,128,132,133,134,137,138,139,140,142,144,145,147,148,150,151,153,154,155,156,157,158,159,160,],[-2,27,-76,-78,-21,-79,-18,-19,-16,-2,-17,-80,-20,-59,-54,-88,-57,-56,-2,-2,-89,-58,-2,-55,-2,-52,-2,-22,-53,-45,-50,-41,-44,-32,-34,-28,-31,-77,-69,-71,27,-84,-81,-3,-5,27,-6,27,-47,-46,-48,-49,-51,-42,-43,-33,-29,-30,-72,27,-4,27,-60,27,-70,-85,27,-87,-82,-63,-62,-64,-61,-8,-86,27,-7,-83,-65,27,-67,-68,-66,]),'PRINT':([6,11,21,23,24,29,31,32,33,34,35,37,39,42,43,45,47,48,49,51,52,53,54,55,56,57,60,68,69,71,74,77,80,86,88,90,93,94,96,98,99,100,102,105,106,108,109,111,113,114,115,116,117,118,119,120,121,122,123,125,128,132,133,134,137,138,139,140,142,144,145,147,148,150,151,153,154,155,156,157,158,159,160,],[-2,26,-76,-78,-21,-79,-18,-19,-16,-2,-17,-80,-20,-59,-54,-88,-57,-56,-2,-2,-89,-58,-2,-55,-2,-52,-2,-22,-53,-45,-50,-41,-44,-32,-34,-28,-31,-77,-69,-71,26,-84,-81,-3,-5,26,-6,26,-47,-46,-48,-49,-51,-42,-43,-33,-29,-30,-72,26,-4,26,-60,26,-70,-85,26,-87,-82,-63,-62,-64,-61,-8,-86,26,-7,-83,-65,26,-67,-68,-66,]),'GREATER_EQUALS':([6,21,23,34,42,43,45,47,48,49,51,52,53,54,55,57,69,71,74,77,80,94,105,106,113,114,115,116,117,118,119,128,],[-2,-76,-78,-2,-59,-54,-88,-57,-56,-2,-2,-89,-58,87,-55,-52,-53,-45,-50,-41,-44,-77,-3,-5,-47,-46,-48,-49,-51,-42,-43,-4,]),'MINUS':([6,13,15,16,17,19,20,21,22,23,26,27,34,36,41,42,43,45,47,48,49,50,51,52,53,55,57,65,69,70,71,72,73,74,75,78,79,81,82,83,84,85,87,89,91,92,94,101,105,106,113,114,115,116,117,128,141,],[-2,-27,-24,-25,-23,46,-26,-76,46,-78,46,46,-2,46,46,-59,-54,-88,-57,-56,-2,46,79,-89,-58,-55,-52,-23,-53,46,-45,46,46,-50,46,46,46,-36,-35,-40,-38,-39,-37,46,46,46,-77,46,-3,-5,-47,-46,-48,-49,-51,-4,46,]),'MINUS_EQUALS':([5,6,21,23,34,38,94,],[13,-2,-76,-78,-2,13,-77,]),'TIMES_EQUALS':([5,6,21,23,34,38,94,],[15,-2,-76,-78,-2,15,-77,]),'NOT_EQUALS':([6,21,23,34,42,43,45,47,48,49,51,52,53,54,55,57,69,71,74,77,80,94,105,106,113,114,115,116,117,118,119,128,],[-2,-76,-78,-2,-59,-54,-88,-57,-56,-2,-2,-89,-58,83,-55,-52,-53,-45,-50,-41,-44,-77,-3,-5,-47,-46,-48,-49,-51,-42,-43,-4,]),'DOUBLE_CONSTANT':([13,15,16,17,19,20,22,26,27,36,41,46,50,65,70,72,73,75,78,79,81,82,83,84,85,87,89,91,92,101,141,],[-27,-24,-25,-23,47,-26,47,47,47,47,47,47,47,-23,47,47,47,47,47,47,-36,-35,-40,-38,-39,-37,47,47,47,47,47,]),'LESS_EQUALS':([6,21,23,34,42,43,45,47,48,49,51,52,53,54,55,57,69,71,74,77,80,94,105,106,113,114,115,116,117,118,119,128,],[-2,-76,-78,-2,-59,-54,-88,-57,-56,-2,-2,-89,-58,84,-55,-52,-53,-45,-50,-41,-44,-77,-3,-5,-47,-46,-48,-49,-51,-42,-43,-4,]),'TO':([6,21,23,34,42,43,45,47,48,49,51,52,53,55,57,69,71,74,77,80,94,105,106,113,114,115,116,117,118,119,126,128,],[-2,-76,-78,-2,-59,-54,-88,-57,-56,-2,-2,-89,-58,-55,-52,-53,-45,-50,-41,-44,-77,-3,-5,-47,-46,-48,-49,-51,-42,-43,141,-4,]),'INT_CONSTANT':([13,15,16,17,19,20,22,26,27,36,41,46,50,65,70,72,73,75,78,79,81,82,83,84,85,87,89,91,92,101,141,],[-27,-24,-25,-23,48,-26,48,48,48,48,48,48,48,-23,48,48,48,48,48,48,-36,-35,-40,-38,-39,-37,48,48,48,48,48,]),'COLON':([6,21,23,34,42,43,45,47,48,49,51,52,53,54,55,56,57,61,64,69,71,74,77,80,86,88,90,93,94,105,106,113,114,115,116,117,118,119,120,121,122,127,128,146,152,],[-2,-76,-78,-2,-59,-54,-88,-57,-56,-2,-2,-89,-58,-2,-55,-2,-52,99,108,-53,-45,-50,-41,-44,-32,-34,-28,-31,-77,-3,-5,-47,-46,-48,-49,-51,-42,-43,-33,-29,-30,99,-4,153,99,]),'PLUS':([6,21,23,34,42,43,45,47,48,49,51,52,53,55,57,69,71,74,94,105,106,113,114,115,116,117,128,],[-2,-76,-78,-2,-59,-54,-88,-57,-56,-2,78,-89,-58,-55,-52,-53,-45,-50,-77,-3,-5,-47,-46,-48,-49,-51,-4,]),'PERCENTAGE':([6,21,23,34,42,43,45,47,48,49,52,53,55,57,69,94,105,106,117,128,],[-2,-76,-78,-2,-59,-54,-88,-57,-56,73,-89,-58,-55,-52,-53,-77,-3,-5,-51,-4,]),'IF':([6,11,21,23,24,29,31,32,33,34,35,37,39,42,43,45,47,48,49,51,52,53,54,55,56,57,60,68,69,71,74,77,80,86,88,90,93,94,96,98,99,100,102,105,106,108,109,111,113,114,115,116,117,118,119,120,121,122,123,125,128,132,133,134,137,138,139,140,142,144,145,147,148,150,151,153,154,155,156,157,158,159,160,],[-2,36,-76,-78,-21,-79,-18,-19,-16,-2,-17,-80,-20,-59,-54,-88,-57,-56,-2,-2,-89,-58,-2,-55,-2,-52,-2,-22,-53,-45,-50,-41,-44,-32,-34,-28,-31,-77,-69,-71,36,-84,-81,-3,-5,36,-6,36,-47,-46,-48,-49,-51,-42,-43,-33,-29,-30,-72,36,-4,36,-60,36,-70,-85,36,-87,-82,-63,-62,-64,-61,-8,-86,36,-7,-83,-65,36,-67,-68,-66,]),'LEFT_PARENTHESIS':([13,15,16,17,19,20,22,25,26,27,34,36,40,41,50,65,70,72,73,75,78,79,81,82,83,84,85,87,89,91,92,101,141,],[-27,-24,-25,-23,50,-26,50,59,50,50,63,50,66,50,50,-23,50,50,50,50,50,50,-36,-35,-40,-38,-39,-37,50,50,50,50,50,]),'$end':([3,6,21,23,24,29,30,31,32,33,34,35,37,39,42,43,45,47,48,49,51,52,53,54,55,56,57,60,68,69,71,74,77,80,86,88,90,93,94,96,98,100,102,105,106,113,114,115,116,117,118,119,120,121,122,123,128,133,137,138,140,142,144,145,147,148,151,155,156,158,159,160,],[0,-2,-76,-78,-21,-79,-1,-18,-19,-16,-2,-17,-80,-20,-59,-54,-88,-57,-56,-2,-2,-89,-58,-2,-55,-2,-52,-2,-22,-53,-45,-50,-41,-44,-32,-34,-28,-31,-77,-69,-71,-84,-81,-3,-5,-47,-46,-48,-49,-51,-42,-43,-33,-29,-30,-72,-4,-60,-70,-85,-87,-82,-63,-62,-64,-61,-86,-83,-65,-67,-68,-66,]),'END':([6,21,23,24,29,31,32,33,34,35,37,39,42,43,45,47,48,49,51,52,53,54,55,56,57,60,68,69,71,74,77,80,86,88,90,93,94,96,98,100,102,105,106,113,114,115,116,117,118,119,120,121,122,123,125,128,132,133,135,137,138,139,140,142,144,145,147,148,149,151,155,156,157,158,159,160,],[-2,-76,-78,-21,-79,-18,-19,-16,-2,-17,-80,-20,-59,-54,-88,-57,-56,-2,-2,-89,-58,-2,-55,-2,-52,-2,-22,-53,-45,-50,-41,-44,-32,-34,-28,-31,-77,-69,-71,-84,-81,-3,-5,-47,-46,-48,-49,-51,-42,-43,-33,-29,-30,-72,140,-4,144,-60,150,-70,-85,140,-87,-82,-63,-62,-64,-61,154,-86,-83,-65,159,-67,-68,-66,]),'DIVIDE':([6,21,23,34,42,43,45,47,48,49,52,53,55,57,69,94,105,106,117,128,],[-2,-76,-78,-2,-59,-54,-88,-57,-56,70,-89,-58,-55,-52,-53,-77,-3,-5,-51,-4,]),'FOR':([6,11,21,23,24,29,31,32,33,34,35,37,39,42,43,45,47,48,49,51,52,53,54,55,56,57,60,68,69,71,74,77,80,86,88,90,93,94,96,98,99,100,102,105,106,108,109,111,113,114,115,116,117,118,119,120,121,122,123,125,128,132,133,134,137,138,139,140,142,144,145,147,148,150,151,153,154,155,156,157,158,159,160,],[-2,28,-76,-78,-21,-79,-18,-19,-16,-2,-17,-80,-20,-59,-54,-88,-57,-56,-2,-2,-89,-58,-2,-55,-2,-52,-2,-22,-53,-45,-50,-41,-44,-32,-34,-28,-31,-77,-69,-71,28,-84,-81,-3,-5,28,-6,28,-47,-46,-48,-49,-51,-42,-43,-33,-29,-30,-72,28,-4,28,-60,28,-70,-85,28,-87,-82,-63,-62,-64,-61,-8,-86,28,-7,-83,-65,28,-67,-68,-66,]),'EQUALS':([5,6,21,23,34,38,94,],[17,-2,-76,-78,-2,65,-77,]),'TIMES':([6,21,23,34,42,43,45,47,48,49,52,53,55,57,69,94,105,106,117,128,],[-2,-76,-78,-2,-59,-54,-88,-57,-56,72,-89,-58,-55,-52,-53,-77,-3,-5,-51,-4,]),'FUNC':([1,2,4,7,8,9,10,14,18,68,136,],[-2,-2,12,-14,-12,-15,-13,-73,-75,-22,-74,]),'IN':([6,21,23,62,94,],[-2,-76,-78,103,-77,]),'FALSE':([13,15,16,17,19,20,22,26,27,36,41,46,50,65,70,72,73,75,78,79,81,82,83,84,85,87,89,91,92,101,141,],[-27,-24,-25,-23,52,-26,52,52,52,52,52,52,52,-23,52,52,52,52,52,52,-36,-35,-40,-38,-39,-37,52,52,52,52,52,]),'RIGHT_PARENTHESIS':([6,21,23,34,42,43,45,47,48,49,51,52,53,54,55,56,57,59,63,66,69,71,74,76,77,80,86,88,90,93,94,104,105,106,107,110,113,114,115,116,117,118,119,120,121,122,128,129,131,143,],[-2,-76,-78,-2,-59,-54,-88,-57,-56,-2,-2,-89,-58,-2,-55,-2,-52,95,106,111,-53,-45,-50,117,-41,-44,-32,-34,-28,-31,-77,128,-3,-5,-2,134,-47,-46,-48,-49,-51,-42,-43,-33,-29,-30,-4,-9,-11,-10,]),'ELSE':([6,21,23,24,29,31,32,33,34,35,37,39,42,43,45,47,48,49,51,52,53,54,55,56,57,60,68,69,71,74,77,80,86,88,90,93,94,96,98,100,102,105,106,113,114,115,116,117,118,119,120,121,122,123,128,132,133,137,138,140,142,144,145,147,148,151,155,156,158,159,160,],[-2,-76,-78,-21,-79,-18,-19,-16,-2,-17,-80,-20,-59,-54,-88,-57,-56,-2,-2,-89,-58,-2,-55,-2,-52,-2,-22,-53,-45,-50,-41,-44,-32,-34,-28,-31,-77,-69,-71,-84,-81,-3,-5,-47,-46,-48,-49,-51,-42,-43,-33,-29,-30,-72,-4,146,-60,-70,-85,-87,-82,-63,-62,-64,-61,-86,-83,-65,-67,-68,-66,]),'ID':([0,1,2,6,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,31,32,33,34,35,36,37,39,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,60,63,65,66,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,98,99,100,101,102,103,105,106,108,109,111,113,114,115,116,117,118,119,120,121,122,123,125,128,130,132,133,134,136,137,138,139,140,141,142,144,145,147,148,150,151,153,154,155,156,157,158,159,160,],[6,6,6,-2,34,40,-27,-73,-24,-25,-23,-75,34,-26,-76,34,-78,-21,34,34,6,-79,-18,-19,-16,-2,-17,34,-80,-20,34,-59,-54,-88,6,-57,-56,-2,34,-2,-89,-58,-2,-55,-2,-52,-2,6,-23,6,-22,-53,34,-45,34,34,-50,34,-41,34,34,-44,-36,-35,-40,-38,-39,-32,-37,-34,34,-28,34,34,-31,-77,-69,-71,34,-84,34,-81,6,-3,-5,34,-6,34,-47,-46,-48,-49,-51,-42,-43,-33,-29,-30,-72,34,-4,6,34,-60,34,-74,-70,-85,34,-87,34,-82,-63,-62,-64,-61,-8,-86,34,-7,-83,-65,34,-67,-68,-66,]),'TRUE':([13,15,16,17,19,20,22,26,27,36,41,46,50,65,70,72,73,75,78,79,81,82,83,84,85,87,89,91,92,101,141,],[-27,-24,-25,-23,45,-26,45,45,45,45,45,45,45,-23,45,45,45,45,45,45,-36,-35,-40,-38,-39,-37,45,45,45,45,45,]),'PLUS_EQUALS':([5,6,21,23,34,38,94,],[20,-2,-76,-78,-2,20,-77,]),'AND':([6,21,23,34,42,43,45,47,48,49,51,52,53,54,55,56,57,69,71,74,77,80,86,88,94,105,106,113,114,115,116,117,118,119,120,128,],[-2,-76,-78,-2,-59,-54,-88,-57,-56,-2,-2,-89,-58,-2,-55,91,-52,-53,-45,-50,-41,-44,-32,-34,-77,-3,-5,-47,-46,-48,-49,-51,-42,-43,-33,-4,]),'FROM':([6,21,23,62,94,],[-2,-76,-78,101,-77,]),'GREATER':([6,21,23,34,42,43,45,47,48,49,51,52,53,54,55,57,69,71,74,77,80,94,105,106,113,114,115,116,117,118,119,128,],[-2,-76,-78,-2,-59,-54,-88,-57,-56,-2,-2,-89,-58,81,-55,-52,-53,-45,-50,-41,-44,-77,-3,-5,-47,-46,-48,-49,-51,-42,-43,-4,]),'DIVIDE_EQUALS':([5,6,21,23,34,38,94,],[16,-2,-76,-78,-2,16,-77,]),'STRING_CONSTANT':([13,15,16,17,19,20,22,26,27,36,41,46,50,65,70,72,73,75,78,79,81,82,83,84,85,87,89,91,92,97,101,141,],[-27,-24,-25,-23,53,-26,53,53,53,53,53,53,53,-23,53,53,53,53,53,53,-36,-35,-40,-38,-39,-37,53,53,53,124,53,53,]),'LEFT_BRACKET':([6,17,34,],[22,41,22,]),'COMMA':([6,21,23,34,42,43,45,47,48,49,51,52,53,54,55,56,57,60,69,71,74,77,80,86,88,90,93,94,105,106,107,113,114,115,116,117,118,119,120,121,122,128,],[-2,-76,-78,-2,-59,-54,-88,-57,-56,-2,-2,-89,-58,-2,-55,-2,-52,97,-53,-45,-50,-41,-44,-32,-34,-28,-31,-77,-3,-5,130,-47,-46,-48,-49,-51,-42,-43,-33,-29,-30,-4,]),'OR':([6,21,23,34,42,43,45,47,48,49,51,52,53,54,55,56,57,69,71,74,77,80,86,88,94,105,106,113,114,115,116,117,118,119,120,128,],[-2,-76,-78,-2,-59,-54,-88,-57,-56,-2,-2,-89,-58,-2,-55,92,-52,-53,-45,-50,-41,-44,-32,-34,-77,-3,-5,-47,-46,-48,-49,-51,-42,-43,-33,-4,]),'MOD':([6,21,23,34,42,43,45,47,48,49,52,53,55,57,69,94,105,106,117,128,],[-2,-76,-78,-2,-59,-54,-88,-57,-56,75,-89,-58,-55,-52,-53,-77,-3,-5,-51,-4,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'BOOL_CONSTANT':([19,22,26,27,36,41,46,50,70,72,73,75,78,79,89,91,92,101,141,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'relational_operator':([54,],[89,]),'call_function':([11,19,22,26,27,36,41,50,70,72,73,75,78,79,89,91,92,99,101,108,111,125,132,134,139,141,153,157,],[24,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,24,43,24,24,24,24,24,24,43,24,24,]),'post_else':([153,157,],[156,158,]),'post_parameters':([107,],[129,]),'cond':([19,26,27,36,50,91,92,],[44,60,61,64,76,121,122,]),'post_print':([60,],[96,]),'post_cycle':([61,127,152,],[100,142,155,]),'post_cond':([56,],[90,]),'post_post_cycle':([125,139,],[138,151,]),'post_condition':([108,132,],[133,145,]),'for':([11,99,108,111,125,132,134,139,153,157,],[29,29,29,29,29,29,29,29,29,29,]),'post_exp':([51,],[77,]),'program':([0,],[3,]),'statement':([11,99,108,111,125,132,134,139,153,157,],[30,125,132,135,139,132,149,139,157,157,]),'factor':([19,22,26,27,36,41,50,70,72,73,75,78,79,89,91,92,101,141,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'print':([11,99,108,111,125,132,134,139,153,157,],[31,31,31,31,31,31,31,31,31,31,]),'post_variable':([1,2,],[8,10,]),'empty':([1,2,6,34,49,51,54,56,60,107,],[9,9,23,23,74,80,88,93,98,131,]),'function':([4,],[11,]),'post_post_condition':([132,],[148,]),'post_for':([62,],[102,]),'read':([11,99,108,111,125,132,134,139,153,157,],[32,32,32,32,32,32,32,32,32,32,]),'assignment':([0,1,2,11,99,108,111,125,132,134,139,153,157,],[1,1,1,33,33,33,33,33,33,33,33,33,33,]),'post_term':([49,],[71,]),'else':([132,],[147,]),'post_identifier':([6,34,],[21,21,]),'variable':([0,1,2,],[4,7,7,]),'variable_constant':([19,22,26,27,36,41,46,50,70,72,73,75,78,79,89,91,92,101,141,],[57,57,57,57,57,57,69,57,57,57,57,57,57,57,57,57,57,57,57,]),'post_post_else':([157,],[160,]),'condition':([11,99,108,111,125,132,134,139,153,157,],[35,35,35,35,35,35,35,35,35,35,]),'post_def_function':([66,],[109,]),'term':([19,22,26,27,36,41,50,70,72,73,75,78,79,89,91,92,101,141,],[51,51,51,51,51,51,51,113,114,115,116,51,51,51,51,51,51,51,]),'post_list':([5,],[14,]),'parameters':([63,66,130,],[104,110,143,]),'list':([0,1,2,],[2,2,2,]),'while':([11,99,108,111,125,132,134,139,153,157,],[37,37,37,37,37,37,37,37,37,37,]),'post_expression':([54,],[86,]),'assignment_operator':([5,38,],[19,19,]),'exp':([19,22,26,27,36,41,50,78,79,89,91,92,101,141,],[54,58,54,54,54,67,54,118,119,120,54,54,126,152,]),'identifier':([0,1,2,11,19,22,26,27,28,36,41,46,50,63,66,70,72,73,75,78,79,89,91,92,99,101,103,108,111,125,130,132,134,139,141,153,157,],[5,5,5,38,55,55,55,55,62,55,55,55,55,107,107,55,55,55,55,55,55,55,55,55,38,55,127,38,38,38,107,38,38,38,55,38,38,]),'expression':([19,26,27,36,50,91,92,],[56,56,56,56,56,56,56,]),'post_call_function':([63,],[105,]),'loop':([11,99,108,111,125,132,134,139,153,157,],[39,39,39,39,39,39,39,39,39,39,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> variable function statement','program',3,'p_program','parser.py',25),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',28),
  ('call_function -> ID LEFT_PARENTHESIS post_call_function','call_function',3,'p_call_function','parser.py',32),
  ('post_call_function -> parameters RIGHT_PARENTHESIS','post_call_function',2,'p_post_call_function','parser.py',35),
  ('post_call_function -> RIGHT_PARENTHESIS','post_call_function',1,'p_post_call_function','parser.py',36),
  ('function -> FUNC ID LEFT_PARENTHESIS post_def_function','function',4,'p_function','parser.py',39),
  ('post_def_function -> parameters RIGHT_PARENTHESIS statement END','post_def_function',4,'p_post_def_function','parser.py',42),
  ('post_def_function -> RIGHT_PARENTHESIS statement END','post_def_function',3,'p_post_def_function','parser.py',43),
  ('parameters -> identifier post_parameters','parameters',2,'p_parameters','parser.py',46),
  ('post_parameters -> COMMA parameters','post_parameters',2,'p_post_parameters','parser.py',49),
  ('post_parameters -> empty','post_parameters',1,'p_post_parameters','parser.py',50),
  ('variable -> assignment post_variable','variable',2,'p_variable','parser.py',53),
  ('variable -> list post_variable','variable',2,'p_variable','parser.py',54),
  ('post_variable -> variable','post_variable',1,'p_post_variable','parser.py',57),
  ('post_variable -> empty','post_variable',1,'p_post_variable','parser.py',58),
  ('statement -> assignment','statement',1,'p_statement','parser.py',61),
  ('statement -> condition','statement',1,'p_statement','parser.py',62),
  ('statement -> print','statement',1,'p_statement','parser.py',63),
  ('statement -> read','statement',1,'p_statement','parser.py',64),
  ('statement -> loop','statement',1,'p_statement','parser.py',65),
  ('statement -> call_function','statement',1,'p_statement','parser.py',66),
  ('assignment -> identifier assignment_operator cond EOL','assignment',4,'p_assignment','parser.py',68),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',71),
  ('assignment_operator -> TIMES_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',72),
  ('assignment_operator -> DIVIDE_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',73),
  ('assignment_operator -> PLUS_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',74),
  ('assignment_operator -> MINUS_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',75),
  ('cond -> expression post_cond','cond',2,'p_cond','parser.py',78),
  ('post_cond -> AND cond','post_cond',2,'p_post_cond','parser.py',81),
  ('post_cond -> OR cond','post_cond',2,'p_post_cond','parser.py',82),
  ('post_cond -> empty','post_cond',1,'p_post_cond','parser.py',83),
  ('expression -> exp post_expression','expression',2,'p_expression','parser.py',86),
  ('post_expression -> relational_operator exp','post_expression',2,'p_post_expression','parser.py',89),
  ('post_expression -> empty','post_expression',1,'p_post_expression','parser.py',90),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',93),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',94),
  ('relational_operator -> GREATER_EQUALS','relational_operator',1,'p_relational_operator','parser.py',95),
  ('relational_operator -> LESS_EQUALS','relational_operator',1,'p_relational_operator','parser.py',96),
  ('relational_operator -> EQUALS_EQUALS','relational_operator',1,'p_relational_operator','parser.py',97),
  ('relational_operator -> NOT_EQUALS','relational_operator',1,'p_relational_operator','parser.py',98),
  ('exp -> term post_exp','exp',2,'p_exp','parser.py',101),
  ('post_exp -> PLUS exp','post_exp',2,'p_post_exp','parser.py',104),
  ('post_exp -> MINUS exp','post_exp',2,'p_post_exp','parser.py',105),
  ('post_exp -> empty','post_exp',1,'p_post_exp','parser.py',106),
  ('term -> factor post_term','term',2,'p_term','parser.py',109),
  ('post_term -> TIMES term','post_term',2,'p_post_term','parser.py',112),
  ('post_term -> DIVIDE term','post_term',2,'p_post_term','parser.py',113),
  ('post_term -> PERCENTAGE term','post_term',2,'p_post_term','parser.py',114),
  ('post_term -> MOD term','post_term',2,'p_post_term','parser.py',115),
  ('post_term -> empty','post_term',1,'p_post_term','parser.py',116),
  ('factor -> LEFT_PARENTHESIS cond RIGHT_PARENTHESIS','factor',3,'p_factor','parser.py',119),
  ('factor -> variable_constant','factor',1,'p_factor','parser.py',120),
  ('factor -> MINUS variable_constant','factor',2,'p_factor','parser.py',121),
  ('factor -> call_function','factor',1,'p_factor','parser.py',122),
  ('variable_constant -> identifier','variable_constant',1,'p_variable_constant','parser.py',125),
  ('variable_constant -> INT_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',126),
  ('variable_constant -> DOUBLE_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',127),
  ('variable_constant -> STRING_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',128),
  ('variable_constant -> BOOL_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',129),
  ('condition -> IF cond COLON post_condition','condition',4,'p_condition','parser.py',133),
  ('post_condition -> statement post_post_condition','post_condition',2,'p_post_condition','parser.py',136),
  ('post_post_condition -> post_condition','post_post_condition',1,'p_post_post_condition','parser.py',139),
  ('post_post_condition -> END','post_post_condition',1,'p_post_post_condition','parser.py',140),
  ('post_post_condition -> else','post_post_condition',1,'p_post_post_condition','parser.py',141),
  ('else -> ELSE COLON post_else','else',3,'p_else','parser.py',145),
  ('post_else -> statement post_post_else','post_else',2,'p_post_else','parser.py',148),
  ('post_post_else -> post_else','post_post_else',1,'p_post_post_else','parser.py',151),
  ('post_post_else -> END','post_post_else',1,'p_post_post_else','parser.py',152),
  ('print -> PRINT cond post_print','print',3,'p_print','parser.py',155),
  ('post_print -> COMMA STRING_CONSTANT EOL','post_print',3,'p_post_print','parser.py',158),
  ('post_print -> empty','post_print',1,'p_post_print','parser.py',159),
  ('read -> READ LEFT_PARENTHESIS RIGHT_PARENTHESIS EOL','read',4,'p_read','parser.py',162),
  ('list -> identifier post_list','list',2,'p_list','parser.py',165),
  ('post_list -> EQUALS LEFT_BRACKET exp RIGHT_BRACKET EOL','post_list',5,'p_post_list','parser.py',168),
  ('post_list -> EOL','post_list',1,'p_post_list','parser.py',169),
  ('identifier -> ID post_identifier','identifier',2,'p_identifier','parser.py',172),
  ('post_identifier -> LEFT_BRACKET exp RIGHT_BRACKET','post_identifier',3,'p_post_identifier','parser.py',175),
  ('post_identifier -> empty','post_identifier',1,'p_post_identifier','parser.py',176),
  ('loop -> for','loop',1,'p_loop','parser.py',179),
  ('loop -> while','loop',1,'p_loop','parser.py',180),
  ('for -> FOR identifier post_for','for',3,'p_for','parser.py',184),
  ('post_for -> IN identifier post_cycle','post_for',3,'p_post_for','parser.py',187),
  ('post_for -> FROM exp TO exp post_cycle','post_for',5,'p_post_for','parser.py',188),
  ('while -> WHILE cond post_cycle','while',3,'p_while','parser.py',192),
  ('post_cycle -> COLON statement post_post_cycle','post_cycle',3,'p_post_cycle','parser.py',196),
  ('post_post_cycle -> statement post_post_cycle','post_post_cycle',2,'p_post_post_cycle','parser.py',199),
  ('post_post_cycle -> END','post_post_cycle',1,'p_post_post_cycle','parser.py',200),
  ('BOOL_CONSTANT -> TRUE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',203),
  ('BOOL_CONSTANT -> FALSE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',204),
]
