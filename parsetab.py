
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '699E0967C2DCFA635E9C8FCB092158A9'
    
_lr_action_items = {'RETURN':([56,62,104,105,106,107,112,113,114,115,116,117,118,121,123,133,134,144,156,161,163,164,175,],[-104,-104,-42,-8,-7,-104,-17,-15,-16,-39,-40,-37,-38,-41,157,-18,-104,-6,157,173,-104,-20,-19,]),'LESS':([9,23,25,37,38,39,41,42,43,45,46,47,48,50,51,54,75,77,80,84,87,88,105,106,107,127,128,129,130,131,133,134,135,136,144,163,164,175,],[-104,-92,-94,-80,-75,-102,-78,-77,-104,-104,-104,-103,-79,-76,-73,92,-74,-66,-71,-62,-65,-93,-8,-7,-104,-68,-67,-69,-70,-72,-18,-104,-63,-64,-6,-104,-20,-19,]),'READ':([34,56,62,104,105,106,107,115,116,117,118,121,123,133,134,144,146,154,156,163,164,166,170,175,193,196,],[57,-104,57,-42,-8,-7,-104,-39,-40,-37,-38,-41,57,-18,-104,-6,-104,-104,57,-104,-20,57,57,-19,-104,57,]),'FOR':([34,56,62,104,105,106,107,115,116,117,118,121,123,133,134,144,146,154,156,163,164,166,170,175,193,196,],[60,-104,60,-42,-8,-7,-104,-39,-40,-37,-38,-41,60,-18,-104,-6,-104,-104,60,-104,-20,60,60,-19,-104,60,]),'RIGHT_BRACKET':([9,23,25,37,38,39,41,42,43,45,46,47,48,49,50,51,54,55,75,77,80,84,87,88,89,90,96,98,100,103,105,106,107,127,128,129,130,131,133,134,135,136,137,139,141,142,143,144,163,164,165,175,],[-104,-92,-94,-80,-75,-102,-78,-77,-104,-104,-104,-103,-79,88,-76,-73,-104,-104,-74,-66,-71,-62,-65,-93,-104,140,-53,-55,-49,-52,-8,-7,-104,-68,-67,-69,-70,-72,-18,-104,-63,-64,-21,-23,-54,-50,-51,-6,-104,-20,-22,-19,]),'EOL':([6,9,10,11,12,23,25,27,32,37,38,39,41,42,43,45,46,47,48,50,51,53,54,55,56,61,63,64,65,66,68,70,73,75,77,80,84,87,88,96,98,100,103,105,106,107,110,120,122,127,128,129,130,131,133,134,135,136,140,141,142,143,144,145,146,147,148,150,152,154,163,164,167,172,174,175,178,181,183,189,191,192,193,195,],[-35,-104,-104,-36,34,-92,-94,-89,-91,-80,-75,-102,-78,-77,-104,-104,-104,-103,-79,-76,-73,-43,-104,-104,107,-95,107,107,107,107,-96,107,107,-74,-66,-71,-62,-65,-93,-53,-55,-49,-52,-8,-7,107,-104,107,107,-68,-67,-69,-70,-72,-18,107,-63,-64,-90,-54,-50,-51,-6,-88,107,-100,-85,-87,-97,107,107,-20,-86,107,107,-19,-98,107,-101,107,-99,-81,107,107,]),'EQUALS_EQUALS':([9,23,25,37,38,39,41,42,43,45,46,47,48,50,51,54,75,77,80,84,87,88,105,106,107,127,128,129,130,131,133,134,135,136,144,163,164,175,],[-104,-92,-94,-80,-75,-102,-78,-77,-104,-104,-104,-103,-79,-76,-73,95,-74,-66,-71,-62,-65,-93,-8,-7,-104,-68,-67,-69,-70,-72,-18,-104,-63,-64,-6,-104,-20,-19,]),'WHILE':([34,56,62,104,105,106,107,115,116,117,118,121,123,133,134,144,146,154,156,163,164,166,170,175,193,196,],[58,-104,58,-42,-8,-7,-104,-39,-40,-37,-38,-41,58,-18,-104,-6,-104,-104,58,-104,-20,58,58,-19,-104,58,]),'PRINT':([34,56,62,104,105,106,107,115,116,117,118,121,123,133,134,144,146,154,156,163,164,166,170,175,193,196,],[59,-104,59,-42,-8,-7,-104,-39,-40,-37,-38,-41,59,-18,-104,-6,-104,-104,59,-104,-20,59,59,-19,-104,59,]),'GREATER_EQUALS':([9,23,25,37,38,39,41,42,43,45,46,47,48,50,51,54,75,77,80,84,87,88,105,106,107,127,128,129,130,131,133,134,135,136,144,163,164,175,],[-104,-92,-94,-80,-75,-102,-78,-77,-104,-104,-104,-103,-79,-76,-73,97,-74,-66,-71,-62,-65,-93,-8,-7,-104,-68,-67,-69,-70,-72,-18,-104,-63,-64,-6,-104,-20,-19,]),'MINUS':([9,23,24,25,26,28,29,30,31,33,37,38,39,41,42,43,44,45,46,47,48,50,51,52,58,59,67,75,76,77,78,79,80,81,83,85,86,88,91,92,93,94,95,97,99,101,102,105,106,107,127,128,129,130,131,133,134,138,144,151,157,163,164,173,175,177,],[-104,-92,40,-94,-48,-45,-46,-44,40,-47,-80,-75,-102,-78,-77,-104,40,-104,86,-103,-79,-76,-73,40,40,40,40,-74,40,-66,40,40,-71,40,40,40,40,-93,-57,-56,-61,-59,-60,-58,40,40,40,-8,-7,-104,-68,-67,-69,-70,-72,-18,-104,40,-6,40,40,-104,-20,40,-19,40,]),'MINUS_EQUALS':([9,10,23,25,45,88,],[-104,26,-92,-94,-104,-93,]),'DOUBLE_CONSTANT':([24,26,28,29,30,31,33,40,44,52,58,59,67,76,78,79,81,83,85,86,91,92,93,94,95,97,99,101,102,138,151,157,173,177,],[41,-48,-45,-46,-44,41,-47,41,41,41,41,41,41,41,41,41,41,41,41,41,-57,-56,-61,-59,-60,-58,41,41,41,41,41,41,41,41,]),'NOT_EQUALS':([9,23,25,37,38,39,41,42,43,45,46,47,48,50,51,54,75,77,80,84,87,88,105,106,107,127,128,129,130,131,133,134,135,136,144,163,164,175,],[-104,-92,-94,-80,-75,-102,-78,-77,-104,-104,-104,-103,-79,-76,-73,93,-74,-66,-71,-62,-65,-93,-8,-7,-104,-68,-67,-69,-70,-72,-18,-104,-63,-64,-6,-104,-20,-19,]),'TRUE':([24,26,28,29,30,31,33,40,44,52,58,59,67,76,78,79,81,83,85,86,91,92,93,94,95,97,99,101,102,138,151,157,173,177,],[39,-48,-45,-46,-44,39,-47,39,39,39,39,39,39,39,39,39,39,39,39,39,-57,-56,-61,-59,-60,-58,39,39,39,39,39,39,39,39,]),'LESS_EQUALS':([9,23,25,37,38,39,41,42,43,45,46,47,48,50,51,54,75,77,80,84,87,88,105,106,107,127,128,129,130,131,133,134,135,136,144,163,164,175,],[-104,-92,-94,-80,-75,-102,-78,-77,-104,-104,-104,-103,-79,-76,-73,94,-74,-66,-71,-62,-65,-93,-8,-7,-104,-68,-67,-69,-70,-72,-18,-104,-63,-64,-6,-104,-20,-19,]),'TO':([9,23,25,37,38,39,41,42,43,45,46,47,48,50,51,75,77,80,84,87,88,105,106,107,127,128,129,130,131,133,134,135,136,144,163,164,168,175,],[-104,-92,-94,-80,-75,-102,-78,-77,-104,-104,-104,-103,-79,-76,-73,-74,-66,-71,-62,-65,-93,-8,-7,-104,-68,-67,-69,-70,-72,-18,-104,-63,-64,-6,-104,-20,177,-19,]),'INT_CONSTANT':([24,26,28,29,30,31,33,40,44,52,58,59,67,76,78,79,81,83,85,86,91,92,93,94,95,97,99,101,102,138,151,157,173,177,],[42,-48,-45,-46,-44,42,-47,42,42,42,42,42,42,42,42,42,42,42,42,42,-57,-56,-61,-59,-60,-58,42,42,42,42,42,42,42,42,]),'COLON':([9,23,25,37,38,39,41,42,43,45,46,47,48,50,51,54,55,75,77,80,84,87,88,96,98,100,103,105,106,107,109,119,127,128,129,130,131,133,134,135,136,141,142,143,144,163,164,169,175,184,188,],[-104,-92,-94,-80,-75,-102,-78,-77,-104,-104,-104,-103,-79,-76,-73,-104,-104,-74,-66,-71,-62,-65,-93,-53,-55,-49,-52,-8,-7,-104,146,154,-68,-67,-69,-70,-72,-18,-104,-63,-64,-54,-50,-51,-6,-104,-20,146,-19,146,193,]),'PLUS':([9,23,25,37,38,39,41,42,43,45,46,47,48,50,51,75,77,80,88,105,106,107,127,128,129,130,131,133,134,144,163,164,175,],[-104,-92,-94,-80,-75,-102,-78,-77,-104,-104,85,-103,-79,-76,-73,-74,-66,-71,-93,-8,-7,-104,-68,-67,-69,-70,-72,-18,-104,-6,-104,-20,-19,]),'PERCENTAGE':([9,23,25,37,38,39,41,42,43,45,47,48,50,51,75,88,105,106,107,131,133,134,144,163,164,175,],[-104,-92,-94,-80,-75,-102,-78,-77,79,-104,-103,-79,-76,-73,-74,-93,-8,-7,-104,-72,-18,-104,-6,-104,-20,-19,]),'IF':([34,56,62,104,105,106,107,115,116,117,118,121,123,133,134,144,146,154,156,163,164,166,170,175,193,196,],[67,-104,67,-42,-8,-7,-104,-39,-40,-37,-38,-41,67,-18,-104,-6,-104,-104,67,-104,-20,67,67,-19,-104,67,]),'LEFT_PARENTHESIS':([19,24,26,28,29,30,31,33,44,45,52,57,58,59,67,76,78,79,81,83,85,86,91,92,93,94,95,97,99,101,102,138,151,157,173,177,],[36,44,-48,-45,-46,-44,44,-47,44,83,44,108,44,44,44,44,44,44,44,44,44,44,-57,-56,-61,-59,-60,-58,44,44,44,44,44,44,44,44,]),'$end':([2,3,13,18,35,105,106,107,120,144,155,],[0,-4,-2,-3,-1,-8,-7,-104,-104,-6,-14,]),'END':([56,62,104,105,106,107,112,113,114,115,116,117,118,121,133,134,144,161,163,164,175,176,179,180,185,186,187,190,198,],[-104,-104,-42,-8,-7,-104,-17,-15,-16,-39,-40,-37,-38,-41,-18,-104,-6,174,-104,-20,-19,183,-104,189,192,-82,-83,195,-84,]),'DIVIDE':([9,23,25,37,38,39,41,42,43,45,47,48,50,51,75,88,105,106,107,131,133,134,144,163,164,175,],[-104,-92,-94,-80,-75,-102,-78,-77,76,-104,-103,-79,-76,-73,-74,-93,-8,-7,-104,-72,-18,-104,-6,-104,-20,-19,]),'TIMES_EQUALS':([9,10,23,25,45,88,],[-104,28,-92,-94,-104,-93,]),'EQUALS':([9,10,23,25,45,88,],[-104,30,-92,-94,-104,-93,]),'TIMES':([9,23,25,37,38,39,41,42,43,45,47,48,50,51,75,88,105,106,107,131,133,134,144,163,164,175,],[-104,-92,-94,-80,-75,-102,-78,-77,78,-104,-103,-79,-76,-73,-74,-93,-8,-7,-104,-72,-18,-104,-6,-104,-20,-19,]),'FUNC':([0,4,5,6,8,9,10,11,20,21,22,23,25,27,32,37,38,39,41,42,43,45,46,47,48,50,51,53,54,55,72,75,77,80,84,87,88,96,98,100,103,105,106,107,127,128,129,130,131,133,134,135,136,140,141,142,143,144,158,159,160,163,164,171,175,182,194,197,],[7,7,7,-35,-104,-104,-104,-36,-9,-5,-10,-92,-94,-89,-91,-80,-75,-102,-78,-77,-104,-104,-104,-103,-79,-76,-73,-43,-104,-104,-24,-74,-66,-71,-62,-65,-93,-53,-55,-49,-52,-8,-7,-104,-68,-67,-69,-70,-72,-18,-104,-63,-64,-90,-54,-50,-51,-6,-26,-28,-27,-104,-20,-25,-19,-29,-31,-30,]),'IN':([9,23,25,88,111,],[-104,-92,-94,-93,153,]),'FALSE':([24,26,28,29,30,31,33,40,44,52,58,59,67,76,78,79,81,83,85,86,91,92,93,94,95,97,99,101,102,138,151,157,173,177,],[47,-48,-45,-46,-44,47,-47,47,47,47,47,47,47,47,47,47,47,47,47,47,-57,-56,-61,-59,-60,-58,47,47,47,47,47,47,47,47,]),'RIGHT_PARENTHESIS':([9,23,25,36,37,38,39,41,42,43,45,46,47,48,50,51,54,55,71,74,75,77,80,82,83,84,87,88,89,96,98,100,103,105,106,107,108,124,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,143,144,162,163,164,165,175,],[-104,-92,-94,73,-80,-75,-102,-78,-77,-104,-104,-104,-103,-79,-76,-73,-104,-104,122,-104,-74,-66,-71,131,134,-62,-65,-93,-104,-53,-55,-49,-52,-8,-7,-104,145,-32,-34,-68,-67,-69,-70,-72,163,-18,-104,-63,-64,-21,-23,-54,-50,-51,-6,-33,-104,-20,-22,-19,]),'ELSE':([56,62,104,105,106,107,112,113,114,115,116,117,118,121,133,134,144,163,164,175,179,],[-104,-104,-42,-8,-7,-104,-17,-15,-16,-39,-40,-37,-38,-41,-18,-104,-6,-104,-20,-19,188,]),'ID':([0,6,7,8,9,10,11,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,58,59,60,62,67,75,76,77,78,79,80,81,83,84,85,86,87,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,115,116,117,118,121,123,125,127,128,129,130,131,133,134,135,136,138,140,141,142,143,144,146,151,153,154,156,157,163,164,166,170,173,175,177,193,196,],[9,-35,19,9,-104,-104,-36,-92,45,-94,-48,-89,-45,-46,-44,45,-91,-47,45,9,-80,-75,-102,9,-78,-77,-104,45,-104,-104,-103,-79,-76,-73,45,-43,-104,-104,-104,45,45,9,45,45,-74,45,-66,45,45,-71,45,45,-62,45,45,-65,-93,-57,-56,-61,-59,-60,-53,-58,-55,45,-49,45,45,-52,-42,-8,-7,-104,-39,-40,-37,-38,-41,45,9,-68,-67,-69,-70,-72,-18,-104,-63,-64,45,-90,-54,-50,-51,-6,-104,45,9,-104,45,45,-104,-20,45,45,45,-19,45,-104,45,]),'PLUS_EQUALS':([9,10,23,25,45,88,],[-104,33,-92,-94,-104,-93,]),'AND':([9,23,25,37,38,39,41,42,43,45,46,47,48,50,51,54,55,75,77,80,84,87,88,96,98,105,106,107,127,128,129,130,131,133,134,135,136,141,144,163,164,175,],[-104,-92,-94,-80,-75,-102,-78,-77,-104,-104,-104,-103,-79,-76,-73,-104,101,-74,-66,-71,-62,-65,-93,-53,-55,-8,-7,-104,-68,-67,-69,-70,-72,-18,-104,-63,-64,-54,-6,-104,-20,-19,]),'MAIN':([0,1,4,5,6,8,9,10,11,14,15,16,17,20,21,22,23,25,27,32,37,38,39,41,42,43,45,46,47,48,50,51,53,54,55,72,75,77,80,84,87,88,96,98,100,103,105,106,107,127,128,129,130,131,133,134,135,136,140,141,142,143,144,158,159,160,163,164,171,175,182,194,197,],[12,12,-104,12,-35,-104,-104,-104,-36,-11,-12,-13,12,-9,-5,-10,-92,-94,-89,-91,-80,-75,-102,-78,-77,-104,-104,-104,-103,-79,-76,-73,-43,-104,-104,-24,-74,-66,-71,-62,-65,-93,-53,-55,-49,-52,-8,-7,-104,-68,-67,-69,-70,-72,-18,-104,-63,-64,-90,-54,-50,-51,-6,-26,-28,-27,-104,-20,-25,-19,-29,-31,-30,]),'FROM':([9,23,25,88,111,],[-104,-92,-94,-93,151,]),'GREATER':([9,23,25,37,38,39,41,42,43,45,46,47,48,50,51,54,75,77,80,84,87,88,105,106,107,127,128,129,130,131,133,134,135,136,144,163,164,175,],[-104,-92,-94,-80,-75,-102,-78,-77,-104,-104,-104,-103,-79,-76,-73,91,-74,-66,-71,-62,-65,-93,-8,-7,-104,-68,-67,-69,-70,-72,-18,-104,-63,-64,-6,-104,-20,-19,]),'DIVIDE_EQUALS':([9,10,23,25,45,88,],[-104,29,-92,-94,-104,-93,]),'STRING_CONSTANT':([24,26,28,29,30,31,33,40,44,52,58,59,67,76,78,79,81,83,85,86,91,92,93,94,95,97,99,101,102,138,149,151,157,173,177,],[48,-48,-45,-46,-44,48,-47,48,48,48,48,48,48,48,48,48,48,48,48,48,-57,-56,-61,-59,-60,-58,48,48,48,48,167,48,48,48,48,]),'END_MAIN':([56,62,69,104,105,106,107,112,113,114,115,116,117,118,121,133,134,144,163,164,175,],[-104,-104,120,-42,-8,-7,-104,-17,-15,-16,-39,-40,-37,-38,-41,-18,-104,-6,-104,-20,-19,]),'LEFT_BRACKET':([9,30,45,],[24,52,24,]),'COMMA':([9,23,25,37,38,39,41,42,43,45,46,47,48,50,51,54,55,74,75,77,80,84,87,88,89,96,98,100,103,105,106,107,110,127,128,129,130,131,133,134,135,136,141,142,143,144,163,164,175,],[-104,-92,-94,-80,-75,-102,-78,-77,-104,-104,-104,-103,-79,-76,-73,-104,-104,125,-74,-66,-71,-62,-65,-93,138,-53,-55,-49,-52,-8,-7,-104,149,-68,-67,-69,-70,-72,-18,-104,-63,-64,-54,-50,-51,-6,-104,-20,-19,]),'OR':([9,23,25,37,38,39,41,42,43,45,46,47,48,50,51,54,55,75,77,80,84,87,88,96,98,105,106,107,127,128,129,130,131,133,134,135,136,141,144,163,164,175,],[-104,-92,-94,-80,-75,-102,-78,-77,-104,-104,-104,-103,-79,-76,-73,-104,102,-74,-66,-71,-62,-65,-93,-53,-55,-8,-7,-104,-68,-67,-69,-70,-72,-18,-104,-63,-64,-54,-6,-104,-20,-19,]),'MOD':([9,23,25,37,38,39,41,42,43,45,47,48,50,51,75,88,105,106,107,131,133,134,144,163,164,175,],[-104,-92,-94,-80,-75,-102,-78,-77,81,-104,-103,-79,-76,-73,-74,-93,-8,-7,-104,-72,-18,-104,-6,-104,-20,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'block':([34,62,123,156,166,170,196,],[69,114,161,161,176,179,198,]),'post_functions':([4,],[14,]),'relational_operator':([54,],[99,]),'call_function':([24,31,34,44,52,58,59,62,67,76,78,79,81,83,85,86,99,101,102,123,138,151,156,157,166,170,173,177,196,],[38,38,56,38,38,38,38,56,38,38,38,38,38,38,38,38,38,38,38,56,38,38,56,38,56,56,38,38,56,]),'optional_eol':([56,107,120,134,146,154,163,193,],[104,144,155,164,166,170,175,196,]),'BOOL_CONSTANT':([24,31,40,44,52,58,59,67,76,78,79,81,83,85,86,99,101,102,138,151,157,173,177,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'required_eol':([56,63,64,65,66,70,73,107,120,122,134,146,154,163,172,174,181,189,193,195,],[106,115,116,117,118,121,123,106,106,156,106,106,106,106,180,182,190,194,106,197,]),'post_print':([110,],[148,]),'post_parameters':([74,],[124,]),'cond':([31,44,52,58,59,67,83,101,102,138,157,173,],[53,82,89,109,110,119,89,142,143,89,172,181,]),'loop':([34,62,123,156,166,170,196,],[70,70,70,70,70,70,70,]),'post_function':([36,],[72,]),'post_cycle':([109,169,184,],[147,178,191,]),'post_cond':([55,],[100,]),'functions':([0,4,5,],[1,15,17,]),'call_parameters':([52,83,138,],[90,132,165,]),'post_condition':([179,],[185,]),'for':([34,62,123,156,166,170,196,],[61,61,61,61,61,61,61,]),'post_call_parameters':([89,],[137,]),'post_exp':([46,],[84,]),'post_variables':([8,],[21,]),'read':([34,62,123,156,166,170,196,],[64,64,64,64,64,64,64,]),'program':([0,],[2,]),'statement':([34,62,123,156,166,170,196,],[62,62,62,62,62,62,62,]),'factor':([24,31,44,52,58,59,67,76,78,79,81,83,85,86,99,101,102,138,151,157,173,177,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'print':([34,62,123,156,166,170,196,],[63,63,63,63,63,63,63,]),'main':([0,1,5,17,],[3,13,18,35,]),'empty':([4,8,9,10,43,45,46,54,55,56,62,74,89,107,110,120,134,146,154,163,179,193,],[16,22,25,32,80,25,87,98,103,105,112,126,139,105,150,105,105,105,105,105,187,105,]),'function':([0,4,5,],[4,4,4,]),'post_for':([111,],[152,]),'pre_variables':([0,8,],[5,20,]),'assignment':([0,8,34,62,123,156,166,170,196,],[6,6,6,6,6,6,6,6,6,]),'post_term':([43,],[77,]),'else':([179,],[186,]),'value_return':([123,156,],[159,159,]),'post_identifier':([9,45,],[23,23,]),'void_return':([123,156,],[160,160,]),'variable':([0,8,34,62,123,156,166,170,196,],[8,8,65,65,65,65,65,65,65,]),'post_block':([62,],[113,]),'condition':([34,62,123,156,166,170,196,],[66,66,66,66,66,66,66,]),'term':([24,31,44,52,58,59,67,76,78,79,81,83,85,86,99,101,102,138,151,157,173,177,],[46,46,46,46,46,46,46,127,128,129,130,46,46,46,46,46,46,46,46,46,46,46,]),'post_list':([10,],[27,]),'parameters':([36,125,],[71,162,]),'list':([0,8,34,62,123,156,166,170,196,],[11,11,11,11,11,11,11,11,11,]),'func_return':([123,156,],[158,171,]),'while':([34,62,123,156,166,170,196,],[68,68,68,68,68,68,68,]),'post_expression':([54,],[96,]),'assignment_operator':([10,],[31,]),'exp':([24,31,44,52,58,59,67,83,85,86,99,101,102,138,151,157,173,177,],[49,54,54,54,54,54,54,54,135,136,141,54,54,54,168,54,54,184,]),'identifier':([0,8,24,31,34,36,40,44,52,58,59,60,62,67,76,78,79,81,83,85,86,99,101,102,123,125,138,151,153,156,157,166,170,173,177,196,],[10,10,50,50,10,74,50,50,50,50,50,111,10,50,50,50,50,50,50,50,50,50,50,50,10,74,50,50,169,10,50,10,10,50,50,10,]),'expression':([31,44,52,58,59,67,83,101,102,138,157,173,],[55,55,55,55,55,55,55,55,55,55,55,55,]),'post_call_function':([83,],[133,]),'variable_constant':([24,31,40,44,52,58,59,67,76,78,79,81,83,85,86,99,101,102,138,151,157,173,177,],[51,51,75,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> pre_variables functions main','program',3,'p_program','parser.py',19),
  ('program -> functions main','program',2,'p_program','parser.py',20),
  ('program -> pre_variables main','program',2,'p_program','parser.py',21),
  ('program -> main','program',1,'p_program','parser.py',22),
  ('pre_variables -> variable post_variables','pre_variables',2,'p_pre_variables','parser.py',26),
  ('required_eol -> EOL optional_eol','required_eol',2,'p_required_eol','parser.py',29),
  ('optional_eol -> required_eol','optional_eol',1,'p_optional_eol','parser.py',32),
  ('optional_eol -> empty','optional_eol',1,'p_optional_eol','parser.py',33),
  ('post_variables -> pre_variables','post_variables',1,'p_post_variables','parser.py',36),
  ('post_variables -> empty','post_variables',1,'p_post_variables','parser.py',37),
  ('functions -> function post_functions','functions',2,'p_functions','parser.py',41),
  ('post_functions -> functions','post_functions',1,'p_post_functions','parser.py',45),
  ('post_functions -> empty','post_functions',1,'p_post_functions','parser.py',46),
  ('main -> MAIN EOL block END_MAIN optional_eol','main',5,'p_main','parser.py',50),
  ('block -> statement post_block','block',2,'p_block','parser.py',54),
  ('post_block -> block','post_block',1,'p_post_block','parser.py',57),
  ('post_block -> empty','post_block',1,'p_post_block','parser.py',58),
  ('call_function -> ID LEFT_PARENTHESIS post_call_function','call_function',3,'p_call_function','parser.py',62),
  ('post_call_function -> call_parameters RIGHT_PARENTHESIS optional_eol','post_call_function',3,'p_post_call_function','parser.py',65),
  ('post_call_function -> RIGHT_PARENTHESIS optional_eol','post_call_function',2,'p_post_call_function','parser.py',66),
  ('call_parameters -> cond post_call_parameters','call_parameters',2,'p_call_parameters','parser.py',70),
  ('post_call_parameters -> COMMA call_parameters','post_call_parameters',2,'p_post_call_parameters','parser.py',73),
  ('post_call_parameters -> empty','post_call_parameters',1,'p_post_call_parameters','parser.py',74),
  ('function -> FUNC ID LEFT_PARENTHESIS post_function','function',4,'p_function','parser.py',78),
  ('post_function -> parameters RIGHT_PARENTHESIS required_eol func_return','post_function',4,'p_post_function','parser.py',81),
  ('post_function -> RIGHT_PARENTHESIS required_eol func_return','post_function',3,'p_post_function','parser.py',82),
  ('func_return -> void_return','func_return',1,'p_func_return','parser.py',85),
  ('func_return -> value_return','func_return',1,'p_func_return','parser.py',86),
  ('void_return -> block END required_eol','void_return',3,'p_void_return','parser.py',89),
  ('value_return -> block RETURN cond required_eol END required_eol','value_return',6,'p_value_return','parser.py',92),
  ('value_return -> RETURN cond required_eol END required_eol','value_return',5,'p_value_return','parser.py',93),
  ('parameters -> identifier post_parameters','parameters',2,'p_parameters','parser.py',98),
  ('post_parameters -> COMMA parameters','post_parameters',2,'p_post_parameters','parser.py',101),
  ('post_parameters -> empty','post_parameters',1,'p_post_parameters','parser.py',102),
  ('variable -> assignment','variable',1,'p_variable','parser.py',106),
  ('variable -> list','variable',1,'p_variable','parser.py',107),
  ('statement -> variable required_eol','statement',2,'p_statement','parser.py',111),
  ('statement -> condition required_eol','statement',2,'p_statement','parser.py',112),
  ('statement -> print required_eol','statement',2,'p_statement','parser.py',113),
  ('statement -> read required_eol','statement',2,'p_statement','parser.py',114),
  ('statement -> loop required_eol','statement',2,'p_statement','parser.py',115),
  ('statement -> call_function optional_eol','statement',2,'p_statement','parser.py',116),
  ('assignment -> identifier assignment_operator cond','assignment',3,'p_assignment','parser.py',121),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',125),
  ('assignment_operator -> TIMES_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',126),
  ('assignment_operator -> DIVIDE_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',127),
  ('assignment_operator -> PLUS_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',128),
  ('assignment_operator -> MINUS_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',129),
  ('cond -> expression post_cond','cond',2,'p_cond','parser.py',133),
  ('post_cond -> AND cond','post_cond',2,'p_post_cond','parser.py',136),
  ('post_cond -> OR cond','post_cond',2,'p_post_cond','parser.py',137),
  ('post_cond -> empty','post_cond',1,'p_post_cond','parser.py',138),
  ('expression -> exp post_expression','expression',2,'p_expression','parser.py',142),
  ('post_expression -> relational_operator exp','post_expression',2,'p_post_expression','parser.py',145),
  ('post_expression -> empty','post_expression',1,'p_post_expression','parser.py',146),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',150),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',151),
  ('relational_operator -> GREATER_EQUALS','relational_operator',1,'p_relational_operator','parser.py',152),
  ('relational_operator -> LESS_EQUALS','relational_operator',1,'p_relational_operator','parser.py',153),
  ('relational_operator -> EQUALS_EQUALS','relational_operator',1,'p_relational_operator','parser.py',154),
  ('relational_operator -> NOT_EQUALS','relational_operator',1,'p_relational_operator','parser.py',155),
  ('exp -> term post_exp','exp',2,'p_exp','parser.py',159),
  ('post_exp -> PLUS exp','post_exp',2,'p_post_exp','parser.py',162),
  ('post_exp -> MINUS exp','post_exp',2,'p_post_exp','parser.py',163),
  ('post_exp -> empty','post_exp',1,'p_post_exp','parser.py',164),
  ('term -> factor post_term','term',2,'p_term','parser.py',168),
  ('post_term -> TIMES term','post_term',2,'p_post_term','parser.py',171),
  ('post_term -> DIVIDE term','post_term',2,'p_post_term','parser.py',172),
  ('post_term -> PERCENTAGE term','post_term',2,'p_post_term','parser.py',173),
  ('post_term -> MOD term','post_term',2,'p_post_term','parser.py',174),
  ('post_term -> empty','post_term',1,'p_post_term','parser.py',175),
  ('factor -> LEFT_PARENTHESIS cond RIGHT_PARENTHESIS','factor',3,'p_factor','parser.py',179),
  ('factor -> variable_constant','factor',1,'p_factor','parser.py',180),
  ('factor -> MINUS variable_constant','factor',2,'p_factor','parser.py',181),
  ('factor -> call_function','factor',1,'p_factor','parser.py',182),
  ('variable_constant -> identifier','variable_constant',1,'p_variable_constant','parser.py',186),
  ('variable_constant -> INT_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',187),
  ('variable_constant -> DOUBLE_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',188),
  ('variable_constant -> STRING_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',189),
  ('variable_constant -> BOOL_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',190),
  ('condition -> IF cond COLON optional_eol block post_condition END','condition',7,'p_condition','parser.py',194),
  ('post_condition -> else','post_condition',1,'p_post_condition','parser.py',198),
  ('post_condition -> empty','post_condition',1,'p_post_condition','parser.py',199),
  ('else -> ELSE COLON optional_eol block','else',4,'p_else','parser.py',203),
  ('print -> PRINT cond post_print','print',3,'p_print','parser.py',207),
  ('post_print -> COMMA STRING_CONSTANT','post_print',2,'p_post_print','parser.py',210),
  ('post_print -> empty','post_print',1,'p_post_print','parser.py',211),
  ('read -> READ LEFT_PARENTHESIS RIGHT_PARENTHESIS','read',3,'p_read','parser.py',215),
  ('list -> identifier post_list','list',2,'p_list','parser.py',219),
  ('post_list -> EQUALS LEFT_BRACKET call_parameters RIGHT_BRACKET','post_list',4,'p_post_list','parser.py',222),
  ('post_list -> empty','post_list',1,'p_post_list','parser.py',223),
  ('identifier -> ID post_identifier','identifier',2,'p_identifier','parser.py',227),
  ('post_identifier -> LEFT_BRACKET exp RIGHT_BRACKET','post_identifier',3,'p_post_identifier','parser.py',230),
  ('post_identifier -> empty','post_identifier',1,'p_post_identifier','parser.py',231),
  ('loop -> for','loop',1,'p_loop','parser.py',235),
  ('loop -> while','loop',1,'p_loop','parser.py',236),
  ('for -> FOR identifier post_for','for',3,'p_for','parser.py',240),
  ('post_for -> IN identifier post_cycle','post_for',3,'p_post_for','parser.py',243),
  ('post_for -> FROM exp TO exp post_cycle','post_for',5,'p_post_for','parser.py',244),
  ('while -> WHILE cond post_cycle','while',3,'p_while','parser.py',248),
  ('post_cycle -> COLON optional_eol block END','post_cycle',4,'p_post_cycle','parser.py',252),
  ('BOOL_CONSTANT -> TRUE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',255),
  ('BOOL_CONSTANT -> FALSE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',256),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',259),
]
