
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '4030C8232E188384A380406466801DE6'
    
_lr_action_items = {'RETURN':([4,5,6,11,16,21,22,23,24,25,26,27,29,31,33,38,43,45,47,48,50,52,53,54,56,57,58,59,60,61,62,63,65,66,67,72,76,78,79,81,84,87,90,96,98,100,103,104,106,108,112,113,118,120,122,123,124,125,126,127,128,129,130,131,132,138,140,141,146,150,152,164,168,],[-98,-29,-30,-98,-36,-89,-98,-33,-34,-31,-98,-32,-90,-35,-83,-85,-86,-88,-74,-69,-96,-72,-71,-98,-98,-97,-73,-98,-70,-98,-67,-98,-9,-11,-10,-37,-82,-94,-68,-60,-65,-56,-59,-47,-49,-43,-46,-79,-81,-91,-12,-14,142,-87,-62,-61,-63,-64,-66,-57,-58,-48,-44,-45,-80,-13,-84,142,160,-95,-92,-75,-93,]),'LESS':([11,26,43,45,47,48,50,52,53,54,56,57,58,59,60,62,79,81,84,87,90,112,113,120,122,123,124,125,126,127,128,138,],[-98,-98,-86,-88,-74,-69,-96,-72,-71,-98,-98,-97,-73,92,-70,-67,-68,-60,-65,-56,-59,-12,-14,-87,-62,-61,-63,-64,-66,-57,-58,-13,]),'READ':([3,4,5,6,11,16,21,22,23,24,25,26,27,29,31,33,38,43,45,47,48,50,52,53,54,56,57,58,59,60,61,62,63,72,76,77,78,79,81,84,87,90,96,98,100,103,104,106,108,112,113,114,118,120,122,123,124,125,126,127,128,129,130,131,132,138,140,141,150,152,164,165,168,],[17,-98,-29,-30,-98,-36,-89,17,-33,-34,-31,-98,-32,-90,-35,-83,-85,-86,-88,-74,-69,-96,-72,-71,-98,-98,-97,-73,-98,-70,-98,-67,-98,-37,-82,17,-94,-68,-60,-65,-56,-59,-47,-49,-43,-46,-79,-81,-91,-12,-14,17,17,-87,-62,-61,-63,-64,-66,-57,-58,-48,-44,-45,-80,-13,-84,17,-95,-92,-75,17,-93,]),'RIGHT_BRACKET':([11,26,43,45,47,48,50,52,53,54,56,57,58,59,60,61,62,75,79,81,84,87,90,96,98,100,103,110,112,113,115,120,122,123,124,125,126,127,128,129,130,131,135,137,138,153,],[-98,-98,-86,-88,-74,-69,-96,-72,-71,-98,-98,-97,-73,-98,-70,-98,-67,120,-68,-60,-65,-56,-59,-47,-49,-43,-46,-98,-12,-14,140,-87,-62,-61,-63,-64,-66,-57,-58,-48,-44,-45,-15,-17,-13,-16,]),'EQUALS_EQUALS':([11,26,43,45,47,48,50,52,53,54,56,57,58,59,60,62,79,81,84,87,90,112,113,120,122,123,124,125,126,127,128,138,],[-98,-98,-86,-88,-74,-69,-96,-72,-71,-98,-98,-97,-73,95,-70,-67,-68,-60,-65,-56,-59,-12,-14,-87,-62,-61,-63,-64,-66,-57,-58,-13,]),'WHILE':([3,4,5,6,11,16,21,22,23,24,25,26,27,29,31,33,38,43,45,47,48,50,52,53,54,56,57,58,59,60,61,62,63,72,76,77,78,79,81,84,87,90,96,98,100,103,104,106,108,112,113,114,118,120,122,123,124,125,126,127,128,129,130,131,132,138,140,141,150,152,164,165,168,],[18,-98,-29,-30,-98,-36,-89,18,-33,-34,-31,-98,-32,-90,-35,-83,-85,-86,-88,-74,-69,-96,-72,-71,-98,-98,-97,-73,-98,-70,-98,-67,-98,-37,-82,18,-94,-68,-60,-65,-56,-59,-47,-49,-43,-46,-79,-81,-91,-12,-14,18,18,-87,-62,-61,-63,-64,-66,-57,-58,-48,-44,-45,-80,-13,-84,18,-95,-92,-75,18,-93,]),'COLON':([11,26,43,45,47,48,49,50,52,53,54,56,57,58,59,60,61,62,69,79,81,84,87,90,96,98,100,103,112,113,120,122,123,124,125,126,127,128,129,130,131,134,138,157,163,],[-98,-98,-86,-88,-74,-69,77,-96,-72,-71,-98,-98,-97,-73,-98,-70,-98,-67,114,-68,-60,-65,-56,-59,-47,-49,-43,-46,-12,-14,-87,-62,-61,-63,-64,-66,-57,-58,-48,-44,-45,77,-13,165,77,]),'PRINT':([3,4,5,6,11,16,21,22,23,24,25,26,27,29,31,33,38,43,45,47,48,50,52,53,54,56,57,58,59,60,61,62,63,72,76,77,78,79,81,84,87,90,96,98,100,103,104,106,108,112,113,114,118,120,122,123,124,125,126,127,128,129,130,131,132,138,140,141,150,152,164,165,168,],[19,-98,-29,-30,-98,-36,-89,19,-33,-34,-31,-98,-32,-90,-35,-83,-85,-86,-88,-74,-69,-96,-72,-71,-98,-98,-97,-73,-98,-70,-98,-67,-98,-37,-82,19,-94,-68,-60,-65,-56,-59,-47,-49,-43,-46,-79,-81,-91,-12,-14,19,19,-87,-62,-61,-63,-64,-66,-57,-58,-48,-44,-45,-80,-13,-84,19,-95,-92,-75,19,-93,]),'GREATER_EQUALS':([11,26,43,45,47,48,50,52,53,54,56,57,58,59,60,62,79,81,84,87,90,112,113,120,122,123,124,125,126,127,128,138,],[-98,-98,-86,-88,-74,-69,-96,-72,-71,-98,-98,-97,-73,97,-70,-67,-68,-60,-65,-56,-59,-12,-14,-87,-62,-61,-63,-64,-66,-57,-58,-13,]),'MINUS':([11,18,19,26,28,32,34,35,36,37,39,43,44,45,47,48,50,52,53,54,55,56,57,58,60,62,68,71,79,80,81,82,83,84,85,88,89,91,92,93,94,95,97,99,101,102,107,112,113,120,122,123,124,125,126,136,138,142,151,160,],[-98,51,51,-98,51,-42,-39,-40,-38,51,-41,-86,51,-88,-74,-69,-96,-72,-71,-98,51,89,-97,-73,-70,-67,51,51,-68,51,-60,51,51,-65,51,51,51,-51,-50,-55,-53,-54,-52,51,51,51,51,-12,-14,-87,-62,-61,-63,-64,-66,51,-13,51,51,51,]),'MINUS_EQUALS':([4,11,26,43,45,120,],[32,-98,-98,-86,-88,-87,]),'FOR':([3,4,5,6,11,16,21,22,23,24,25,26,27,29,31,33,38,43,45,47,48,50,52,53,54,56,57,58,59,60,61,62,63,72,76,77,78,79,81,84,87,90,96,98,100,103,104,106,108,112,113,114,118,120,122,123,124,125,126,127,128,129,130,131,132,138,140,141,150,152,164,165,168,],[20,-98,-29,-30,-98,-36,-89,20,-33,-34,-31,-98,-32,-90,-35,-83,-85,-86,-88,-74,-69,-96,-72,-71,-98,-98,-97,-73,-98,-70,-98,-67,-98,-37,-82,20,-94,-68,-60,-65,-56,-59,-47,-49,-43,-46,-79,-81,-91,-12,-14,20,20,-87,-62,-61,-63,-64,-66,-57,-58,-48,-44,-45,-80,-13,-84,20,-95,-92,-75,20,-93,]),'NOT_EQUALS':([11,26,43,45,47,48,50,52,53,54,56,57,58,59,60,62,79,81,84,87,90,112,113,120,122,123,124,125,126,127,128,138,],[-98,-98,-86,-88,-74,-69,-96,-72,-71,-98,-98,-97,-73,93,-70,-67,-68,-60,-65,-56,-59,-12,-14,-87,-62,-61,-63,-64,-66,-57,-58,-13,]),'DOUBLE_CONSTANT':([18,19,28,32,34,35,36,37,39,44,51,55,68,71,80,82,83,85,88,89,91,92,93,94,95,97,99,101,102,107,136,142,151,160,],[52,52,52,-42,-39,-40,-38,52,-41,52,52,52,52,52,52,52,52,52,52,52,-51,-50,-55,-53,-54,-52,52,52,52,52,52,52,52,52,]),'LESS_EQUALS':([11,26,43,45,47,48,50,52,53,54,56,57,58,59,60,62,79,81,84,87,90,112,113,120,122,123,124,125,126,127,128,138,],[-98,-98,-86,-88,-74,-69,-96,-72,-71,-98,-98,-97,-73,94,-70,-67,-68,-60,-65,-56,-59,-12,-14,-87,-62,-61,-63,-64,-66,-57,-58,-13,]),'TO':([11,26,43,45,47,48,50,52,53,54,56,57,58,60,62,79,81,84,87,90,112,113,120,122,123,124,125,126,127,128,133,138,],[-98,-98,-86,-88,-74,-69,-96,-72,-71,-98,-98,-97,-73,-70,-67,-68,-60,-65,-56,-59,-12,-14,-87,-62,-61,-63,-64,-66,-57,-58,151,-13,]),'INT_CONSTANT':([18,19,28,32,34,35,36,37,39,44,51,55,68,71,80,82,83,85,88,89,91,92,93,94,95,97,99,101,102,107,136,142,151,160,],[53,53,53,-42,-39,-40,-38,53,-41,53,53,53,53,53,53,53,53,53,53,53,-51,-50,-55,-53,-54,-52,53,53,53,53,53,53,53,53,]),'COMMA':([11,26,43,45,47,48,50,52,53,54,56,57,58,59,60,61,62,63,79,81,84,87,90,96,98,100,103,110,112,113,119,120,122,123,124,125,126,127,128,129,130,131,138,],[-98,-98,-86,-88,-74,-69,-96,-72,-71,-98,-98,-97,-73,-98,-70,-98,-67,105,-68,-60,-65,-56,-59,-47,-49,-43,-46,136,-12,-14,148,-87,-62,-61,-63,-64,-66,-57,-58,-48,-44,-45,-13,]),'PLUS':([11,26,43,45,47,48,50,52,53,54,56,57,58,60,62,79,81,84,112,113,120,122,123,124,125,126,138,],[-98,-98,-86,-88,-74,-69,-96,-72,-71,-98,88,-97,-73,-70,-67,-68,-60,-65,-12,-14,-87,-62,-61,-63,-64,-66,-13,]),'PERCENTAGE':([11,26,43,45,47,48,50,52,53,54,57,58,60,62,79,112,113,120,126,138,],[-98,-98,-86,-88,-74,-69,-96,-72,-71,83,-97,-73,-70,-67,-68,-12,-14,-87,-66,-13,]),'IF':([3,4,5,6,11,16,21,22,23,24,25,26,27,29,31,33,38,43,45,47,48,50,52,53,54,56,57,58,59,60,61,62,63,72,76,77,78,79,81,84,87,90,96,98,100,103,104,106,108,112,113,114,118,120,122,123,124,125,126,127,128,129,130,131,132,138,140,141,150,152,164,165,168,],[28,-98,-29,-30,-98,-36,-89,28,-33,-34,-31,-98,-32,-90,-35,-83,-85,-86,-88,-74,-69,-96,-72,-71,-98,-98,-97,-73,-98,-70,-98,-67,-98,-37,-82,28,-94,-68,-60,-65,-56,-59,-47,-49,-43,-46,-79,-81,-91,-12,-14,28,28,-87,-62,-61,-63,-64,-66,-57,-58,-48,-44,-45,-80,-13,-84,28,-95,-92,-75,28,-93,]),'LEFT_PARENTHESIS':([17,18,19,26,28,32,34,35,36,37,39,40,44,55,68,71,80,82,83,85,88,89,91,92,93,94,95,97,99,101,102,107,136,142,151,160,],[46,55,55,68,55,-42,-39,-40,-38,55,-41,73,55,55,55,55,55,55,55,55,55,55,-51,-50,-55,-53,-54,-52,55,55,55,55,55,55,55,55,]),'$end':([7,10,15,42,70,74,],[0,-4,-2,-3,-8,-1,]),'END':([4,5,6,11,16,21,22,23,24,25,26,27,29,31,33,38,43,45,47,48,50,52,53,54,56,57,58,59,60,61,62,63,65,66,67,72,76,78,79,81,84,87,90,96,98,100,103,104,106,108,112,113,120,121,122,123,124,125,126,127,128,129,130,131,132,138,139,140,146,150,152,154,155,156,159,164,167,168,169,],[-98,-29,-30,-98,-36,-89,-98,-33,-34,-31,-98,-32,-90,-35,-83,-85,-86,-88,-74,-69,-96,-72,-71,-98,-98,-97,-73,-98,-70,-98,-67,-98,-9,-11,-10,-37,-82,-94,-68,-60,-65,-56,-59,-47,-49,-43,-46,-79,-81,-91,-12,-14,-87,150,-62,-61,-63,-64,-66,-57,-58,-48,-44,-45,-80,-13,-98,-84,161,-95,-92,164,-76,-77,166,-75,170,-93,-78,]),'DIVIDE':([11,26,43,45,47,48,50,52,53,54,57,58,60,62,79,112,113,120,126,138,],[-98,-98,-86,-88,-74,-69,-96,-72,-71,80,-97,-73,-70,-67,-68,-12,-14,-87,-66,-13,]),'TIMES_EQUALS':([4,11,26,43,45,120,],[34,-98,-98,-86,-88,-87,]),'EQUALS':([4,11,26,43,45,120,],[36,-98,-98,-86,-88,-87,]),'ELSE':([4,5,6,11,16,21,22,23,24,25,26,27,29,31,33,38,43,45,47,48,50,52,53,54,56,57,58,59,60,61,62,63,65,66,67,72,76,78,79,81,84,87,90,96,98,100,103,104,106,108,112,113,120,122,123,124,125,126,127,128,129,130,131,132,138,139,140,150,152,164,168,],[-98,-29,-30,-98,-36,-89,-98,-33,-34,-31,-98,-32,-90,-35,-83,-85,-86,-88,-74,-69,-96,-72,-71,-98,-98,-97,-73,-98,-70,-98,-67,-98,-9,-11,-10,-37,-82,-94,-68,-60,-65,-56,-59,-47,-49,-43,-46,-79,-81,-91,-12,-14,-87,-62,-61,-63,-64,-66,-57,-58,-48,-44,-45,-80,-13,157,-84,-95,-92,-75,-93,]),'FUNC':([0,1,4,5,6,9,11,26,33,38,43,45,47,48,50,52,53,54,56,57,58,59,60,61,62,72,79,81,84,87,90,96,98,100,103,112,113,117,120,122,123,124,125,126,127,128,129,130,131,138,140,143,144,145,158,161,166,170,],[8,8,-98,-29,-30,8,-98,-98,-83,-85,-86,-88,-74,-69,-96,-72,-71,-98,-98,-97,-73,-98,-70,-98,-67,-37,-68,-60,-65,-56,-59,-47,-49,-43,-46,-12,-14,-18,-87,-62,-61,-63,-64,-66,-57,-58,-48,-44,-45,-13,-84,-20,-22,-21,-19,-23,-25,-24,]),'IN':([11,43,45,64,120,],[-98,-86,-88,109,-87,]),'FALSE':([18,19,28,32,34,35,36,37,39,44,51,55,68,71,80,82,83,85,88,89,91,92,93,94,95,97,99,101,102,107,136,142,151,160,],[57,57,57,-42,-39,-40,-38,57,-41,57,57,57,57,57,57,57,57,57,57,57,-51,-50,-55,-53,-54,-52,57,57,57,57,57,57,57,57,]),'RIGHT_PARENTHESIS':([11,26,43,45,46,47,48,50,52,53,54,56,57,58,59,60,61,62,68,73,79,81,84,86,87,90,96,98,100,103,110,111,112,113,116,119,120,122,123,124,125,126,127,128,129,130,131,135,137,138,147,149,153,162,],[-98,-98,-86,-88,76,-74,-69,-96,-72,-71,-98,-98,-97,-73,-98,-70,-98,-67,113,118,-68,-60,-65,126,-56,-59,-47,-49,-43,-46,-98,138,-12,-14,141,-98,-87,-62,-61,-63,-64,-66,-57,-58,-48,-44,-45,-15,-17,-13,-26,-28,-16,-27,]),'TIMES':([11,26,43,45,47,48,50,52,53,54,57,58,60,62,79,112,113,120,126,138,],[-98,-98,-86,-88,-74,-69,-96,-72,-71,82,-97,-73,-70,-67,-68,-12,-14,-87,-66,-13,]),'ID':([0,3,4,5,6,8,11,16,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,43,44,45,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,68,71,72,73,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,112,113,114,118,120,122,123,124,125,126,127,128,129,130,131,132,136,138,140,141,142,148,150,151,152,160,164,165,168,],[11,26,-98,-29,-30,40,-98,-36,26,26,11,-89,26,-33,-34,-31,-98,-32,26,-90,-35,-42,-83,-39,-40,-38,26,-85,-41,-86,26,-88,-74,-69,-96,11,-72,-71,-98,26,-98,-97,-73,-98,-70,-98,-67,-98,26,26,-37,11,-82,26,-94,-68,26,-60,26,26,-65,26,-56,26,26,-59,-51,-50,-55,-53,-54,-47,-52,-49,26,-43,26,26,-46,-79,-81,26,-91,11,-12,-14,26,26,-87,-62,-61,-63,-64,-66,-57,-58,-48,-44,-45,-80,26,-13,-84,26,26,11,-95,26,-92,26,-75,26,-93,]),'TRUE':([18,19,28,32,34,35,36,37,39,44,51,55,68,71,80,82,83,85,88,89,91,92,93,94,95,97,99,101,102,107,136,142,151,160,],[50,50,50,-42,-39,-40,-38,50,-41,50,50,50,50,50,50,50,50,50,50,50,-51,-50,-55,-53,-54,-52,50,50,50,50,50,50,50,50,]),'PLUS_EQUALS':([4,11,26,43,45,120,],[39,-98,-98,-86,-88,-87,]),'AND':([11,26,43,45,47,48,50,52,53,54,56,57,58,59,60,61,62,79,81,84,87,90,96,98,112,113,120,122,123,124,125,126,127,128,129,138,],[-98,-98,-86,-88,-74,-69,-96,-72,-71,-98,-98,-97,-73,-98,-70,101,-67,-68,-60,-65,-56,-59,-47,-49,-12,-14,-87,-62,-61,-63,-64,-66,-57,-58,-48,-13,]),'FROM':([11,43,45,64,120,],[-98,-86,-88,107,-87,]),'GREATER':([11,26,43,45,47,48,50,52,53,54,56,57,58,59,60,62,79,81,84,87,90,112,113,120,122,123,124,125,126,127,128,138,],[-98,-98,-86,-88,-74,-69,-96,-72,-71,-98,-98,-97,-73,91,-70,-67,-68,-60,-65,-56,-59,-12,-14,-87,-62,-61,-63,-64,-66,-57,-58,-13,]),'DIVIDE_EQUALS':([4,11,26,43,45,120,],[35,-98,-98,-86,-88,-87,]),'STRING_CONSTANT':([18,19,28,32,34,35,36,37,39,44,51,55,68,71,80,82,83,85,88,89,91,92,93,94,95,97,99,101,102,105,107,136,142,151,160,],[58,58,58,-42,-39,-40,-38,58,-41,58,58,58,58,58,58,58,58,58,58,58,-51,-50,-55,-53,-54,-52,58,58,58,132,58,58,58,58,58,]),'END_MAIN':([4,5,6,11,16,21,22,23,24,25,26,27,29,30,31,33,38,43,45,47,48,50,52,53,54,56,57,58,59,60,61,62,63,65,66,67,72,76,78,79,81,84,87,90,96,98,100,103,104,106,108,112,113,120,122,123,124,125,126,127,128,129,130,131,132,138,140,150,152,164,168,],[-98,-29,-30,-98,-36,-89,-98,-33,-34,-31,-98,-32,-90,70,-35,-83,-85,-86,-88,-74,-69,-96,-72,-71,-98,-98,-97,-73,-98,-70,-98,-67,-98,-9,-11,-10,-37,-82,-94,-68,-60,-65,-56,-59,-47,-49,-43,-46,-79,-81,-91,-12,-14,-87,-62,-61,-63,-64,-66,-57,-58,-48,-44,-45,-80,-13,-84,-95,-92,-75,-93,]),'LEFT_BRACKET':([11,26,36,],[44,44,71,]),'MAIN':([0,1,2,4,5,6,9,11,12,13,14,26,33,38,41,43,45,47,48,50,52,53,54,56,57,58,59,60,61,62,72,79,81,84,87,90,96,98,100,103,112,113,117,120,122,123,124,125,126,127,128,129,130,131,138,140,143,144,145,158,161,166,170,],[3,-98,3,-98,-29,-30,3,-98,-5,-6,-7,-98,-83,-85,3,-86,-88,-74,-69,-96,-72,-71,-98,-98,-97,-73,-98,-70,-98,-67,-37,-68,-60,-65,-56,-59,-47,-49,-43,-46,-12,-14,-18,-87,-62,-61,-63,-64,-66,-57,-58,-48,-44,-45,-13,-84,-20,-22,-21,-19,-23,-25,-24,]),'OR':([11,26,43,45,47,48,50,52,53,54,56,57,58,59,60,61,62,79,81,84,87,90,96,98,112,113,120,122,123,124,125,126,127,128,129,138,],[-98,-98,-86,-88,-74,-69,-96,-72,-71,-98,-98,-97,-73,-98,-70,102,-67,-68,-60,-65,-56,-59,-47,-49,-12,-14,-87,-62,-61,-63,-64,-66,-57,-58,-48,-13,]),'MOD':([11,26,43,45,47,48,50,52,53,54,57,58,60,62,79,112,113,120,126,138,],[-98,-98,-86,-88,-74,-69,-96,-72,-71,85,-97,-73,-70,-67,-68,-12,-14,-87,-66,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'post_functions':([1,],[12,]),'relational_operator':([59,],[99,]),'call_function':([3,18,19,22,28,37,44,55,68,71,77,80,82,83,85,88,89,99,101,102,107,114,118,136,141,142,151,160,165,],[16,48,48,16,48,48,48,48,48,48,16,48,48,48,48,48,48,48,48,48,48,16,16,48,16,48,48,48,16,]),'BOOL_CONSTANT':([18,19,28,37,44,51,55,68,71,80,82,83,85,88,89,99,101,102,107,136,142,151,160,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'post_function':([73,],[117,]),'post_parameters':([119,],[147,]),'cond':([18,19,28,37,55,68,71,101,102,136,142,160,],[49,63,69,72,86,110,110,130,131,110,159,167,]),'post_print':([63,],[104,]),'post_cycle':([49,134,163,],[78,152,168,]),'post_cond':([61,],[100,]),'functions':([0,1,9,],[2,13,41,]),'call_parameters':([68,71,136,],[111,115,153,]),'post_condition':([139,],[154,]),'for':([3,22,77,114,118,141,165,],[21,21,21,21,21,21,21,]),'post_call_parameters':([110,],[135,]),'post_exp':([56,],[87,]),'program':([0,],[7,]),'statement':([3,22,77,114,118,141,165,],[22,22,22,22,22,22,22,]),'factor':([18,19,28,37,44,55,68,71,80,82,83,85,88,89,99,101,102,107,136,142,151,160,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'print':([3,22,77,114,118,141,165,],[23,23,23,23,23,23,23,]),'main':([0,2,9,41,],[10,15,42,74,]),'empty':([1,4,11,22,26,54,56,59,61,63,110,119,139,],[14,38,45,66,45,84,90,98,103,106,137,149,156,]),'assignment_operator':([4,],[37,]),'function':([0,1,9,],[1,1,1,]),'post_for':([64,],[108,]),'read':([3,22,77,114,118,141,165,],[24,24,24,24,24,24,24,]),'assignment':([0,3,22,77,114,118,141,165,],[5,5,5,5,5,5,5,5,]),'post_term':([54,],[81,]),'else':([139,],[155,]),'value_return':([118,141,],[144,144,]),'post_identifier':([11,26,],[43,43,]),'void_return':([118,141,],[145,145,]),'variable':([0,3,22,77,114,118,141,165,],[9,25,25,25,25,25,25,25,]),'variable_constant':([18,19,28,37,44,51,55,68,71,80,82,83,85,88,89,99,101,102,107,136,142,151,160,],[62,62,62,62,62,79,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'post_block':([22,],[65,]),'condition':([3,22,77,114,118,141,165,],[27,27,27,27,27,27,27,]),'term':([18,19,28,37,44,55,68,71,80,82,83,85,88,89,99,101,102,107,136,142,151,160,],[56,56,56,56,56,56,56,56,122,123,124,125,56,56,56,56,56,56,56,56,56,56,]),'post_list':([4,],[33,]),'parameters':([73,148,],[116,162,]),'list':([0,3,22,77,114,118,141,165,],[6,6,6,6,6,6,6,6,]),'func_return':([118,141,],[143,158,]),'while':([3,22,77,114,118,141,165,],[29,29,29,29,29,29,29,]),'post_expression':([59,],[96,]),'loop':([3,22,77,114,118,141,165,],[31,31,31,31,31,31,31,]),'exp':([18,19,28,37,44,55,68,71,88,89,99,101,102,107,136,142,151,160,],[59,59,59,59,75,59,59,59,127,128,129,59,59,133,59,59,163,59,]),'identifier':([0,3,18,19,20,22,28,37,44,51,55,68,71,73,77,80,82,83,85,88,89,99,101,102,107,109,114,118,136,141,142,148,151,160,165,],[4,4,60,60,64,4,60,60,60,60,60,60,60,119,4,60,60,60,60,60,60,60,60,60,60,134,4,4,60,4,60,119,60,60,4,]),'expression':([18,19,28,37,55,68,71,101,102,136,142,160,],[61,61,61,61,61,61,61,61,61,61,61,61,]),'post_call_function':([68,],[112,]),'block':([3,22,77,114,118,141,165,],[30,67,121,139,146,146,169,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> variable functions main','program',3,'p_program','parser.py',18),
  ('program -> functions main','program',2,'p_program','parser.py',19),
  ('program -> variable main','program',2,'p_program','parser.py',20),
  ('program -> main','program',1,'p_program','parser.py',21),
  ('functions -> function post_functions','functions',2,'p_functions','parser.py',24),
  ('post_functions -> functions','post_functions',1,'p_post_functions','parser.py',28),
  ('post_functions -> empty','post_functions',1,'p_post_functions','parser.py',29),
  ('main -> MAIN block END_MAIN','main',3,'p_main','parser.py',33),
  ('block -> statement post_block','block',2,'p_block','parser.py',37),
  ('post_block -> block','post_block',1,'p_post_block','parser.py',40),
  ('post_block -> empty','post_block',1,'p_post_block','parser.py',41),
  ('call_function -> ID LEFT_PARENTHESIS post_call_function','call_function',3,'p_call_function','parser.py',45),
  ('post_call_function -> call_parameters RIGHT_PARENTHESIS','post_call_function',2,'p_post_call_function','parser.py',48),
  ('post_call_function -> RIGHT_PARENTHESIS','post_call_function',1,'p_post_call_function','parser.py',49),
  ('call_parameters -> cond post_call_parameters','call_parameters',2,'p_call_parameters','parser.py',53),
  ('post_call_parameters -> COMMA call_parameters','post_call_parameters',2,'p_post_call_parameters','parser.py',56),
  ('post_call_parameters -> empty','post_call_parameters',1,'p_post_call_parameters','parser.py',57),
  ('function -> FUNC ID LEFT_PARENTHESIS post_function','function',4,'p_function','parser.py',61),
  ('post_function -> parameters RIGHT_PARENTHESIS func_return','post_function',3,'p_post_function','parser.py',64),
  ('post_function -> RIGHT_PARENTHESIS func_return','post_function',2,'p_post_function','parser.py',65),
  ('func_return -> void_return','func_return',1,'p_func_return','parser.py',68),
  ('func_return -> value_return','func_return',1,'p_func_return','parser.py',69),
  ('void_return -> block END','void_return',2,'p_void_return','parser.py',72),
  ('value_return -> block RETURN cond END','value_return',4,'p_value_return','parser.py',75),
  ('value_return -> RETURN cond END','value_return',3,'p_value_return','parser.py',76),
  ('parameters -> identifier post_parameters','parameters',2,'p_parameters','parser.py',81),
  ('post_parameters -> COMMA parameters','post_parameters',2,'p_post_parameters','parser.py',84),
  ('post_parameters -> empty','post_parameters',1,'p_post_parameters','parser.py',85),
  ('variable -> assignment','variable',1,'p_variable','parser.py',89),
  ('variable -> list','variable',1,'p_variable','parser.py',90),
  ('statement -> variable','statement',1,'p_statement','parser.py',94),
  ('statement -> condition','statement',1,'p_statement','parser.py',95),
  ('statement -> print','statement',1,'p_statement','parser.py',96),
  ('statement -> read','statement',1,'p_statement','parser.py',97),
  ('statement -> loop','statement',1,'p_statement','parser.py',98),
  ('statement -> call_function','statement',1,'p_statement','parser.py',99),
  ('assignment -> identifier assignment_operator cond','assignment',3,'p_assignment','parser.py',105),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',109),
  ('assignment_operator -> TIMES_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',110),
  ('assignment_operator -> DIVIDE_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',111),
  ('assignment_operator -> PLUS_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',112),
  ('assignment_operator -> MINUS_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',113),
  ('cond -> expression post_cond','cond',2,'p_cond','parser.py',117),
  ('post_cond -> AND cond','post_cond',2,'p_post_cond','parser.py',120),
  ('post_cond -> OR cond','post_cond',2,'p_post_cond','parser.py',121),
  ('post_cond -> empty','post_cond',1,'p_post_cond','parser.py',122),
  ('expression -> exp post_expression','expression',2,'p_expression','parser.py',126),
  ('post_expression -> relational_operator exp','post_expression',2,'p_post_expression','parser.py',129),
  ('post_expression -> empty','post_expression',1,'p_post_expression','parser.py',130),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',134),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',135),
  ('relational_operator -> GREATER_EQUALS','relational_operator',1,'p_relational_operator','parser.py',136),
  ('relational_operator -> LESS_EQUALS','relational_operator',1,'p_relational_operator','parser.py',137),
  ('relational_operator -> EQUALS_EQUALS','relational_operator',1,'p_relational_operator','parser.py',138),
  ('relational_operator -> NOT_EQUALS','relational_operator',1,'p_relational_operator','parser.py',139),
  ('exp -> term post_exp','exp',2,'p_exp','parser.py',143),
  ('post_exp -> PLUS exp','post_exp',2,'p_post_exp','parser.py',146),
  ('post_exp -> MINUS exp','post_exp',2,'p_post_exp','parser.py',147),
  ('post_exp -> empty','post_exp',1,'p_post_exp','parser.py',148),
  ('term -> factor post_term','term',2,'p_term','parser.py',152),
  ('post_term -> TIMES term','post_term',2,'p_post_term','parser.py',155),
  ('post_term -> DIVIDE term','post_term',2,'p_post_term','parser.py',156),
  ('post_term -> PERCENTAGE term','post_term',2,'p_post_term','parser.py',157),
  ('post_term -> MOD term','post_term',2,'p_post_term','parser.py',158),
  ('post_term -> empty','post_term',1,'p_post_term','parser.py',159),
  ('factor -> LEFT_PARENTHESIS cond RIGHT_PARENTHESIS','factor',3,'p_factor','parser.py',163),
  ('factor -> variable_constant','factor',1,'p_factor','parser.py',164),
  ('factor -> MINUS variable_constant','factor',2,'p_factor','parser.py',165),
  ('factor -> call_function','factor',1,'p_factor','parser.py',166),
  ('variable_constant -> identifier','variable_constant',1,'p_variable_constant','parser.py',170),
  ('variable_constant -> INT_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',171),
  ('variable_constant -> DOUBLE_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',172),
  ('variable_constant -> STRING_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',173),
  ('variable_constant -> BOOL_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',174),
  ('condition -> IF cond COLON block post_condition END','condition',6,'p_condition','parser.py',178),
  ('post_condition -> else','post_condition',1,'p_post_condition','parser.py',182),
  ('post_condition -> empty','post_condition',1,'p_post_condition','parser.py',183),
  ('else -> ELSE COLON block','else',3,'p_else','parser.py',187),
  ('print -> PRINT cond post_print','print',3,'p_print','parser.py',191),
  ('post_print -> COMMA STRING_CONSTANT','post_print',2,'p_post_print','parser.py',194),
  ('post_print -> empty','post_print',1,'p_post_print','parser.py',195),
  ('read -> READ LEFT_PARENTHESIS RIGHT_PARENTHESIS','read',3,'p_read','parser.py',199),
  ('list -> identifier post_list','list',2,'p_list','parser.py',203),
  ('post_list -> EQUALS LEFT_BRACKET call_parameters RIGHT_BRACKET','post_list',4,'p_post_list','parser.py',206),
  ('post_list -> empty','post_list',1,'p_post_list','parser.py',207),
  ('identifier -> ID post_identifier','identifier',2,'p_identifier','parser.py',211),
  ('post_identifier -> LEFT_BRACKET exp RIGHT_BRACKET','post_identifier',3,'p_post_identifier','parser.py',214),
  ('post_identifier -> empty','post_identifier',1,'p_post_identifier','parser.py',215),
  ('loop -> for','loop',1,'p_loop','parser.py',219),
  ('loop -> while','loop',1,'p_loop','parser.py',220),
  ('for -> FOR identifier post_for','for',3,'p_for','parser.py',224),
  ('post_for -> IN identifier post_cycle','post_for',3,'p_post_for','parser.py',227),
  ('post_for -> FROM exp TO exp post_cycle','post_for',5,'p_post_for','parser.py',228),
  ('while -> WHILE cond post_cycle','while',3,'p_while','parser.py',232),
  ('post_cycle -> COLON block END','post_cycle',3,'p_post_cycle','parser.py',236),
  ('BOOL_CONSTANT -> TRUE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',239),
  ('BOOL_CONSTANT -> FALSE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',240),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',243),
]
