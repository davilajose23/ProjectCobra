
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'AFF163065143E567CE798F4DC4D10320'
    
_lr_action_items = {'RETURN':([10,26,27,28,37,39,42,43,44,46,56,75,94,95,96,97,98,99,102,106,109,133,134,176,177,],[-159,-7,-6,-8,-159,-81,-9,-11,-10,-16,-159,-68,-32,-30,-31,-65,-66,-63,-64,-67,-159,172,-159,214,172,]),'LESS':([77,78,80,82,83,84,86,87,88,89,90,92,118,119,120,121,123,124,139,141,143,146,151,152,187,207,209,223,224,225,226,227,228,229,230,241,242,257,258,275,],[-124,-117,-157,-125,-121,-107,-122,-101,-158,-123,-90,-115,-125,-116,-159,-159,-159,154,-120,-73,-106,-112,-100,-104,-119,-33,-119,-72,-109,-108,-110,-111,-114,-103,-102,-119,-37,-37,-36,-35,]),'READ':([10,26,27,28,37,38,39,42,43,44,45,46,56,75,97,98,99,102,106,109,129,133,134,169,177,210,211,244,286,292,296,],[-159,-7,-6,-8,-159,-159,-81,-9,-11,-10,52,-16,52,-68,-65,-66,-63,-64,-67,-159,-127,52,-159,-159,52,52,-159,52,-133,-159,52,]),'VOID':([9,],[23,]),'RIGHT_BRACKET':([67,77,78,80,82,83,84,86,87,88,89,92,107,118,119,120,121,123,139,141,143,146,151,152,182,187,207,209,223,224,225,226,227,228,229,230,241,242,251,257,258,275,],[-21,-124,-117,-157,-125,-121,-107,-122,-101,-158,-123,-115,132,-125,-116,-159,-159,-159,-120,-73,-106,-112,-100,-104,223,-119,-33,-119,-72,-109,-108,-110,-111,-114,-103,-102,-119,-37,272,-37,-36,-35,]),'EOL':([11,29,33,34,35,37,40,48,49,51,55,57,58,59,61,64,66,69,70,71,77,78,79,80,82,83,84,86,87,88,89,90,91,92,105,108,110,113,115,116,117,118,119,120,121,123,124,125,129,131,132,138,139,141,143,146,151,152,159,160,162,165,169,179,181,187,190,207,209,211,212,213,214,216,219,223,224,225,226,227,228,229,230,231,232,239,241,242,245,246,248,249,253,257,258,264,266,267,275,277,279,280,281,286,287,289,291,292,294,295,],[-128,-29,37,37,-125,37,-159,-159,-20,37,-146,37,37,37,37,-147,37,-18,-23,37,-124,-117,-159,-157,-125,-121,-107,-122,-101,-158,-123,-90,-84,-115,-28,-22,37,-134,-136,-135,-139,-125,-116,-159,-159,-159,-159,-159,-127,37,-19,-138,-120,-73,-106,-112,-100,-104,-89,-92,-83,-87,37,-142,-137,-119,-91,-33,-119,37,-132,-55,37,-56,-140,-72,-109,-108,-110,-111,-114,-103,-102,-85,-86,-80,-119,-37,-155,37,-55,37,-69,-37,-36,-153,-56,37,-35,-126,-156,-56,37,-133,37,-56,-152,37,37,-148,]),'EQUALS_EQUALS':([77,78,80,82,83,84,86,87,88,89,90,92,118,119,120,121,123,124,139,141,143,146,151,152,187,207,209,223,224,225,226,227,228,229,230,241,242,257,258,275,],[-124,-117,-157,-125,-121,-107,-122,-101,-158,-123,-90,-115,-125,-116,-159,-159,-159,158,-120,-73,-106,-112,-100,-104,-119,-33,-119,-72,-109,-108,-110,-111,-114,-103,-102,-119,-37,-37,-36,-35,]),'WHILE':([10,26,27,28,37,38,39,42,43,44,45,46,56,75,97,98,99,102,106,109,129,133,134,169,177,210,211,244,286,292,296,],[-159,-7,-6,-8,-159,-159,-81,-9,-11,-10,63,-16,63,-68,-65,-66,-63,-64,-67,-159,-127,63,-159,-159,63,63,-159,63,-133,-159,63,]),'PRINT':([10,26,27,28,37,38,39,42,43,44,45,46,56,75,97,98,99,102,106,109,129,133,134,169,177,210,211,244,286,292,296,],[-159,-7,-6,-8,-159,-159,-81,-9,-11,-10,53,-16,53,-68,-65,-66,-63,-64,-67,-159,-127,53,-159,-159,53,53,-159,53,-133,-159,53,]),'TRUE':([53,62,63,81,85,104,122,128,140,142,144,145,147,149,150,153,154,155,156,157,158,161,163,164,166,168,172,183,184,185,186,188,189,191,192,193,194,195,196,197,198,200,201,202,203,204,205,214,221,234,235,236,237,238,252,255,],[80,80,-154,80,-118,80,80,-118,80,-113,-113,-113,-113,-105,-105,80,-93,-93,-93,-93,-93,-93,-88,-88,80,80,80,80,80,80,80,80,80,-94,-96,-99,-97,-98,-95,80,80,-79,-79,-79,-79,-79,80,80,80,-78,-77,-75,-76,-74,80,80,]),'MINUS':([53,62,63,77,78,80,82,83,84,85,86,87,88,89,92,104,118,119,120,121,122,123,128,139,140,141,142,143,144,145,146,147,149,150,153,154,155,156,157,158,161,163,164,166,168,172,183,184,185,186,187,188,189,191,192,193,194,195,196,197,198,200,201,202,203,204,205,207,209,214,221,223,224,225,226,227,228,234,235,236,237,238,241,242,252,255,257,258,275,],[81,81,-154,-124,-117,-157,-125,-121,-107,-118,-122,-101,-158,-123,-115,81,-125,-116,-159,-159,81,149,-118,-120,81,-73,-113,-106,-113,-113,-112,-113,-105,-105,81,-93,-93,-93,-93,-93,-93,-88,-88,81,81,81,81,81,81,81,-119,81,81,-94,-96,-99,-97,-98,-95,81,81,-79,-79,-79,-79,-79,81,-33,-119,81,81,-72,-109,-108,-110,-111,-114,-78,-77,-75,-76,-74,-119,-37,81,81,-37,-36,-35,]),'DIVIDE':([77,78,80,82,83,84,86,88,89,92,118,119,120,121,139,141,187,207,209,223,228,241,242,257,258,275,],[-124,-117,-157,-125,-121,-107,-122,-158,-123,-115,-125,-116,-159,142,-120,-73,-119,-33,-119,-72,-114,-119,-37,-37,-36,-35,]),'MINUS_EQUALS':([60,100,127,141,167,223,],[-70,-71,-159,-73,200,-72,]),'END_MAIN':([37,42,43,44,56,65,75,94,95,96,97,98,99,102,106,],[-159,-9,-11,-10,-159,105,-68,-32,-30,-31,-65,-66,-63,-64,-67,]),'NOT_EQUALS':([77,78,80,82,83,84,86,87,88,89,90,92,118,119,120,121,123,124,139,141,143,146,151,152,187,207,209,223,224,225,226,227,228,229,230,241,242,257,258,275,],[-124,-117,-157,-125,-121,-107,-122,-101,-158,-123,-90,-115,-125,-116,-159,-159,-159,156,-120,-73,-106,-112,-100,-104,-119,-33,-119,-72,-109,-108,-110,-111,-114,-103,-102,-119,-37,-37,-36,-35,]),'DOUBLE_CONSTANT':([53,62,63,81,85,104,122,128,140,142,144,145,147,149,150,153,154,155,156,157,158,161,163,164,166,168,172,183,184,185,186,188,189,191,192,193,194,195,196,197,198,200,201,202,203,204,205,214,221,234,235,236,237,238,252,255,],[86,86,-154,86,-118,86,86,-118,86,-113,-113,-113,-113,-105,-105,86,-93,-93,-93,-93,-93,-93,-88,-88,86,86,86,86,86,86,86,86,86,-94,-96,-99,-97,-98,-95,86,86,-79,-79,-79,-79,-79,86,86,86,-78,-77,-75,-76,-74,86,86,]),'GREATER_EQUALS':([77,78,80,82,83,84,86,87,88,89,90,92,118,119,120,121,123,124,139,141,143,146,151,152,187,207,209,223,224,225,226,227,228,229,230,241,242,257,258,275,],[-124,-117,-157,-125,-121,-107,-122,-101,-158,-123,-90,-115,-125,-116,-159,-159,-159,155,-120,-73,-106,-112,-100,-104,-119,-33,-119,-72,-109,-108,-110,-111,-114,-103,-102,-119,-37,-37,-36,-35,]),'LESS_EQUALS':([77,78,80,82,83,84,86,87,88,89,90,92,118,119,120,121,123,124,139,141,143,146,151,152,187,207,209,223,224,225,226,227,228,229,230,241,242,257,258,275,],[-124,-117,-157,-125,-121,-107,-122,-101,-158,-123,-90,-115,-125,-116,-159,-159,-159,157,-120,-73,-106,-112,-100,-104,-119,-33,-119,-72,-109,-108,-110,-111,-114,-103,-102,-119,-37,-37,-36,-35,]),'PLUS':([77,78,80,82,83,84,86,87,88,89,92,118,119,120,121,123,139,141,143,146,187,207,209,223,224,225,226,227,228,241,242,257,258,275,],[-124,-117,-157,-125,-121,-107,-122,-101,-158,-123,-115,-125,-116,-159,-159,150,-120,-73,-106,-112,-119,-33,-119,-72,-109,-108,-110,-111,-114,-119,-37,-37,-36,-35,]),'TO':([77,78,80,82,83,84,86,87,88,89,92,118,119,120,121,123,139,141,143,146,151,152,187,199,207,209,223,224,225,226,227,228,229,230,233,241,242,257,258,275,],[-124,-117,-157,-125,-121,-107,-122,-101,-158,-123,-115,-125,-116,-159,-159,-159,-120,-73,-106,-112,-100,-104,-119,-150,-33,-119,-72,-109,-108,-110,-111,-114,-103,-102,252,-119,-37,-37,-36,-35,]),'INT_CONSTANT':([47,53,62,63,81,85,104,122,128,140,142,144,145,147,149,150,153,154,155,156,157,158,161,163,164,166,168,172,183,184,185,186,188,189,191,192,193,194,195,196,197,198,200,201,202,203,204,205,214,221,234,235,236,237,238,252,255,],[67,83,83,-154,83,-118,83,83,-118,83,-113,-113,-113,-113,-105,-105,83,-93,-93,-93,-93,-93,-93,-88,-88,83,83,83,83,83,83,83,83,83,-94,-96,-99,-97,-98,-95,83,83,-79,-79,-79,-79,-79,83,83,83,-78,-77,-75,-76,-74,83,83,]),'COMMA':([35,40,48,49,77,78,79,80,82,83,84,86,87,88,89,90,91,92,118,119,120,121,123,124,125,132,137,139,141,143,146,151,152,159,160,162,165,180,187,190,206,207,209,218,220,222,223,224,225,226,227,228,229,230,231,232,240,241,242,250,257,258,272,275,],[-125,-159,68,-20,-124,-117,114,-157,-125,-121,-107,-122,-101,-158,-123,-90,-84,-115,-125,-116,-159,-159,-159,-159,-159,-19,-125,-120,-73,-106,-112,-100,-104,-89,-92,-83,-87,-159,-119,-91,-39,-33,-119,-60,-143,-145,-72,-109,-108,-110,-111,-114,-103,-102,-85,-86,255,-119,-37,270,-37,-36,-144,-35,]),'COLON':([77,78,80,82,83,84,86,87,88,89,90,91,92,103,118,119,120,121,123,124,125,130,139,141,143,146,151,152,159,160,162,165,170,187,190,207,209,223,224,225,226,227,228,229,230,231,232,241,242,257,258,262,273,275,278,285,],[-124,-117,-157,-125,-121,-107,-122,-101,-158,-123,-90,-84,-115,129,-125,-116,-159,-159,-159,-159,-159,-127,-120,-73,-106,-112,-100,-104,-89,-92,-83,-87,211,-119,-91,-33,-119,-72,-109,-108,-110,-111,-114,-103,-102,-85,-86,-119,-37,-37,-36,-132,-151,-35,286,211,]),'PERCENTAGE':([77,78,80,82,83,84,86,88,89,92,118,119,120,121,139,141,187,207,209,223,228,241,242,257,258,275,],[-124,-117,-157,-125,-121,-107,-122,-158,-123,-115,-125,-116,-159,145,-120,-73,-119,-33,-119,-72,-114,-119,-37,-37,-36,-35,]),'PLUS_EQUALS':([60,100,127,141,167,223,],[-70,-71,-159,-73,201,-72,]),'LEFT_PARENTHESIS':([36,41,52,53,60,62,63,76,82,85,101,104,122,128,140,142,144,145,147,149,150,153,154,155,156,157,158,161,163,164,166,168,172,183,184,185,186,188,189,191,192,193,194,195,196,197,198,200,201,202,203,204,205,214,221,234,235,236,237,238,252,255,],[-45,50,-141,85,-34,85,-154,112,-34,-118,128,85,85,-118,85,-113,-113,-113,-113,-105,-105,85,-93,-93,-93,-93,-93,-93,-88,-88,85,85,85,85,85,85,85,85,85,-94,-96,-99,-97,-98,-95,85,85,-79,-79,-79,-79,-79,85,85,85,-78,-77,-75,-76,-74,85,85,]),'$end':([1,4,5,12,22,31,37,42,43,44,105,131,171,],[0,-1,-5,-3,-4,-2,-159,-9,-11,-10,-28,-159,-27,]),'END':([37,42,43,44,56,75,94,95,96,97,98,99,102,106,176,243,247,259,260,261,263,265,276,282,298,299,],[-159,-9,-11,-10,-159,-68,-32,-30,-31,-65,-66,-63,-64,-67,216,-128,266,-159,277,-129,279,280,-130,289,-128,-131,]),'STRING':([0,2,6,9,10,37,38,39,42,43,44,46,50,73,109,111,134,270,],[-133,-82,13,13,-82,-159,-82,-81,-9,-11,-10,-16,-82,-58,-82,13,-82,-82,]),'FOR':([10,26,27,28,37,38,39,42,43,44,45,46,56,75,97,98,99,102,106,109,129,133,134,169,177,210,211,244,286,292,296,],[-159,-7,-6,-8,-159,-159,-81,-9,-11,-10,54,-16,54,-68,-65,-66,-63,-64,-67,-159,-127,54,-159,-159,54,54,-159,54,-133,-159,54,]),'EQUALS':([60,100,127,141,167,223,],[-70,-71,-159,-73,204,-72,]),'ELSE':([37,42,43,44,56,75,94,95,96,97,98,99,102,106,243,],[-159,-9,-11,-10,-159,-68,-32,-30,-31,-65,-66,-63,-64,-67,262,]),'FUNC':([0,2,7,8,10,26,27,28,37,39,42,43,44,46,74,173,174,175,215,217,268,288,293,297,],[-133,9,9,9,-159,-7,-6,-8,-159,-81,-9,-11,-10,-16,-42,-47,-49,-48,-50,-46,-51,-52,-54,-53,]),'FROM':([93,126,],[-149,166,]),'RIGHT_PARENTHESIS':([50,72,77,78,80,82,83,84,86,87,88,89,90,91,92,118,119,120,121,123,124,125,128,136,137,139,141,143,146,148,151,152,159,160,162,165,168,180,187,190,206,207,208,209,218,220,222,223,224,225,226,227,228,229,230,231,232,240,241,242,250,254,256,257,258,269,271,272,274,275,283,284,290,],[71,110,-124,-117,-157,-125,-121,-107,-122,-101,-158,-123,-90,-84,-115,-125,-116,-159,-159,-159,-159,-159,-118,179,-125,-120,-73,-106,-112,187,-100,-104,-89,-92,-83,-87,209,-159,-119,-91,-39,-33,241,-119,-60,-143,-145,-72,-109,-108,-110,-111,-114,-103,-102,-85,-86,-159,-119,-37,-159,-38,-41,-37,-36,-59,-62,-144,-40,-35,-81,-61,-57,]),'TIMES':([77,78,80,82,83,84,86,88,89,92,118,119,120,121,139,141,187,207,209,223,228,241,242,257,258,275,],[-124,-117,-157,-125,-121,-107,-122,-158,-123,-115,-125,-116,-159,144,-120,-73,-119,-33,-119,-72,-114,-119,-37,-37,-36,-35,]),'ID':([10,13,14,15,16,17,23,24,25,26,27,28,30,32,37,38,39,42,43,44,45,46,53,54,56,62,63,68,75,81,85,97,98,99,102,104,106,109,112,122,128,129,133,134,135,140,142,144,145,147,149,150,153,154,155,156,157,158,161,163,164,166,168,169,172,177,178,183,184,185,186,188,189,191,192,193,194,195,196,197,198,200,201,202,203,204,205,210,211,214,221,234,235,236,237,238,244,252,255,286,292,296,],[-159,-14,-12,-13,-15,-17,-44,-43,-17,-7,-6,-8,35,36,-159,-159,-81,-9,-11,-10,60,-16,82,93,60,82,-154,35,-68,118,-118,-65,-66,-63,-64,82,-67,-159,137,82,-118,-127,60,-159,-17,82,-113,-113,-113,-113,-105,-105,82,-93,-93,-93,-93,-93,-93,-88,-88,82,82,-159,82,60,137,82,82,82,82,82,82,-94,-96,-99,-97,-98,-95,82,82,-79,-79,-79,-79,-79,82,60,-159,82,82,-78,-77,-75,-76,-74,60,82,82,-133,-159,60,]),'IF':([10,26,27,28,37,38,39,42,43,44,45,46,56,75,97,98,99,102,106,109,129,133,134,169,177,210,211,244,286,292,296,],[-159,-7,-6,-8,-159,-159,-81,-9,-11,-10,62,-16,62,-68,-65,-66,-63,-64,-67,-159,-127,62,-159,-159,62,62,-159,62,-133,-159,62,]),'AND':([77,78,80,82,83,84,86,87,88,89,90,91,92,118,119,120,121,123,124,125,139,141,143,146,151,152,159,160,187,190,207,209,223,224,225,226,227,228,229,230,241,242,257,258,275,],[-124,-117,-157,-125,-121,-107,-122,-101,-158,-123,-90,-84,-115,-125,-116,-159,-159,-159,-159,163,-120,-73,-106,-112,-100,-104,-89,-92,-119,-91,-33,-119,-72,-109,-108,-110,-111,-114,-103,-102,-119,-37,-37,-36,-35,]),'FALSE':([53,62,63,81,85,104,122,128,140,142,144,145,147,149,150,153,154,155,156,157,158,161,163,164,166,168,172,183,184,185,186,188,189,191,192,193,194,195,196,197,198,200,201,202,203,204,205,214,221,234,235,236,237,238,252,255,],[88,88,-154,88,-118,88,88,-118,88,-113,-113,-113,-113,-105,-105,88,-93,-93,-93,-93,-93,-93,-88,-88,88,88,88,88,88,88,88,88,88,-94,-96,-99,-97,-98,-95,88,88,-79,-79,-79,-79,-79,88,88,88,-78,-77,-75,-76,-74,88,88,]),'GREATER':([77,78,80,82,83,84,86,87,88,89,90,92,118,119,120,121,123,124,139,141,143,146,151,152,187,207,209,223,224,225,226,227,228,229,230,241,242,257,258,275,],[-124,-117,-157,-125,-121,-107,-122,-101,-158,-123,-90,-115,-125,-116,-159,-159,-159,161,-120,-73,-106,-112,-100,-104,-119,-33,-119,-72,-109,-108,-110,-111,-114,-103,-102,-119,-37,-37,-36,-35,]),'INT':([0,2,6,9,10,37,38,39,42,43,44,46,50,73,109,111,134,270,],[-133,-82,14,14,-82,-159,-82,-81,-9,-11,-10,-16,-82,-58,-82,14,-82,-82,]),'DOUBLE':([0,2,6,9,10,37,38,39,42,43,44,46,50,73,109,111,134,270,],[-133,-82,15,15,-82,-159,-82,-81,-9,-11,-10,-16,-82,-58,-82,15,-82,-82,]),'DIVIDE_EQUALS':([60,100,127,141,167,223,],[-70,-71,-159,-73,203,-72,]),'BOOL':([0,2,6,9,10,37,38,39,42,43,44,46,50,73,109,111,134,270,],[-133,-82,16,16,-82,-159,-82,-81,-9,-11,-10,-16,-82,-58,-82,16,-82,-82,]),'STRING_CONSTANT':([53,62,63,81,85,104,114,122,128,140,142,144,145,147,149,150,153,154,155,156,157,158,161,163,164,166,168,172,183,184,185,186,188,189,191,192,193,194,195,196,197,198,200,201,202,203,204,205,214,221,234,235,236,237,238,252,255,],[89,89,-154,89,-118,89,138,89,-118,89,-113,-113,-113,-113,-105,-105,89,-93,-93,-93,-93,-93,-93,-88,-88,89,89,89,89,89,89,89,89,89,-94,-96,-99,-97,-98,-95,89,89,-79,-79,-79,-79,-79,89,89,89,-78,-77,-75,-76,-74,89,89,]),'TIMES_EQUALS':([60,100,127,141,167,223,],[-70,-71,-159,-73,202,-72,]),'LEFT_BRACKET':([35,40,60,82,100,118,120,127,137,180,],[-125,47,-70,-125,-71,-125,140,140,-125,221,]),'MAIN':([0,2,3,7,8,10,18,19,20,21,26,27,28,37,39,42,43,44,46,74,173,174,175,215,217,268,288,293,297,],[-133,11,11,-159,11,-159,-24,-25,-26,11,-7,-6,-8,-159,-81,-9,-11,-10,-16,-42,-47,-49,-48,-50,-46,-51,-52,-54,-53,]),'OR':([77,78,80,82,83,84,86,87,88,89,90,91,92,118,119,120,121,123,124,125,139,141,143,146,151,152,159,160,187,190,207,209,223,224,225,226,227,228,229,230,241,242,257,258,275,],[-124,-117,-157,-125,-121,-107,-122,-101,-158,-123,-90,-84,-115,-125,-116,-159,-159,-159,-159,164,-120,-73,-106,-112,-100,-104,-89,-92,-119,-91,-33,-119,-72,-109,-108,-110,-111,-114,-103,-102,-119,-37,-37,-36,-35,]),'MOD':([77,78,80,82,83,84,86,88,89,92,118,119,120,121,139,141,187,207,209,223,228,241,242,257,258,275,],[-124,-117,-157,-125,-121,-107,-122,-158,-123,-115,-125,-116,-159,147,-120,-73,-119,-33,-119,-72,-114,-119,-37,-37,-36,-35,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'relational_operator':([124,],[153,]),'post_function':([50,],[74,]),'push_assignment':([200,201,202,203,204,],[234,235,236,237,238,]),'parameters':([50,270,],[72,284,]),'increase_call_arguments':([206,],[240,]),'post_variables':([10,38,109,134,],[27,45,133,177,]),'finish_params':([269,],[283,]),'init':([0,],[1,]),'program':([2,],[4,]),'factor':([53,62,104,122,140,153,166,168,172,183,184,185,186,188,189,197,198,205,214,221,252,255,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'main':([2,3,8,21,],[5,12,22,31,]),'finish_evaluating':([2,10,38,50,109,134,270,],[6,6,6,73,6,6,73,]),'read':([45,56,133,177,210,244,296,],[58,58,58,58,58,58,58,]),'post_term':([121,],[143,]),'print_mod':([79,],[116,]),'condition':([45,56,133,177,210,244,296,],[61,61,61,61,61,61,61,]),'term':([53,62,104,122,140,153,166,168,172,183,184,185,186,188,189,197,198,205,214,221,252,255,],[87,87,87,87,87,87,87,87,87,224,225,226,227,87,87,87,87,87,87,87,87,87,]),'push_end':([105,],[131,]),'post_void_return':([176,],[215,]),'push_term':([142,144,145,147,],[183,184,185,186,]),'register_function':([36,],[41,]),'identifier':([112,178,],[136,218,]),'push_paren':([85,128,],[122,168,]),'BOOL_CONSTANT':([53,62,81,104,122,140,153,166,168,172,183,184,185,186,188,189,197,198,205,214,221,252,255,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'call_function':([45,53,56,62,104,122,133,140,153,166,168,172,177,183,184,185,186,188,189,197,198,205,210,214,221,244,252,255,296,],[51,78,51,78,78,78,51,78,78,78,78,78,51,78,78,78,78,78,78,78,78,78,51,78,78,51,78,78,51,]),'reset_scope':([216,266,280,289,],[249,281,287,294,]),'push_relop':([154,155,156,157,158,161,],[191,192,193,194,195,196,]),'post_parameters':([250,],[269,]),'start_evaluating':([39,283,],[46,290,]),'post_print':([79,],[113,]),'fill_goto':([11,243,298,],[29,259,299,]),'for':([45,56,133,177,210,244,296,],[55,55,55,55,55,55,55,]),'post_exp':([123,],[151,]),'assignment':([45,56,133,177,210,244,296,],[59,59,59,59,59,59,59,]),'print':([45,56,133,177,210,244,296,],[57,57,57,57,57,57,57,]),'push_exp':([149,150,],[188,189,]),'set_type':([17,25,135,],[30,32,178,]),'inter_declaration':([30,68,],[34,108,]),'void_return':([133,177,],[175,175,]),'pop_paren':([187,209,241,],[228,242,257,]),'push_gotoF':([129,130,],[169,170,]),'end_for_loop':([291,],[295,]),'fill_goto_plus':([212,262,],[245,278,]),'assignment_operator':([167,],[205,]),'expression':([53,62,104,122,153,168,172,197,198,205,214,255,],[91,91,91,91,190,91,91,91,91,91,91,91,]),'pop_exp':([87,],[123,]),'block':([45,56,133,177,210,244,296,],[65,96,176,176,243,263,298,]),'optional_eol':([37,131,169,211,292,],[42,171,210,244,296,]),'post_functions':([7,],[18,]),'pop_term':([84,],[121,]),'required_eol':([33,34,37,51,57,58,59,61,66,71,110,131,169,211,214,246,249,267,281,287,292,294,],[38,39,43,75,97,98,99,102,106,109,134,43,43,43,247,265,268,282,288,293,43,297,]),'push_goto':([0,286,],[2,292,]),'post_arguments':([240,],[254,]),'validate_function_call':([60,82,],[101,101,]),'post_cycle':([170,285,],[212,291,]),'post_cond':([125,],[162,]),'func_return':([133,177,],[173,217,]),'post_call_function':([168,],[207,]),'validate_var':([60,],[100,]),'push_cycle':([63,],[104,]),'process_variable':([35,82,118,137,],[40,120,120,180,]),'empty':([7,10,37,38,40,48,56,79,109,120,121,123,124,125,127,131,134,169,180,211,240,250,259,292,],[20,28,44,28,49,70,94,117,28,141,146,152,160,165,141,44,28,44,222,44,256,271,276,44,]),'function':([2,7,8,],[7,7,7,]),'statement':([45,56,133,177,210,244,296,],[56,56,56,56,56,56,56,]),'pre_variables':([2,10,38,109,134,],[8,26,26,26,26,]),'else':([243,],[261,]),'value_return':([133,177,],[174,174,]),'create_return':([213,248,],[246,267,]),'cycle_declaration':([48,],[69,]),'declaration':([2,10,38,109,134,],[10,10,10,10,10,]),'validate_call_arguments':([242,257,],[258,275,]),'init_var':([199,],[233,]),'array_notation':([120,127,],[139,167,]),'push_op_and_or':([163,164,],[197,198,]),'while':([45,56,133,177,210,244,296,],[64,64,64,64,64,64,64,]),'post_expression':([124,],[159,]),'start_read':([52,],[76,]),'array_declaration':([40,],[48,]),'loop':([45,56,133,177,210,244,296,],[66,66,66,66,66,66,66,]),'update_var_size':([67,],[107,]),'set_main_scope':([29,],[33,]),'cond':([53,62,104,122,168,172,197,198,205,214,255,],[79,103,130,148,206,213,231,232,239,248,206,]),'functions':([2,7,8,],[3,19,21,]),'pop_op_and_or':([91,],[125,]),'push_for_cycle':([273,],[285,]),'arguments':([168,255,],[208,274,]),'pop_relop':([90,],[124,]),'exp':([53,62,104,122,140,153,166,168,172,188,189,197,198,205,214,221,252,255,],[90,90,90,90,182,90,199,90,90,229,230,90,90,90,90,251,273,90,]),'post_condition':([243,],[260,]),'print_post_mod':([138,],[181,]),'post_identifier':([180,],[220,]),'pop_assignment':([239,],[253,]),'post_block':([56,],[95,]),'func_types':([9,],[25,]),'types':([6,9,111,],[17,24,135,]),'create_pending_goto':([245,],[264,]),'update_function_parameters':([218,],[250,]),'read_var':([179,],[219,]),'add_var':([93,],[126,]),'push_var':([100,],[127,]),'start_params':([73,],[111,]),'print_default':([79,],[115,]),'variable_constant':([53,62,81,104,122,140,153,166,168,172,183,184,185,186,188,189,197,198,205,214,221,252,255,],[92,92,119,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> push_goto program','init',2,'p_init','parser.py',30),
  ('program -> pre_variables functions main','program',3,'p_program','parser.py',33),
  ('program -> functions main','program',2,'p_program','parser.py',34),
  ('program -> pre_variables main','program',2,'p_program','parser.py',35),
  ('program -> main','program',1,'p_program','parser.py',36),
  ('pre_variables -> declaration post_variables','pre_variables',2,'p_pre_variables','parser.py',45),
  ('post_variables -> pre_variables','post_variables',1,'p_post_variables','parser.py',48),
  ('post_variables -> empty','post_variables',1,'p_post_variables','parser.py',49),
  ('required_eol -> EOL optional_eol','required_eol',2,'p_required_eol','parser.py',53),
  ('optional_eol -> empty','optional_eol',1,'p_optional_eol','parser.py',56),
  ('optional_eol -> required_eol','optional_eol',1,'p_optional_eol','parser.py',57),
  ('types -> INT','types',1,'p_types','parser.py',61),
  ('types -> DOUBLE','types',1,'p_types','parser.py',62),
  ('types -> STRING','types',1,'p_types','parser.py',63),
  ('types -> BOOL','types',1,'p_types','parser.py',64),
  ('declaration -> finish_evaluating types set_type inter_declaration required_eol start_evaluating','declaration',6,'p_declaration','parser.py',69),
  ('set_type -> <empty>','set_type',0,'p_set_type','parser.py',72),
  ('inter_declaration -> ID process_variable array_declaration cycle_declaration','inter_declaration',4,'p_inter_declaration','parser.py',75),
  ('array_declaration -> LEFT_BRACKET INT_CONSTANT update_var_size RIGHT_BRACKET','array_declaration',4,'p_array_declaration','parser.py',78),
  ('array_declaration -> empty','array_declaration',1,'p_array_declaration','parser.py',79),
  ('update_var_size -> <empty>','update_var_size',0,'p_update_var_size','parser.py',82),
  ('cycle_declaration -> COMMA inter_declaration','cycle_declaration',2,'p_cycle_declaration','parser.py',86),
  ('cycle_declaration -> empty','cycle_declaration',1,'p_cycle_declaration','parser.py',87),
  ('functions -> function post_functions','functions',2,'p_functions','parser.py',91),
  ('post_functions -> functions','post_functions',1,'p_post_functions','parser.py',94),
  ('post_functions -> empty','post_functions',1,'p_post_functions','parser.py',95),
  ('main -> MAIN fill_goto set_main_scope required_eol post_variables block END_MAIN push_end optional_eol','main',9,'p_main','parser.py',99),
  ('push_end -> <empty>','push_end',0,'p_push_end','parser.py',102),
  ('set_main_scope -> <empty>','set_main_scope',0,'p_set_main_scope','parser.py',106),
  ('block -> statement post_block','block',2,'p_block','parser.py',114),
  ('post_block -> block','post_block',1,'p_post_block','parser.py',117),
  ('post_block -> empty','post_block',1,'p_post_block','parser.py',118),
  ('call_function -> ID validate_function_call LEFT_PARENTHESIS push_paren post_call_function','call_function',5,'p_call_function','parser.py',122),
  ('validate_function_call -> <empty>','validate_function_call',0,'p_validate_function_call','parser.py',126),
  ('post_call_function -> arguments RIGHT_PARENTHESIS pop_paren validate_call_arguments','post_call_function',4,'p_post_call_function','parser.py',133),
  ('post_call_function -> RIGHT_PARENTHESIS pop_paren validate_call_arguments','post_call_function',3,'p_post_call_function','parser.py',134),
  ('validate_call_arguments -> <empty>','validate_call_arguments',0,'p_validate_call_arguments','parser.py',137),
  ('arguments -> cond increase_call_arguments post_arguments','arguments',3,'p_arguments','parser.py',148),
  ('increase_call_arguments -> <empty>','increase_call_arguments',0,'p_increase_call_arguments','parser.py',152),
  ('post_arguments -> COMMA arguments','post_arguments',2,'p_post_arguments','parser.py',160),
  ('post_arguments -> empty','post_arguments',1,'p_post_arguments','parser.py',161),
  ('function -> FUNC func_types set_type ID register_function LEFT_PARENTHESIS post_function','function',7,'p_function','parser.py',165),
  ('func_types -> types','func_types',1,'p_func_types','parser.py',168),
  ('func_types -> VOID','func_types',1,'p_func_types','parser.py',169),
  ('register_function -> <empty>','register_function',0,'p_register_function','parser.py',175),
  ('post_function -> parameters RIGHT_PARENTHESIS required_eol post_variables func_return','post_function',5,'p_post_function','parser.py',186),
  ('post_function -> RIGHT_PARENTHESIS required_eol post_variables func_return','post_function',4,'p_post_function','parser.py',187),
  ('func_return -> void_return','func_return',1,'p_func_return','parser.py',190),
  ('func_return -> value_return','func_return',1,'p_func_return','parser.py',191),
  ('void_return -> block post_void_return','void_return',2,'p_void_return','parser.py',194),
  ('post_void_return -> END reset_scope required_eol','post_void_return',3,'p_post_void_return','parser.py',197),
  ('post_void_return -> RETURN required_eol END reset_scope required_eol','post_void_return',5,'p_post_void_return','parser.py',198),
  ('value_return -> block RETURN cond create_return required_eol END reset_scope required_eol','value_return',8,'p_value_return','parser.py',201),
  ('value_return -> RETURN cond create_return required_eol END reset_scope required_eol','value_return',7,'p_value_return','parser.py',202),
  ('create_return -> <empty>','create_return',0,'p_create_return','parser.py',205),
  ('reset_scope -> <empty>','reset_scope',0,'p_reset_scope','parser.py',210),
  ('parameters -> finish_evaluating start_params types set_type identifier update_function_parameters post_parameters finish_params start_evaluating','parameters',9,'p_parameters','parser.py',217),
  ('start_params -> <empty>','start_params',0,'p_start_params','parser.py',220),
  ('finish_params -> <empty>','finish_params',0,'p_finish_params','parser.py',224),
  ('update_function_parameters -> <empty>','update_function_parameters',0,'p_update_function_parameters','parser.py',229),
  ('post_parameters -> COMMA parameters','post_parameters',2,'p_post_parameters','parser.py',233),
  ('post_parameters -> empty','post_parameters',1,'p_post_parameters','parser.py',234),
  ('statement -> assignment required_eol','statement',2,'p_statement','parser.py',238),
  ('statement -> condition required_eol','statement',2,'p_statement','parser.py',239),
  ('statement -> print required_eol','statement',2,'p_statement','parser.py',240),
  ('statement -> read required_eol','statement',2,'p_statement','parser.py',241),
  ('statement -> loop required_eol','statement',2,'p_statement','parser.py',242),
  ('statement -> call_function required_eol','statement',2,'p_statement','parser.py',243),
  ('assignment -> ID validate_var push_var array_notation assignment_operator cond pop_assignment','assignment',7,'p_assignment','parser.py',248),
  ('validate_var -> <empty>','validate_var',0,'p_validate_var','parser.py',251),
  ('push_var -> <empty>','push_var',0,'p_push_var','parser.py',255),
  ('array_notation -> LEFT_BRACKET exp RIGHT_BRACKET','array_notation',3,'p_array_notation','parser.py',262),
  ('array_notation -> empty','array_notation',1,'p_array_notation','parser.py',263),
  ('assignment_operator -> EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',267),
  ('assignment_operator -> TIMES_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',268),
  ('assignment_operator -> DIVIDE_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',269),
  ('assignment_operator -> PLUS_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',270),
  ('assignment_operator -> MINUS_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',271),
  ('push_assignment -> <empty>','push_assignment',0,'p_push_assignment','parser.py',274),
  ('pop_assignment -> <empty>','pop_assignment',0,'p_pop_assignment','parser.py',278),
  ('start_evaluating -> <empty>','start_evaluating',0,'p_start_evaluating','parser.py',284),
  ('finish_evaluating -> <empty>','finish_evaluating',0,'p_finish_evaluating','parser.py',288),
  ('cond -> expression pop_op_and_or post_cond','cond',3,'p_cond','parser.py',293),
  ('pop_op_and_or -> <empty>','pop_op_and_or',0,'p_pop_op_and_or','parser.py',296),
  ('post_cond -> AND push_op_and_or cond','post_cond',3,'p_post_cond','parser.py',301),
  ('post_cond -> OR push_op_and_or cond','post_cond',3,'p_post_cond','parser.py',302),
  ('post_cond -> empty','post_cond',1,'p_post_cond','parser.py',303),
  ('push_op_and_or -> <empty>','push_op_and_or',0,'p_push_op_and_or','parser.py',306),
  ('expression -> exp pop_relop post_expression','expression',3,'p_expression','parser.py',311),
  ('pop_relop -> <empty>','pop_relop',0,'p_pop_relop','parser.py',314),
  ('post_expression -> relational_operator expression','post_expression',2,'p_post_expression','parser.py',320),
  ('post_expression -> empty','post_expression',1,'p_post_expression','parser.py',321),
  ('push_relop -> <empty>','push_relop',0,'p_push_relop','parser.py',324),
  ('relational_operator -> LESS push_relop','relational_operator',2,'p_relational_operator','parser.py',329),
  ('relational_operator -> GREATER push_relop','relational_operator',2,'p_relational_operator','parser.py',330),
  ('relational_operator -> GREATER_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',331),
  ('relational_operator -> LESS_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',332),
  ('relational_operator -> EQUALS_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',333),
  ('relational_operator -> NOT_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',334),
  ('exp -> term pop_exp post_exp','exp',3,'p_exp','parser.py',338),
  ('pop_exp -> <empty>','pop_exp',0,'p_pop_exp','parser.py',341),
  ('post_exp -> PLUS push_exp exp','post_exp',3,'p_post_exp','parser.py',346),
  ('post_exp -> MINUS push_exp exp','post_exp',3,'p_post_exp','parser.py',347),
  ('post_exp -> empty','post_exp',1,'p_post_exp','parser.py',348),
  ('push_exp -> <empty>','push_exp',0,'p_push_exp','parser.py',351),
  ('term -> factor pop_term post_term','term',3,'p_term','parser.py',357),
  ('pop_term -> <empty>','pop_term',0,'p_pop_term','parser.py',360),
  ('post_term -> TIMES push_term term','post_term',3,'p_post_term','parser.py',366),
  ('post_term -> DIVIDE push_term term','post_term',3,'p_post_term','parser.py',367),
  ('post_term -> PERCENTAGE push_term term','post_term',3,'p_post_term','parser.py',368),
  ('post_term -> MOD push_term term','post_term',3,'p_post_term','parser.py',369),
  ('post_term -> empty','post_term',1,'p_post_term','parser.py',370),
  ('push_term -> <empty>','push_term',0,'p_push_term','parser.py',373),
  ('factor -> LEFT_PARENTHESIS push_paren cond RIGHT_PARENTHESIS pop_paren','factor',5,'p_factor','parser.py',378),
  ('factor -> variable_constant','factor',1,'p_factor','parser.py',379),
  ('factor -> MINUS variable_constant','factor',2,'p_factor','parser.py',380),
  ('factor -> call_function','factor',1,'p_factor','parser.py',381),
  ('push_paren -> <empty>','push_paren',0,'p_push_paren','parser.py',384),
  ('pop_paren -> <empty>','pop_paren',0,'p_pop_paren','parser.py',388),
  ('variable_constant -> ID process_variable array_notation','variable_constant',3,'p_variable_constant','parser.py',393),
  ('variable_constant -> INT_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',394),
  ('variable_constant -> DOUBLE_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',395),
  ('variable_constant -> STRING_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',396),
  ('variable_constant -> BOOL_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',397),
  ('process_variable -> <empty>','process_variable',0,'p_process_variable','parser.py',409),
  ('condition -> IF cond COLON push_gotoF optional_eol block post_condition END','condition',8,'p_condition','parser.py',423),
  ('push_gotoF -> <empty>','push_gotoF',0,'p_push_gotoF','parser.py',426),
  ('fill_goto -> <empty>','fill_goto',0,'p_fill_goto','parser.py',430),
  ('post_condition -> else','post_condition',1,'p_post_condition','parser.py',435),
  ('post_condition -> fill_goto empty','post_condition',2,'p_post_condition','parser.py',436),
  ('else -> ELSE fill_goto_plus COLON push_goto optional_eol block fill_goto','else',7,'p_else','parser.py',440),
  ('fill_goto_plus -> <empty>','fill_goto_plus',0,'p_fill_goto_plus','parser.py',443),
  ('push_goto -> <empty>','push_goto',0,'p_push_goto','parser.py',447),
  ('print -> PRINT cond post_print','print',3,'p_print','parser.py',452),
  ('post_print -> print_mod','post_print',1,'p_post_print','parser.py',455),
  ('post_print -> print_default','post_print',1,'p_post_print','parser.py',456),
  ('print_mod -> COMMA STRING_CONSTANT print_post_mod','print_mod',3,'p_print_mod','parser.py',459),
  ('print_post_mod -> <empty>','print_post_mod',0,'p_print_post_mod','parser.py',462),
  ('print_default -> empty','print_default',1,'p_print_default','parser.py',466),
  ('read -> READ start_read LEFT_PARENTHESIS identifier RIGHT_PARENTHESIS read_var','read',6,'p_read','parser.py',471),
  ('start_read -> <empty>','start_read',0,'p_start_read','parser.py',474),
  ('read_var -> <empty>','read_var',0,'p_read_var','parser.py',478),
  ('identifier -> ID process_variable post_identifier','identifier',3,'p_identifier','parser.py',487),
  ('post_identifier -> LEFT_BRACKET exp RIGHT_BRACKET','post_identifier',3,'p_post_identifier','parser.py',490),
  ('post_identifier -> empty','post_identifier',1,'p_post_identifier','parser.py',491),
  ('loop -> for','loop',1,'p_loop','parser.py',495),
  ('loop -> while','loop',1,'p_loop','parser.py',496),
  ('for -> FOR ID add_var FROM exp init_var TO exp push_for_cycle post_cycle end_for_loop','for',11,'p_for','parser.py',500),
  ('add_var -> <empty>','add_var',0,'p_add_var','parser.py',503),
  ('init_var -> <empty>','init_var',0,'p_init_var','parser.py',511),
  ('push_for_cycle -> <empty>','push_for_cycle',0,'p_push_for_cycle','parser.py',516),
  ('end_for_loop -> <empty>','end_for_loop',0,'p_end_for_loop','parser.py',523),
  ('while -> WHILE push_cycle cond push_gotoF post_cycle fill_goto_plus create_pending_goto','while',7,'p_while','parser.py',535),
  ('push_cycle -> <empty>','push_cycle',0,'p_push_cycle','parser.py',538),
  ('create_pending_goto -> <empty>','create_pending_goto',0,'p_create_pending_goto','parser.py',542),
  ('post_cycle -> COLON optional_eol block END','post_cycle',4,'p_post_cycle','parser.py',547),
  ('BOOL_CONSTANT -> TRUE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',550),
  ('BOOL_CONSTANT -> FALSE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',551),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',554),
]
