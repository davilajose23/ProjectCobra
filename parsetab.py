
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '2F425371A45A9CFE6E97538F6BBB62CE'
    
_lr_action_items = {'RETURN':([21,33,34,35,64,95,100,101,102,103,104,105,106,109,153,167,172,],[-108,-6,-8,-7,-108,-45,-17,-15,-16,-42,-43,-40,-41,-44,168,168,180,]),'LESS':([9,22,24,36,37,38,40,41,42,44,45,46,47,49,50,74,76,79,82,85,88,89,114,115,116,117,118,133,134,135,136,160,],[-108,-96,-98,-84,-79,-106,-82,-81,-108,-108,-108,-107,-83,-80,-77,-78,-70,-75,120,-66,-69,-97,-72,-71,-73,-74,-76,-18,-20,-67,-68,-19,]),'READ':([21,27,33,34,35,64,95,103,104,105,106,109,142,150,153,162,166,167,195,199,],[-108,59,-6,-8,-7,59,-45,-42,-43,-40,-41,-44,-108,-108,59,59,59,59,-108,59,]),'FOR':([21,27,33,34,35,64,95,103,104,105,106,109,142,150,153,162,166,167,195,199,],[-108,62,-6,-8,-7,62,-45,-42,-43,-40,-41,-44,-108,-108,62,62,62,62,-108,62,]),'RIGHT_BRACKET':([9,22,24,36,37,38,40,41,42,44,45,46,47,48,49,50,57,74,76,79,82,83,85,88,89,92,93,114,115,116,117,118,124,126,128,131,133,134,135,136,137,139,157,158,159,160,161,],[-108,-96,-98,-84,-79,-106,-82,-81,-108,-108,-108,-107,-83,89,-80,-77,91,-78,-70,-75,-108,-108,-66,-69,-97,-108,140,-72,-71,-73,-74,-76,-57,-59,-53,-56,-18,-20,-67,-68,-21,-23,-58,-54,-55,-19,-22,]),'EOL':([6,8,9,11,12,21,22,24,36,37,38,40,41,42,44,45,46,47,49,50,58,63,65,66,67,68,70,72,74,76,79,82,83,85,88,89,90,91,94,98,108,112,114,115,116,117,118,124,126,128,131,133,134,135,136,140,141,142,143,144,146,148,150,152,157,158,159,160,163,176,179,180,182,183,191,193,194,195,196,197,202,],[-38,21,-108,-39,27,21,-96,-98,-84,-79,-106,-82,-81,-108,-108,-108,-107,-83,-80,-77,21,-99,21,21,21,21,-100,21,-78,-70,-75,-108,-108,-66,-69,-97,-46,-95,-93,-108,21,21,-72,-71,-73,-74,-76,-57,-59,-53,-56,-18,-20,-67,-68,-94,-92,21,-104,-89,-91,-101,21,21,-58,-54,-55,-19,-90,-102,21,21,21,-105,21,-103,-85,21,21,21,21,]),'EQUALS_EQUALS':([9,22,24,36,37,38,40,41,42,44,45,46,47,49,50,74,76,79,82,85,88,89,114,115,116,117,118,133,134,135,136,160,],[-108,-96,-98,-84,-79,-106,-82,-81,-108,-108,-108,-107,-83,-80,-77,-78,-70,-75,123,-66,-69,-97,-72,-71,-73,-74,-76,-18,-20,-67,-68,-19,]),'WHILE':([21,27,33,34,35,64,95,103,104,105,106,109,142,150,153,162,166,167,195,199,],[-108,60,-6,-8,-7,60,-45,-42,-43,-40,-41,-44,-108,-108,60,60,60,60,-108,60,]),'PRINT':([21,27,33,34,35,64,95,103,104,105,106,109,142,150,153,162,166,167,195,199,],[-108,61,-6,-8,-7,61,-45,-42,-43,-40,-41,-44,-108,-108,61,61,61,61,-108,61,]),'GREATER_EQUALS':([9,22,24,36,37,38,40,41,42,44,45,46,47,49,50,74,76,79,82,85,88,89,114,115,116,117,118,133,134,135,136,160,],[-108,-96,-98,-84,-79,-106,-82,-81,-108,-108,-108,-107,-83,-80,-77,-78,-70,-75,125,-66,-69,-97,-72,-71,-73,-74,-76,-18,-20,-67,-68,-19,]),'MINUS':([9,22,23,24,36,37,38,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,60,61,69,74,75,76,77,78,79,80,84,86,87,89,114,115,116,117,118,119,120,121,122,123,125,127,129,130,133,134,138,147,160,168,175,180,],[-108,-96,39,-98,-84,-79,-106,-82,-81,-108,39,-108,87,-107,-83,-80,-77,-52,-49,-50,-48,39,-51,39,39,39,39,-78,39,-70,39,39,-75,39,39,39,39,-97,-72,-71,-73,-74,-76,-61,-60,-65,-63,-64,-62,39,39,39,-18,-20,39,39,-19,39,39,39,]),'COMMA':([9,22,24,36,37,38,40,41,42,44,45,46,47,49,50,74,76,79,82,83,85,88,89,92,98,113,114,115,116,117,118,124,126,128,131,133,134,135,136,157,158,159,160,],[-108,-96,-98,-84,-79,-106,-82,-81,-108,-108,-108,-107,-83,-80,-77,-78,-70,-75,-108,-108,-66,-69,-97,138,145,155,-72,-71,-73,-74,-76,-57,-59,-53,-56,-18,-20,-67,-68,-58,-54,-55,-19,]),'MINUS_EQUALS':([9,10,22,24,25,44,89,],[-108,-47,-96,-98,51,-108,-97,]),'END_MAIN':([21,33,34,35,64,71,95,100,101,102,103,104,105,106,109,],[-108,-6,-8,-7,-108,108,-45,-17,-15,-16,-42,-43,-40,-41,-44,]),'NOT_EQUALS':([9,22,24,36,37,38,40,41,42,44,45,46,47,49,50,74,76,79,82,85,88,89,114,115,116,117,118,133,134,135,136,160,],[-108,-96,-98,-84,-79,-106,-82,-81,-108,-108,-108,-107,-83,-80,-77,-78,-70,-75,121,-66,-69,-97,-72,-71,-73,-74,-76,-18,-20,-67,-68,-19,]),'DOUBLE_CONSTANT':([23,39,43,51,52,53,54,55,56,57,60,61,69,75,77,78,80,84,86,87,119,120,121,122,123,125,127,129,130,138,147,168,175,180,],[40,40,40,-52,-49,-50,-48,40,-51,40,40,40,40,40,40,40,40,40,40,40,-61,-60,-65,-63,-64,-62,40,40,40,40,40,40,40,40,]),'LESS_EQUALS':([9,22,24,36,37,38,40,41,42,44,45,46,47,49,50,74,76,79,82,85,88,89,114,115,116,117,118,133,134,135,136,160,],[-108,-96,-98,-84,-79,-106,-82,-81,-108,-108,-108,-107,-83,-80,-77,-78,-70,-75,122,-66,-69,-97,-72,-71,-73,-74,-76,-18,-20,-67,-68,-19,]),'TO':([9,22,24,36,37,38,40,41,42,44,45,46,47,49,50,74,76,79,85,88,89,114,115,116,117,118,133,134,135,136,160,164,],[-108,-96,-98,-84,-79,-106,-82,-81,-108,-108,-108,-107,-83,-80,-77,-78,-70,-75,-66,-69,-97,-72,-71,-73,-74,-76,-18,-20,-67,-68,-19,175,]),'INT_CONSTANT':([23,39,43,51,52,53,54,55,56,57,60,61,69,75,77,78,80,84,86,87,119,120,121,122,123,125,127,129,130,138,147,168,175,180,],[41,41,41,-52,-49,-50,-48,41,-51,41,41,41,41,41,41,41,41,41,41,41,-61,-60,-65,-63,-64,-62,41,41,41,41,41,41,41,41,]),'COLON':([9,22,24,36,37,38,40,41,42,44,45,46,47,49,50,74,76,79,82,83,85,88,89,97,107,114,115,116,117,118,124,126,128,131,133,134,135,136,157,158,159,160,165,184,188,],[-108,-96,-98,-84,-79,-106,-82,-81,-108,-108,-108,-107,-83,-80,-77,-78,-70,-75,-108,-108,-66,-69,-97,142,150,-72,-71,-73,-74,-76,-57,-59,-53,-56,-18,-20,-67,-68,-58,-54,-55,-19,142,142,195,]),'PLUS':([9,22,24,36,37,38,40,41,42,44,45,46,47,49,50,74,76,79,89,114,115,116,117,118,133,134,160,],[-108,-96,-98,-84,-79,-106,-82,-81,-108,-108,86,-107,-83,-80,-77,-78,-70,-75,-97,-72,-71,-73,-74,-76,-18,-20,-19,]),'PERCENTAGE':([9,22,24,36,37,38,40,41,42,44,46,47,49,50,74,89,118,133,134,160,],[-108,-96,-98,-84,-79,-106,-82,-81,78,-108,-107,-83,-80,-77,-78,-97,-76,-18,-20,-19,]),'IF':([21,27,33,34,35,64,95,103,104,105,106,109,142,150,153,162,166,167,195,199,],[-108,69,-6,-8,-7,69,-45,-42,-43,-40,-41,-44,-108,-108,69,69,69,69,-108,69,]),'LEFT_PARENTHESIS':([19,23,29,43,44,51,52,53,54,55,56,57,59,60,61,69,75,77,78,80,84,86,87,119,120,121,122,123,125,127,129,130,138,147,168,175,180,],[-25,43,73,43,84,-52,-49,-50,-48,43,-51,43,96,43,43,43,43,43,43,43,43,43,43,-61,-60,-65,-63,-64,-62,43,43,43,43,43,43,43,43,]),'$end':([2,3,13,18,21,28,33,34,35,108,151,],[0,-4,-2,-3,-108,-1,-6,-8,-7,-108,-14,]),'END':([21,33,34,35,64,95,100,101,102,103,104,105,106,109,172,174,177,185,186,187,189,190,198,203,],[-108,-6,-8,-7,-108,-45,-17,-15,-16,-42,-43,-40,-41,-44,182,183,-108,194,-86,-87,196,197,202,-88,]),'DIVIDE':([9,22,24,36,37,38,40,41,42,44,46,47,49,50,74,89,118,133,134,160,],[-108,-96,-98,-84,-79,-106,-82,-81,75,-108,-107,-83,-80,-77,-78,-97,-76,-18,-20,-19,]),'TIMES_EQUALS':([9,10,22,24,25,44,89,],[-108,-47,-96,-98,52,-108,-97,]),'EQUALS':([9,10,22,24,25,44,89,],[-108,26,-96,-98,54,-108,-97,]),'TIMES':([9,22,24,36,37,38,40,41,42,44,46,47,49,50,74,89,118,133,134,160,],[-108,-96,-98,-84,-79,-106,-82,-81,77,-108,-107,-83,-80,-77,-78,-97,-76,-18,-20,-19,]),'FUNC':([0,4,5,20,21,30,31,32,33,34,35,111,169,170,171,178,181,192,200,201,204,],[7,7,7,-108,-108,-9,-5,-10,-6,-8,-7,-24,-27,-29,-28,-26,-30,-31,-34,-32,-33,]),'IN':([9,22,24,89,99,],[-108,-96,-98,-97,149,]),'FALSE':([23,39,43,51,52,53,54,55,56,57,60,61,69,75,77,78,80,84,86,87,119,120,121,122,123,125,127,129,130,138,147,168,175,180,],[46,46,46,-52,-49,-50,-48,46,-51,46,46,46,46,46,46,46,46,46,46,46,-61,-60,-65,-63,-64,-62,46,46,46,46,46,46,46,46,]),'RIGHT_PARENTHESIS':([9,22,24,36,37,38,40,41,42,44,45,46,47,49,50,73,74,76,79,81,82,83,84,85,88,89,92,96,110,113,114,115,116,117,118,124,126,128,131,132,133,134,135,136,137,139,154,156,157,158,159,160,161,173,],[-108,-96,-98,-84,-79,-106,-82,-81,-108,-108,-108,-107,-83,-80,-77,112,-78,-70,-75,118,-108,-108,134,-66,-69,-97,-108,141,152,-108,-72,-71,-73,-74,-76,-57,-59,-53,-56,160,-18,-20,-67,-68,-21,-23,-35,-37,-58,-54,-55,-19,-22,-36,]),'ELSE':([21,33,34,35,64,95,100,101,102,103,104,105,106,109,177,],[-108,-6,-8,-7,-108,-45,-17,-15,-16,-42,-43,-40,-41,-44,188,]),'ID':([0,7,20,21,23,27,33,34,35,39,43,51,52,53,54,55,56,57,60,61,62,64,69,73,75,77,78,80,84,86,87,95,103,104,105,106,109,119,120,121,122,123,125,127,129,130,138,142,147,149,150,153,155,162,166,167,168,175,180,195,199,],[9,19,9,-108,44,44,-6,-8,-7,9,44,-52,-49,-50,-48,44,-51,44,44,44,9,44,44,9,44,44,44,44,44,44,44,-45,-42,-43,-40,-41,-44,-61,-60,-65,-63,-64,-62,44,44,44,44,-108,44,9,-108,44,9,44,44,44,44,44,44,-108,44,]),'TRUE':([23,39,43,51,52,53,54,55,56,57,60,61,69,75,77,78,80,84,86,87,119,120,121,122,123,125,127,129,130,138,147,168,175,180,],[38,38,38,-52,-49,-50,-48,38,-51,38,38,38,38,38,38,38,38,38,38,38,-61,-60,-65,-63,-64,-62,38,38,38,38,38,38,38,38,]),'PLUS_EQUALS':([9,10,22,24,25,44,89,],[-108,-47,-96,-98,56,-108,-97,]),'AND':([9,22,24,36,37,38,40,41,42,44,45,46,47,49,50,74,76,79,82,83,85,88,89,114,115,116,117,118,124,126,133,134,135,136,157,160,],[-108,-96,-98,-84,-79,-106,-82,-81,-108,-108,-108,-107,-83,-80,-77,-78,-70,-75,-108,129,-66,-69,-97,-72,-71,-73,-74,-76,-57,-59,-18,-20,-67,-68,-58,-19,]),'FROM':([9,22,24,89,99,],[-108,-96,-98,-97,147,]),'GREATER':([9,22,24,36,37,38,40,41,42,44,45,46,47,49,50,74,76,79,82,85,88,89,114,115,116,117,118,133,134,135,136,160,],[-108,-96,-98,-84,-79,-106,-82,-81,-108,-108,-108,-107,-83,-80,-77,-78,-70,-75,119,-66,-69,-97,-72,-71,-73,-74,-76,-18,-20,-67,-68,-19,]),'DIVIDE_EQUALS':([9,10,22,24,25,44,89,],[-108,-47,-96,-98,53,-108,-97,]),'STRING_CONSTANT':([23,39,43,51,52,53,54,55,56,57,60,61,69,75,77,78,80,84,86,87,119,120,121,122,123,125,127,129,130,138,145,147,168,175,180,],[47,47,47,-52,-49,-50,-48,47,-51,47,47,47,47,47,47,47,47,47,47,47,-61,-60,-65,-63,-64,-62,47,47,47,47,163,47,47,47,47,]),'LEFT_BRACKET':([9,26,44,],[23,57,23,]),'MAIN':([0,1,4,5,14,15,16,17,20,21,30,31,32,33,34,35,111,169,170,171,178,181,192,200,201,204,],[12,12,-108,12,-11,-12,-13,12,-108,-108,-9,-5,-10,-6,-8,-7,-24,-27,-29,-28,-26,-30,-31,-34,-32,-33,]),'OR':([9,22,24,36,37,38,40,41,42,44,45,46,47,49,50,74,76,79,82,83,85,88,89,114,115,116,117,118,124,126,133,134,135,136,157,160,],[-108,-96,-98,-84,-79,-106,-82,-81,-108,-108,-108,-107,-83,-80,-77,-78,-70,-75,-108,130,-66,-69,-97,-72,-71,-73,-74,-76,-57,-59,-18,-20,-67,-68,-58,-19,]),'MOD':([9,22,24,36,37,38,40,41,42,44,46,47,49,50,74,89,118,133,134,160,],[-108,-96,-98,-84,-79,-106,-82,-81,80,-108,-107,-83,-80,-77,-78,-97,-76,-18,-20,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'optional_eol':([21,108,142,150,195,],[33,151,162,166,199,]),'post_functions':([4,],[14,]),'relational_operator':([82,],[127,]),'call_function':([23,27,43,55,57,60,61,64,69,75,77,78,80,84,86,87,127,129,130,138,147,153,162,166,167,168,175,180,199,],[37,58,37,37,37,37,37,58,37,37,37,37,37,37,37,37,37,37,37,37,37,58,58,58,58,37,37,37,58,]),'post_void_return':([172,],[181,]),'BOOL_CONSTANT':([23,39,43,55,57,60,61,69,75,77,78,80,84,86,87,127,129,130,138,147,168,175,180,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'required_eol':([8,21,58,65,66,67,68,72,108,112,142,150,152,179,180,182,191,195,196,197,202,],[20,34,95,103,104,105,106,109,34,153,34,34,167,189,190,192,198,34,200,201,204,]),'post_print':([98,],[144,]),'post_parameters':([113,],[154,]),'cond':([43,55,57,60,61,69,84,129,130,138,168,180,],[81,90,92,97,98,107,92,158,159,92,179,191,]),'loop':([27,64,153,162,166,167,199,],[72,72,72,72,72,72,72,]),'post_function':([73,],[111,]),'post_cycle':([97,165,184,],[143,176,193,]),'post_cond':([83,],[128,]),'functions':([0,4,5,],[1,15,17,]),'register_variable':([10,],[25,]),'call_parameters':([57,84,138,],[93,132,161,]),'post_condition':([177,],[185,]),'for':([27,64,153,162,166,167,199,],[63,63,63,63,63,63,63,]),'post_call_parameters':([92,],[137,]),'post_exp':([45,],[85,]),'post_variables':([20,],[31,]),'read':([27,64,153,162,166,167,199,],[66,66,66,66,66,66,66,]),'program':([0,],[2,]),'statement':([27,64,153,162,166,167,199,],[64,64,64,64,64,64,64,]),'factor':([23,43,55,57,60,61,69,75,77,78,80,84,86,87,127,129,130,138,147,168,175,180,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'print':([27,64,153,162,166,167,199,],[65,65,65,65,65,65,65,]),'main':([0,1,5,17,],[3,13,18,28,]),'empty':([4,9,20,21,42,44,45,64,82,83,92,98,108,113,142,150,177,195,],[16,24,32,35,79,24,88,100,126,131,139,146,35,156,35,35,187,35,]),'function':([0,4,5,],[4,4,4,]),'post_for':([99,],[148,]),'pre_variables':([0,20,],[5,30,]),'assignment':([0,20,27,64,153,162,166,167,199,],[6,6,6,6,6,6,6,6,6,]),'post_term':([42,],[76,]),'else':([177,],[186,]),'value_return':([153,167,],[170,170,]),'post_identifier':([9,44,],[22,22,]),'void_return':([153,167,],[171,171,]),'variable':([0,20,27,64,153,162,166,167,199,],[8,8,67,67,67,67,67,67,67,]),'post_block':([64,],[101,]),'condition':([27,64,153,162,166,167,199,],[68,68,68,68,68,68,68,]),'term':([23,43,55,57,60,61,69,75,77,78,80,84,86,87,127,129,130,138,147,168,175,180,],[45,45,45,45,45,45,45,114,115,116,117,45,45,45,45,45,45,45,45,45,45,45,]),'block':([27,64,153,162,166,167,199,],[71,102,172,174,177,172,203,]),'post_list':([57,],[94,]),'parameters':([73,155,],[110,173,]),'list':([0,20,27,64,153,162,166,167,199,],[11,11,11,11,11,11,11,11,11,]),'func_return':([153,167,],[169,178,]),'while':([27,64,153,162,166,167,199,],[70,70,70,70,70,70,70,]),'register_function':([19,],[29,]),'post_expression':([82,],[124,]),'assignment_operator':([25,],[55,]),'exp':([23,43,55,57,60,61,69,84,86,87,127,129,130,138,147,168,175,180,],[48,82,82,82,82,82,82,82,135,136,157,82,82,82,164,82,184,82,]),'identifier':([0,20,23,27,39,43,55,57,60,61,62,64,69,73,75,77,78,80,84,86,87,127,129,130,138,147,149,153,155,162,166,167,168,175,180,199,],[10,10,49,10,49,49,49,49,49,49,99,10,49,113,49,49,49,49,49,49,49,49,49,49,49,49,165,10,113,10,10,10,49,49,49,10,]),'expression':([43,55,57,60,61,69,84,129,130,138,168,180,],[83,83,83,83,83,83,83,83,83,83,83,83,]),'post_call_function':([84,],[133,]),'variable_constant':([23,39,43,55,57,60,61,69,75,77,78,80,84,86,87,127,129,130,138,147,168,175,180,],[50,74,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> pre_variables functions main','program',3,'p_program','parser.py',22),
  ('program -> functions main','program',2,'p_program','parser.py',23),
  ('program -> pre_variables main','program',2,'p_program','parser.py',24),
  ('program -> main','program',1,'p_program','parser.py',25),
  ('pre_variables -> variable required_eol post_variables','pre_variables',3,'p_pre_variables','parser.py',29),
  ('required_eol -> EOL optional_eol','required_eol',2,'p_required_eol','parser.py',32),
  ('optional_eol -> empty','optional_eol',1,'p_optional_eol','parser.py',35),
  ('optional_eol -> required_eol','optional_eol',1,'p_optional_eol','parser.py',36),
  ('post_variables -> pre_variables','post_variables',1,'p_post_variables','parser.py',39),
  ('post_variables -> empty','post_variables',1,'p_post_variables','parser.py',40),
  ('functions -> function post_functions','functions',2,'p_functions','parser.py',44),
  ('post_functions -> functions','post_functions',1,'p_post_functions','parser.py',48),
  ('post_functions -> empty','post_functions',1,'p_post_functions','parser.py',49),
  ('main -> MAIN EOL block END_MAIN optional_eol','main',5,'p_main','parser.py',53),
  ('block -> statement post_block','block',2,'p_block','parser.py',57),
  ('post_block -> block','post_block',1,'p_post_block','parser.py',60),
  ('post_block -> empty','post_block',1,'p_post_block','parser.py',61),
  ('call_function -> ID LEFT_PARENTHESIS post_call_function','call_function',3,'p_call_function','parser.py',65),
  ('post_call_function -> call_parameters RIGHT_PARENTHESIS','post_call_function',2,'p_post_call_function','parser.py',68),
  ('post_call_function -> RIGHT_PARENTHESIS','post_call_function',1,'p_post_call_function','parser.py',69),
  ('call_parameters -> cond post_call_parameters','call_parameters',2,'p_call_parameters','parser.py',73),
  ('post_call_parameters -> COMMA call_parameters','post_call_parameters',2,'p_post_call_parameters','parser.py',76),
  ('post_call_parameters -> empty','post_call_parameters',1,'p_post_call_parameters','parser.py',77),
  ('function -> FUNC ID register_function LEFT_PARENTHESIS post_function','function',5,'p_function','parser.py',81),
  ('register_function -> <empty>','register_function',0,'p_register_function','parser.py',84),
  ('post_function -> parameters RIGHT_PARENTHESIS required_eol func_return','post_function',4,'p_post_function','parser.py',89),
  ('post_function -> RIGHT_PARENTHESIS required_eol func_return','post_function',3,'p_post_function','parser.py',90),
  ('func_return -> void_return','func_return',1,'p_func_return','parser.py',93),
  ('func_return -> value_return','func_return',1,'p_func_return','parser.py',94),
  ('void_return -> block post_void_return','void_return',2,'p_void_return','parser.py',97),
  ('post_void_return -> END required_eol','post_void_return',2,'p_post_void_return','parser.py',100),
  ('post_void_return -> RETURN required_eol END required_eol','post_void_return',4,'p_post_void_return','parser.py',101),
  ('value_return -> block RETURN cond required_eol END required_eol','value_return',6,'p_value_return','parser.py',104),
  ('value_return -> RETURN cond required_eol END required_eol','value_return',5,'p_value_return','parser.py',105),
  ('parameters -> identifier post_parameters','parameters',2,'p_parameters','parser.py',110),
  ('post_parameters -> COMMA parameters','post_parameters',2,'p_post_parameters','parser.py',113),
  ('post_parameters -> empty','post_parameters',1,'p_post_parameters','parser.py',114),
  ('variable -> assignment','variable',1,'p_variable','parser.py',118),
  ('variable -> list','variable',1,'p_variable','parser.py',119),
  ('statement -> variable required_eol','statement',2,'p_statement','parser.py',123),
  ('statement -> condition required_eol','statement',2,'p_statement','parser.py',124),
  ('statement -> print required_eol','statement',2,'p_statement','parser.py',125),
  ('statement -> read required_eol','statement',2,'p_statement','parser.py',126),
  ('statement -> loop required_eol','statement',2,'p_statement','parser.py',127),
  ('statement -> call_function required_eol','statement',2,'p_statement','parser.py',128),
  ('assignment -> identifier register_variable assignment_operator cond','assignment',4,'p_assignment','parser.py',133),
  ('register_variable -> <empty>','register_variable',0,'p_register_variable','parser.py',137),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',142),
  ('assignment_operator -> TIMES_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',143),
  ('assignment_operator -> DIVIDE_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',144),
  ('assignment_operator -> PLUS_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',145),
  ('assignment_operator -> MINUS_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',146),
  ('cond -> expression post_cond','cond',2,'p_cond','parser.py',150),
  ('post_cond -> AND cond','post_cond',2,'p_post_cond','parser.py',153),
  ('post_cond -> OR cond','post_cond',2,'p_post_cond','parser.py',154),
  ('post_cond -> empty','post_cond',1,'p_post_cond','parser.py',155),
  ('expression -> exp post_expression','expression',2,'p_expression','parser.py',159),
  ('post_expression -> relational_operator exp','post_expression',2,'p_post_expression','parser.py',162),
  ('post_expression -> empty','post_expression',1,'p_post_expression','parser.py',163),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',167),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',168),
  ('relational_operator -> GREATER_EQUALS','relational_operator',1,'p_relational_operator','parser.py',169),
  ('relational_operator -> LESS_EQUALS','relational_operator',1,'p_relational_operator','parser.py',170),
  ('relational_operator -> EQUALS_EQUALS','relational_operator',1,'p_relational_operator','parser.py',171),
  ('relational_operator -> NOT_EQUALS','relational_operator',1,'p_relational_operator','parser.py',172),
  ('exp -> term post_exp','exp',2,'p_exp','parser.py',176),
  ('post_exp -> PLUS exp','post_exp',2,'p_post_exp','parser.py',179),
  ('post_exp -> MINUS exp','post_exp',2,'p_post_exp','parser.py',180),
  ('post_exp -> empty','post_exp',1,'p_post_exp','parser.py',181),
  ('term -> factor post_term','term',2,'p_term','parser.py',185),
  ('post_term -> TIMES term','post_term',2,'p_post_term','parser.py',188),
  ('post_term -> DIVIDE term','post_term',2,'p_post_term','parser.py',189),
  ('post_term -> PERCENTAGE term','post_term',2,'p_post_term','parser.py',190),
  ('post_term -> MOD term','post_term',2,'p_post_term','parser.py',191),
  ('post_term -> empty','post_term',1,'p_post_term','parser.py',192),
  ('factor -> LEFT_PARENTHESIS cond RIGHT_PARENTHESIS','factor',3,'p_factor','parser.py',196),
  ('factor -> variable_constant','factor',1,'p_factor','parser.py',197),
  ('factor -> MINUS variable_constant','factor',2,'p_factor','parser.py',198),
  ('factor -> call_function','factor',1,'p_factor','parser.py',199),
  ('variable_constant -> identifier','variable_constant',1,'p_variable_constant','parser.py',203),
  ('variable_constant -> INT_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',204),
  ('variable_constant -> DOUBLE_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',205),
  ('variable_constant -> STRING_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',206),
  ('variable_constant -> BOOL_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',207),
  ('condition -> IF cond COLON optional_eol block post_condition END','condition',7,'p_condition','parser.py',211),
  ('post_condition -> else','post_condition',1,'p_post_condition','parser.py',215),
  ('post_condition -> empty','post_condition',1,'p_post_condition','parser.py',216),
  ('else -> ELSE COLON optional_eol block','else',4,'p_else','parser.py',220),
  ('print -> PRINT cond post_print','print',3,'p_print','parser.py',224),
  ('post_print -> COMMA STRING_CONSTANT','post_print',2,'p_post_print','parser.py',227),
  ('post_print -> empty','post_print',1,'p_post_print','parser.py',228),
  ('read -> READ LEFT_PARENTHESIS RIGHT_PARENTHESIS','read',3,'p_read','parser.py',232),
  ('list -> identifier EQUALS LEFT_BRACKET post_list','list',4,'p_list','parser.py',236),
  ('post_list -> call_parameters RIGHT_BRACKET','post_list',2,'p_post_list','parser.py',239),
  ('post_list -> RIGHT_BRACKET','post_list',1,'p_post_list','parser.py',240),
  ('identifier -> ID post_identifier','identifier',2,'p_identifier','parser.py',244),
  ('post_identifier -> LEFT_BRACKET exp RIGHT_BRACKET','post_identifier',3,'p_post_identifier','parser.py',247),
  ('post_identifier -> empty','post_identifier',1,'p_post_identifier','parser.py',248),
  ('loop -> for','loop',1,'p_loop','parser.py',252),
  ('loop -> while','loop',1,'p_loop','parser.py',253),
  ('for -> FOR identifier post_for','for',3,'p_for','parser.py',257),
  ('post_for -> IN identifier post_cycle','post_for',3,'p_post_for','parser.py',260),
  ('post_for -> FROM exp TO exp post_cycle','post_for',5,'p_post_for','parser.py',261),
  ('while -> WHILE cond post_cycle','while',3,'p_while','parser.py',265),
  ('post_cycle -> COLON optional_eol block END','post_cycle',4,'p_post_cycle','parser.py',269),
  ('BOOL_CONSTANT -> TRUE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',272),
  ('BOOL_CONSTANT -> FALSE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',273),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',276),
]
