
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '791B6D30DF2726471829DC414B5AA1F6'
    
_lr_action_items = {'RETURN':([10,26,27,28,39,40,47,48,49,50,62,90,96,97,98,99,100,101,104,108,116,147,148,182,183,],[-152,-7,-6,-8,-152,-78,-9,-11,-10,-16,-152,-65,-63,-29,-27,-28,-62,-60,-61,-64,-152,178,-152,218,178,]),'LESS':([72,73,74,76,77,78,80,81,82,83,85,93,109,110,111,112,114,125,133,135,137,140,145,146,175,203,205,209,210,211,212,213,214,215,216,233,234,248,249,265,],[-121,-114,-150,-122,-118,-104,-119,-98,-151,-120,-112,-87,-122,-113,-152,-152,-152,152,-117,-70,-103,-109,-97,-101,-116,-30,-116,-69,-106,-105,-107,-108,-111,-100,-99,-116,-34,-34,-33,-32,]),'READ':([10,26,27,28,39,40,46,47,48,49,50,62,90,96,100,101,104,108,116,130,147,148,167,183,206,207,236,276,282,286,],[-152,-7,-6,-8,-152,-78,57,-9,-11,-10,-16,57,-65,-63,-62,-60,-61,-64,-152,-124,57,-152,-152,57,57,-152,57,-130,-152,57,]),'VOID':([9,],[23,]),'RIGHT_BRACKET':([72,73,74,76,77,78,80,81,82,83,84,85,109,110,111,112,114,133,135,137,140,145,146,170,175,203,205,209,210,211,212,213,214,215,216,233,234,248,249,265,],[-121,-114,-150,-122,-118,-104,-119,-98,-151,-120,115,-112,-122,-113,-152,-152,-152,-117,-70,-103,-109,-97,-101,209,-116,-30,-116,-69,-106,-105,-107,-108,-111,-100,-99,-116,-34,-34,-33,-32,]),'EOL':([11,29,33,34,35,36,39,41,43,44,51,53,54,56,60,61,63,64,66,69,71,72,73,74,76,77,78,80,81,82,83,85,86,92,93,94,107,109,110,111,112,114,115,117,119,120,122,123,124,125,126,130,132,133,135,137,140,145,146,150,157,158,160,163,167,175,185,186,203,205,207,208,209,210,211,212,213,214,215,216,217,218,220,223,224,231,233,234,237,238,240,241,244,248,249,255,257,258,265,267,269,270,271,276,277,279,281,282,284,285,],[-125,-26,39,39,-122,-152,39,-152,-20,-18,-138,-140,-19,39,-141,39,39,39,39,-142,39,-121,-114,-150,-122,-118,-104,-119,-98,-151,-120,-112,39,-152,-87,-81,-25,-122,-113,-152,-152,-152,-139,39,-137,-131,-133,-132,-136,-152,-152,-124,39,-117,-70,-103,-109,-97,-101,-135,-86,-89,-80,-84,39,-116,-134,-88,-30,-116,39,-125,-69,-106,-105,-107,-108,-111,-100,-99,-52,39,-53,-82,-83,-77,-116,-34,-148,39,-52,39,-66,-34,-33,-146,-53,39,-32,-123,-149,-53,39,-130,39,-53,-148,39,39,-143,]),'EQUALS_EQUALS':([72,73,74,76,77,78,80,81,82,83,85,93,109,110,111,112,114,125,133,135,137,140,145,146,175,203,205,209,210,211,212,213,214,215,216,233,234,248,249,265,],[-121,-114,-150,-122,-118,-104,-119,-98,-151,-120,-112,-87,-122,-113,-152,-152,-152,156,-117,-70,-103,-109,-97,-101,-116,-30,-116,-69,-106,-105,-107,-108,-111,-100,-99,-116,-34,-34,-33,-32,]),'WHILE':([10,26,27,28,39,40,46,47,48,49,50,62,90,96,100,101,104,108,116,130,147,148,167,183,206,207,236,276,282,286,],[-152,-7,-6,-8,-152,-78,68,-9,-11,-10,-16,68,-65,-63,-62,-60,-61,-64,-152,-124,68,-152,-152,68,68,-152,68,-130,-152,68,]),'COLON':([72,73,74,76,77,78,80,81,82,83,85,93,94,105,109,110,111,112,114,125,126,131,133,135,137,140,145,146,157,158,160,163,168,175,186,203,205,209,210,211,212,213,214,215,216,223,224,233,234,248,249,253,263,265,268,275,],[-121,-114,-150,-122,-118,-104,-119,-98,-151,-120,-112,-87,-81,130,-122,-113,-152,-152,-152,-152,-152,-124,-117,-70,-103,-109,-97,-101,-86,-89,-80,-84,207,-116,-88,-30,-116,-69,-106,-105,-107,-108,-111,-100,-99,-82,-83,-116,-34,-34,-33,-129,-147,-32,276,207,]),'PRINT':([10,26,27,28,39,40,46,47,48,49,50,62,90,96,100,101,104,108,116,130,147,148,167,183,206,207,236,276,282,286,],[-152,-7,-6,-8,-152,-78,58,-9,-11,-10,-16,58,-65,-63,-62,-60,-61,-64,-152,-124,58,-152,-152,58,58,-152,58,-130,-152,58,]),'TRUE':([52,58,67,68,75,79,106,113,129,134,136,138,139,141,143,144,151,152,153,154,155,156,159,161,162,164,166,171,172,173,174,176,177,178,187,188,189,190,191,192,193,194,196,197,198,199,200,201,218,226,227,228,229,230,243,246,],[74,74,74,-147,74,-115,74,74,-115,74,-110,-110,-110,-110,-102,-102,74,-90,-90,-90,-90,-90,-90,-85,-85,74,74,74,74,74,74,74,74,74,-91,-93,-96,-94,-95,-92,74,74,-76,-76,-76,-76,-76,74,74,-75,-74,-72,-73,-71,74,74,]),'MINUS':([52,58,67,68,72,73,74,76,77,78,79,80,81,82,83,85,106,109,110,111,112,113,114,129,133,134,135,136,137,138,139,140,141,143,144,151,152,153,154,155,156,159,161,162,164,166,171,172,173,174,175,176,177,178,187,188,189,190,191,192,193,194,196,197,198,199,200,201,203,205,209,210,211,212,213,214,218,226,227,228,229,230,233,234,243,246,248,249,265,],[75,75,75,-147,-121,-114,-150,-122,-118,-104,-115,-119,-98,-151,-120,-112,75,-122,-113,-152,-152,75,143,-115,-117,75,-70,-110,-103,-110,-110,-109,-110,-102,-102,75,-90,-90,-90,-90,-90,-90,-85,-85,75,75,75,75,75,75,-116,75,75,75,-91,-93,-96,-94,-95,-92,75,75,-76,-76,-76,-76,-76,75,-30,-116,-69,-106,-105,-107,-108,-111,75,-75,-74,-72,-73,-71,-116,-34,75,75,-34,-33,-32,]),'DIVIDE':([72,73,74,76,77,78,80,82,83,85,109,110,111,112,133,135,175,203,205,209,214,233,234,248,249,265,],[-121,-114,-150,-122,-118,-104,-119,-151,-120,-112,-122,-113,-152,136,-117,-70,-116,-30,-116,-69,-111,-116,-34,-34,-33,-32,]),'MINUS_EQUALS':([65,102,128,135,165,209,],[-67,-68,-152,-70,196,-69,]),'END_MAIN':([39,47,48,49,62,70,90,96,97,98,99,100,101,104,108,],[-152,-9,-11,-10,-152,107,-65,-63,-29,-27,-28,-62,-60,-61,-64,]),'NOT_EQUALS':([72,73,74,76,77,78,80,81,82,83,85,93,109,110,111,112,114,125,133,135,137,140,145,146,175,203,205,209,210,211,212,213,214,215,216,233,234,248,249,265,],[-121,-114,-150,-122,-118,-104,-119,-98,-151,-120,-112,-87,-122,-113,-152,-152,-152,154,-117,-70,-103,-109,-97,-101,-116,-30,-116,-69,-106,-105,-107,-108,-111,-100,-99,-116,-34,-34,-33,-32,]),'DOUBLE_CONSTANT':([52,58,67,68,75,79,106,113,129,134,136,138,139,141,143,144,151,152,153,154,155,156,159,161,162,164,166,171,172,173,174,176,177,178,187,188,189,190,191,192,193,194,196,197,198,199,200,201,218,226,227,228,229,230,243,246,],[80,80,80,-147,80,-115,80,80,-115,80,-110,-110,-110,-110,-102,-102,80,-90,-90,-90,-90,-90,-90,-85,-85,80,80,80,80,80,80,80,80,80,-91,-93,-96,-94,-95,-92,80,80,-76,-76,-76,-76,-76,80,80,-75,-74,-72,-73,-71,80,80,]),'GREATER_EQUALS':([72,73,74,76,77,78,80,81,82,83,85,93,109,110,111,112,114,125,133,135,137,140,145,146,175,203,205,209,210,211,212,213,214,215,216,233,234,248,249,265,],[-121,-114,-150,-122,-118,-104,-119,-98,-151,-120,-112,-87,-122,-113,-152,-152,-152,153,-117,-70,-103,-109,-97,-101,-116,-30,-116,-69,-106,-105,-107,-108,-111,-100,-99,-116,-34,-34,-33,-32,]),'LESS_EQUALS':([72,73,74,76,77,78,80,81,82,83,85,93,109,110,111,112,114,125,133,135,137,140,145,146,175,203,205,209,210,211,212,213,214,215,216,233,234,248,249,265,],[-121,-114,-150,-122,-118,-104,-119,-98,-151,-120,-112,-87,-122,-113,-152,-152,-152,155,-117,-70,-103,-109,-97,-101,-116,-30,-116,-69,-106,-105,-107,-108,-111,-100,-99,-116,-34,-34,-33,-32,]),'TO':([72,73,74,76,77,78,80,81,82,83,85,109,110,111,112,114,133,135,137,140,145,146,175,195,203,205,209,210,211,212,213,214,215,216,225,233,234,248,249,265,],[-121,-114,-150,-122,-118,-104,-119,-98,-151,-120,-112,-122,-113,-152,-152,-152,-117,-70,-103,-109,-97,-101,-116,-145,-30,-116,-69,-106,-105,-107,-108,-111,-100,-99,243,-116,-34,-34,-33,-32,]),'INT_CONSTANT':([52,58,67,68,75,79,106,113,129,134,136,138,139,141,143,144,151,152,153,154,155,156,159,161,162,164,166,171,172,173,174,176,177,178,187,188,189,190,191,192,193,194,196,197,198,199,200,201,218,226,227,228,229,230,243,246,],[77,77,77,-147,77,-115,77,77,-115,77,-110,-110,-110,-110,-102,-102,77,-90,-90,-90,-90,-90,-90,-85,-85,77,77,77,77,77,77,77,77,77,-91,-93,-96,-94,-95,-92,77,77,-76,-76,-76,-76,-76,77,77,-75,-74,-72,-73,-71,77,77,]),'COMMA':([35,36,41,51,53,72,73,74,76,77,78,80,81,82,83,85,92,93,94,109,110,111,112,114,115,125,126,133,135,137,140,145,146,157,158,160,163,175,186,202,203,205,209,210,211,212,213,214,215,216,222,223,224,232,233,234,242,248,249,265,],[-122,42,-152,-138,-140,-121,-114,-150,-122,-118,-104,-119,-98,-151,-120,-112,121,-87,-81,-122,-113,-152,-152,-152,-139,-152,-152,-117,-70,-103,-109,-97,-101,-86,-89,-80,-84,-116,-88,-36,-30,-116,-69,-106,-105,-107,-108,-111,-100,-99,-57,-82,-83,246,-116,-34,261,-34,-33,-32,]),'PLUS':([72,73,74,76,77,78,80,81,82,83,85,109,110,111,112,114,133,135,137,140,175,203,205,209,210,211,212,213,214,233,234,248,249,265,],[-121,-114,-150,-122,-118,-104,-119,-98,-151,-120,-112,-122,-113,-152,-152,144,-117,-70,-103,-109,-116,-30,-116,-69,-106,-105,-107,-108,-111,-116,-34,-34,-33,-32,]),'PERCENTAGE':([72,73,74,76,77,78,80,82,83,85,109,110,111,112,133,135,175,203,205,209,214,233,234,248,249,265,],[-121,-114,-150,-122,-118,-104,-119,-151,-120,-112,-122,-113,-152,139,-117,-70,-116,-30,-116,-69,-111,-116,-34,-34,-33,-32,]),'PLUS_EQUALS':([65,102,128,135,165,209,],[-67,-68,-152,-70,197,-69,]),'LEFT_PARENTHESIS':([37,45,52,57,58,65,67,68,76,79,103,106,113,129,134,136,138,139,141,143,144,151,152,153,154,155,156,159,161,162,164,166,171,172,173,174,176,177,178,187,188,189,190,191,192,193,194,196,197,198,199,200,201,218,226,227,228,229,230,243,246,],[-42,55,79,91,79,-31,79,-147,-31,-115,129,79,79,-115,79,-110,-110,-110,-110,-102,-102,79,-90,-90,-90,-90,-90,-90,-85,-85,79,79,79,79,79,79,79,79,79,-91,-93,-96,-94,-95,-92,79,79,-76,-76,-76,-76,-76,79,79,-75,-74,-72,-73,-71,79,79,]),'$end':([1,4,5,12,22,31,39,47,48,49,107,132,169,],[0,-1,-5,-3,-4,-2,-152,-9,-11,-10,-25,-152,-24,]),'END':([39,47,48,49,62,90,96,97,98,99,100,101,104,108,182,235,239,250,251,252,254,256,266,272,288,289,],[-152,-9,-11,-10,-152,-65,-63,-29,-27,-28,-62,-60,-61,-64,220,-125,257,-152,267,-126,269,270,-127,279,-125,-128,]),'STRING':([0,2,6,9,10,38,39,40,47,48,49,50,55,88,116,118,148,261,],[-130,-79,13,13,-79,-79,-152,-78,-9,-11,-10,-16,-79,-55,-79,13,-79,-79,]),'FOR':([10,26,27,28,39,40,46,47,48,49,50,62,90,96,100,101,104,108,116,130,147,148,167,183,206,207,236,276,282,286,],[-152,-7,-6,-8,-152,-78,59,-9,-11,-10,-16,59,-65,-63,-62,-60,-61,-64,-152,-124,59,-152,-152,59,59,-152,59,-130,-152,59,]),'EQUALS':([65,102,128,135,165,209,],[-67,-68,-152,-70,200,-69,]),'ELSE':([39,47,48,49,62,90,96,97,98,99,100,101,104,108,235,],[-152,-9,-11,-10,-152,-65,-63,-29,-27,-28,-62,-60,-61,-64,253,]),'FUNC':([0,2,7,8,10,26,27,28,39,40,47,48,49,50,89,179,180,181,219,221,259,278,283,287,],[-130,9,9,9,-152,-7,-6,-8,-152,-78,-9,-11,-10,-16,-39,-44,-46,-45,-47,-43,-48,-49,-51,-50,]),'FROM':([95,127,],[-144,164,]),'RIGHT_PARENTHESIS':([35,41,51,53,55,72,73,74,76,77,78,80,81,82,83,85,87,91,93,94,109,110,111,112,114,115,125,126,129,133,135,137,140,142,145,146,157,158,160,163,166,175,186,202,203,204,205,209,210,211,212,213,214,215,216,222,223,224,232,233,234,242,245,247,248,249,260,262,264,265,273,274,280,],[-122,-152,-138,-140,86,-121,-114,-150,-122,-118,-104,-119,-98,-151,-120,-112,117,119,-87,-81,-122,-113,-152,-152,-152,-139,-152,-152,-115,-117,-70,-103,-109,175,-97,-101,-86,-89,-80,-84,205,-116,-88,-36,-30,233,-116,-69,-106,-105,-107,-108,-111,-100,-99,-57,-82,-83,-152,-116,-34,-152,-35,-38,-34,-33,-56,-59,-37,-32,-78,-58,-54,]),'TIMES':([72,73,74,76,77,78,80,82,83,85,109,110,111,112,133,135,175,203,205,209,214,233,234,248,249,265,],[-121,-114,-150,-122,-118,-104,-119,-151,-120,-112,-122,-113,-152,138,-117,-70,-116,-30,-116,-69,-111,-116,-34,-34,-33,-32,]),'ID':([10,13,14,15,16,17,23,24,25,26,27,28,30,32,39,40,42,46,47,48,49,50,52,58,59,62,67,68,75,79,90,96,100,101,104,106,108,113,116,129,130,134,136,138,139,141,143,144,147,148,149,151,152,153,154,155,156,159,161,162,164,166,167,171,172,173,174,176,177,178,183,184,187,188,189,190,191,192,193,194,196,197,198,199,200,201,206,207,218,226,227,228,229,230,236,243,246,276,282,286,],[-152,-14,-12,-13,-15,-17,-41,-40,-17,-7,-6,-8,35,37,-152,-78,35,65,-9,-11,-10,-16,76,76,95,65,76,-147,109,-115,-65,-63,-62,-60,-61,76,-64,76,-152,-115,-124,76,-110,-110,-110,-110,-102,-102,65,-152,-17,76,-90,-90,-90,-90,-90,-90,-85,-85,76,76,-152,76,76,76,76,76,76,76,65,35,-91,-93,-96,-94,-95,-92,76,76,-76,-76,-76,-76,-76,76,65,-152,76,-75,-74,-72,-73,-71,65,76,76,-130,-152,65,]),'IF':([10,26,27,28,39,40,46,47,48,49,50,62,90,96,100,101,104,108,116,130,147,148,167,183,206,207,236,276,282,286,],[-152,-7,-6,-8,-152,-78,67,-9,-11,-10,-16,67,-65,-63,-62,-60,-61,-64,-152,-124,67,-152,-152,67,67,-152,67,-130,-152,67,]),'AND':([72,73,74,76,77,78,80,81,82,83,85,93,94,109,110,111,112,114,125,126,133,135,137,140,145,146,157,158,175,186,203,205,209,210,211,212,213,214,215,216,233,234,248,249,265,],[-121,-114,-150,-122,-118,-104,-119,-98,-151,-120,-112,-87,-81,-122,-113,-152,-152,-152,-152,161,-117,-70,-103,-109,-97,-101,-86,-89,-116,-88,-30,-116,-69,-106,-105,-107,-108,-111,-100,-99,-116,-34,-34,-33,-32,]),'FALSE':([52,58,67,68,75,79,106,113,129,134,136,138,139,141,143,144,151,152,153,154,155,156,159,161,162,164,166,171,172,173,174,176,177,178,187,188,189,190,191,192,193,194,196,197,198,199,200,201,218,226,227,228,229,230,243,246,],[82,82,82,-147,82,-115,82,82,-115,82,-110,-110,-110,-110,-102,-102,82,-90,-90,-90,-90,-90,-90,-85,-85,82,82,82,82,82,82,82,82,82,-91,-93,-96,-94,-95,-92,82,82,-76,-76,-76,-76,-76,82,82,-75,-74,-72,-73,-71,82,82,]),'GREATER':([72,73,74,76,77,78,80,81,82,83,85,93,109,110,111,112,114,125,133,135,137,140,145,146,175,203,205,209,210,211,212,213,214,215,216,233,234,248,249,265,],[-121,-114,-150,-122,-118,-104,-119,-98,-151,-120,-112,-87,-122,-113,-152,-152,-152,159,-117,-70,-103,-109,-97,-101,-116,-30,-116,-69,-106,-105,-107,-108,-111,-100,-99,-116,-34,-34,-33,-32,]),'INT':([0,2,6,9,10,38,39,40,47,48,49,50,55,88,116,118,148,261,],[-130,-79,14,14,-79,-79,-152,-78,-9,-11,-10,-16,-79,-55,-79,14,-79,-79,]),'DOUBLE':([0,2,6,9,10,38,39,40,47,48,49,50,55,88,116,118,148,261,],[-130,-79,15,15,-79,-79,-152,-78,-9,-11,-10,-16,-79,-55,-79,15,-79,-79,]),'DIVIDE_EQUALS':([65,102,128,135,165,209,],[-67,-68,-152,-70,199,-69,]),'BOOL':([0,2,6,9,10,38,39,40,47,48,49,50,55,88,116,118,148,261,],[-130,-79,16,16,-79,-79,-152,-78,-9,-11,-10,-16,-79,-55,-79,16,-79,-79,]),'STRING_CONSTANT':([52,58,67,68,75,79,106,113,121,129,134,136,138,139,141,143,144,151,152,153,154,155,156,159,161,162,164,166,171,172,173,174,176,177,178,187,188,189,190,191,192,193,194,196,197,198,199,200,201,218,226,227,228,229,230,243,246,],[83,83,83,-147,83,-115,83,83,150,-115,83,-110,-110,-110,-110,-102,-102,83,-90,-90,-90,-90,-90,-90,-85,-85,83,83,83,83,83,83,83,83,83,-91,-93,-96,-94,-95,-92,83,83,-76,-76,-76,-76,-76,83,83,-75,-74,-72,-73,-71,83,83,]),'TIMES_EQUALS':([65,102,128,135,165,209,],[-67,-68,-152,-70,198,-69,]),'LEFT_BRACKET':([35,41,65,76,102,109,111,128,],[-122,52,-67,-122,-68,-122,134,134,]),'MAIN':([0,2,3,7,8,10,18,19,20,21,26,27,28,39,40,47,48,49,50,89,179,180,181,219,221,259,278,283,287,],[-130,11,11,-152,11,-152,-21,-22,-23,11,-7,-6,-8,-152,-78,-9,-11,-10,-16,-39,-44,-46,-45,-47,-43,-48,-49,-51,-50,]),'OR':([72,73,74,76,77,78,80,81,82,83,85,93,94,109,110,111,112,114,125,126,133,135,137,140,145,146,157,158,175,186,203,205,209,210,211,212,213,214,215,216,233,234,248,249,265,],[-121,-114,-150,-122,-118,-104,-119,-98,-151,-120,-112,-87,-81,-122,-113,-152,-152,-152,-152,162,-117,-70,-103,-109,-97,-101,-86,-89,-116,-88,-30,-116,-69,-106,-105,-107,-108,-111,-100,-99,-116,-34,-34,-33,-32,]),'MOD':([72,73,74,76,77,78,80,82,83,85,109,110,111,112,133,135,175,203,205,209,214,233,234,248,249,265,],[-121,-114,-150,-122,-118,-104,-119,-151,-120,-112,-122,-113,-152,141,-117,-70,-116,-30,-116,-69,-111,-116,-34,-34,-33,-32,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'relational_operator':([125,],[151,]),'post_function':([55,],[89,]),'push_assignment':([196,197,198,199,200,],[226,227,228,229,230,]),'parameters':([55,261,],[87,274,]),'increase_call_arguments':([202,],[232,]),'post_variables':([10,116,148,],[27,147,183,]),'finish_params':([260,],[273,]),'init':([0,],[1,]),'program':([2,],[4,]),'factor':([52,58,67,106,113,134,151,164,166,171,172,173,174,176,177,178,193,194,201,218,243,246,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'main':([2,3,8,21,],[5,12,22,31,]),'finish_evaluating':([2,10,38,55,116,148,261,],[6,6,6,88,6,6,88,]),'read':([46,62,147,183,206,236,286,],[61,61,61,61,61,61,61,]),'post_term':([112,],[137,]),'print_mod':([92,],[123,]),'condition':([46,62,147,183,206,236,286,],[66,66,66,66,66,66,66,]),'term':([52,58,67,106,113,134,151,164,166,171,172,173,174,176,177,178,193,194,201,218,243,246,],[81,81,81,81,81,81,81,81,81,210,211,212,213,81,81,81,81,81,81,81,81,81,]),'push_end':([107,],[132,]),'post_void_return':([182,],[219,]),'push_term':([136,138,139,141,],[171,172,173,174,]),'register_function':([37,],[45,]),'identifier':([30,42,184,],[36,36,222,]),'push_paren':([79,129,],[113,166,]),'BOOL_CONSTANT':([52,58,67,75,106,113,134,151,164,166,171,172,173,174,176,177,178,193,194,201,218,243,246,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'call_function':([46,52,58,62,67,106,113,134,147,151,164,166,171,172,173,174,176,177,178,183,193,194,201,206,218,236,243,246,286,],[56,73,73,56,73,73,73,73,56,73,73,73,73,73,73,73,73,73,73,56,73,73,73,56,73,56,73,73,56,]),'reset_scope':([220,257,270,279,],[241,271,277,284,]),'push_relop':([152,153,154,155,156,159,],[187,188,189,190,191,192,]),'post_parameters':([242,],[260,]),'start_evaluating':([40,273,],[50,280,]),'post_print':([92,],[120,]),'fill_goto':([11,208,235,288,],[29,237,250,289,]),'for':([46,62,147,183,206,236,286,],[60,60,60,60,60,60,60,]),'post_exp':([114,],[145,]),'assignment':([46,62,147,183,206,236,286,],[64,64,64,64,64,64,64,]),'print':([46,62,147,183,206,236,286,],[63,63,63,63,63,63,63,]),'push_exp':([143,144,],[176,177,]),'set_type':([17,25,149,],[30,32,184,]),'inter_declaration':([30,42,],[34,54,]),'void_return':([147,183,],[181,181,]),'pop_paren':([175,205,233,],[214,234,248,]),'push_gotoF':([130,131,],[167,168,]),'assignment_operator':([165,],[201,]),'expression':([58,67,106,113,151,166,178,193,194,201,218,246,],[94,94,94,94,186,94,94,94,94,94,94,94,]),'pop_exp':([81,],[114,]),'block':([46,62,147,183,206,236,286,],[70,99,182,182,235,254,288,]),'optional_eol':([39,132,167,207,282,],[47,169,206,236,286,]),'post_functions':([7,],[18,]),'pop_term':([78,],[112,]),'required_eol':([33,34,39,56,61,63,64,66,71,86,117,132,167,207,218,238,241,258,271,277,282,284,],[38,40,48,90,96,100,101,104,108,116,148,48,48,48,239,256,259,272,278,283,48,287,]),'push_goto':([0,276,],[2,282,]),'post_arguments':([232,],[245,]),'validate_function_call':([65,76,],[103,103,]),'post_cycle':([168,275,],[208,281,]),'post_cond':([126,],[160,]),'func_return':([147,183,],[179,221,]),'post_call_function':([166,],[203,]),'validate_var':([65,],[102,]),'push_cycle':([68,263,],[106,275,]),'process_variable':([35,76,109,],[41,111,111,]),'empty':([7,10,36,39,41,62,92,111,112,114,116,125,126,128,132,148,167,207,232,242,250,282,],[20,28,43,49,53,97,124,135,140,146,28,158,163,135,49,28,49,49,247,262,266,49,]),'function':([2,7,8,],[7,7,7,]),'statement':([46,62,147,183,206,236,286,],[62,62,62,62,62,62,62,]),'pre_variables':([2,10,38,116,148,],[8,26,46,26,26,]),'else':([235,],[252,]),'value_return':([147,183,],[180,180,]),'create_return':([217,240,],[238,258,]),'cycle_declaration':([36,],[44,]),'declaration':([2,10,38,116,148,],[10,10,10,10,10,]),'validate_call_arguments':([234,248,],[249,265,]),'init_var':([195,],[225,]),'push_op_and_or':([161,162,],[193,194,]),'fill_goto_else':([253,],[268,]),'while':([46,62,147,183,206,236,286,],[69,69,69,69,69,69,69,]),'post_expression':([125,],[157,]),'loop':([46,62,147,183,206,236,286,],[71,71,71,71,71,71,71,]),'set_main_scope':([29,],[33,]),'cond':([58,67,106,113,166,178,193,194,201,218,246,],[92,105,131,142,202,217,223,224,231,240,202,]),'functions':([2,7,8,],[3,19,21,]),'pop_op_and_or':([94,],[126,]),'arguments':([166,246,],[204,264,]),'pop_relop':([93,],[125,]),'exp':([52,58,67,106,113,134,151,164,166,176,177,178,193,194,201,218,243,246,],[84,93,93,93,93,170,93,195,93,215,216,93,93,93,93,93,263,93,]),'post_condition':([235,],[251,]),'print_post_mod':([150,],[185,]),'post_identifier':([41,],[51,]),'pop_assignment':([231,],[244,]),'post_block':([62,],[98,]),'func_types':([9,],[25,]),'types':([6,9,118,],[17,24,149,]),'create_pending_goto':([237,281,],[255,285,]),'update_function_parameters':([222,],[242,]),'array_notation':([111,128,],[133,165,]),'add_var':([95,],[127,]),'push_var':([102,],[128,]),'start_params':([88,],[118,]),'print_default':([92,],[122,]),'variable_constant':([52,58,67,75,106,113,134,151,164,166,171,172,173,174,176,177,178,193,194,201,218,243,246,],[85,85,85,110,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> push_goto program','init',2,'p_init','parser.py',25),
  ('program -> pre_variables functions main','program',3,'p_program','parser.py',28),
  ('program -> functions main','program',2,'p_program','parser.py',29),
  ('program -> pre_variables main','program',2,'p_program','parser.py',30),
  ('program -> main','program',1,'p_program','parser.py',31),
  ('pre_variables -> declaration post_variables','pre_variables',2,'p_pre_variables','parser.py',37),
  ('post_variables -> pre_variables','post_variables',1,'p_post_variables','parser.py',40),
  ('post_variables -> empty','post_variables',1,'p_post_variables','parser.py',41),
  ('required_eol -> EOL optional_eol','required_eol',2,'p_required_eol','parser.py',45),
  ('optional_eol -> empty','optional_eol',1,'p_optional_eol','parser.py',48),
  ('optional_eol -> required_eol','optional_eol',1,'p_optional_eol','parser.py',49),
  ('types -> INT','types',1,'p_types','parser.py',53),
  ('types -> DOUBLE','types',1,'p_types','parser.py',54),
  ('types -> STRING','types',1,'p_types','parser.py',55),
  ('types -> BOOL','types',1,'p_types','parser.py',56),
  ('declaration -> finish_evaluating types set_type inter_declaration required_eol start_evaluating','declaration',6,'p_declaration','parser.py',61),
  ('set_type -> <empty>','set_type',0,'p_set_type','parser.py',64),
  ('inter_declaration -> identifier cycle_declaration','inter_declaration',2,'p_inter_declaration','parser.py',67),
  ('cycle_declaration -> COMMA inter_declaration','cycle_declaration',2,'p_cycle_declaration','parser.py',70),
  ('cycle_declaration -> empty','cycle_declaration',1,'p_cycle_declaration','parser.py',71),
  ('functions -> function post_functions','functions',2,'p_functions','parser.py',75),
  ('post_functions -> functions','post_functions',1,'p_post_functions','parser.py',78),
  ('post_functions -> empty','post_functions',1,'p_post_functions','parser.py',79),
  ('main -> MAIN fill_goto set_main_scope required_eol pre_variables block END_MAIN push_end optional_eol','main',9,'p_main','parser.py',83),
  ('push_end -> <empty>','push_end',0,'p_push_end','parser.py',86),
  ('set_main_scope -> <empty>','set_main_scope',0,'p_set_main_scope','parser.py',90),
  ('block -> statement post_block','block',2,'p_block','parser.py',97),
  ('post_block -> block','post_block',1,'p_post_block','parser.py',100),
  ('post_block -> empty','post_block',1,'p_post_block','parser.py',101),
  ('call_function -> ID validate_function_call LEFT_PARENTHESIS push_paren post_call_function','call_function',5,'p_call_function','parser.py',105),
  ('validate_function_call -> <empty>','validate_function_call',0,'p_validate_function_call','parser.py',109),
  ('post_call_function -> arguments RIGHT_PARENTHESIS pop_paren validate_call_arguments','post_call_function',4,'p_post_call_function','parser.py',117),
  ('post_call_function -> RIGHT_PARENTHESIS pop_paren validate_call_arguments','post_call_function',3,'p_post_call_function','parser.py',118),
  ('validate_call_arguments -> <empty>','validate_call_arguments',0,'p_validate_call_arguments','parser.py',121),
  ('arguments -> cond increase_call_arguments post_arguments','arguments',3,'p_arguments','parser.py',132),
  ('increase_call_arguments -> <empty>','increase_call_arguments',0,'p_increase_call_arguments','parser.py',136),
  ('post_arguments -> COMMA arguments','post_arguments',2,'p_post_arguments','parser.py',144),
  ('post_arguments -> empty','post_arguments',1,'p_post_arguments','parser.py',145),
  ('function -> FUNC func_types set_type ID register_function LEFT_PARENTHESIS post_function','function',7,'p_function','parser.py',149),
  ('func_types -> types','func_types',1,'p_func_types','parser.py',152),
  ('func_types -> VOID','func_types',1,'p_func_types','parser.py',153),
  ('register_function -> <empty>','register_function',0,'p_register_function','parser.py',159),
  ('post_function -> parameters RIGHT_PARENTHESIS required_eol post_variables func_return','post_function',5,'p_post_function','parser.py',169),
  ('post_function -> RIGHT_PARENTHESIS required_eol post_variables func_return','post_function',4,'p_post_function','parser.py',170),
  ('func_return -> void_return','func_return',1,'p_func_return','parser.py',173),
  ('func_return -> value_return','func_return',1,'p_func_return','parser.py',174),
  ('void_return -> block post_void_return','void_return',2,'p_void_return','parser.py',177),
  ('post_void_return -> END reset_scope required_eol','post_void_return',3,'p_post_void_return','parser.py',180),
  ('post_void_return -> RETURN required_eol END reset_scope required_eol','post_void_return',5,'p_post_void_return','parser.py',181),
  ('value_return -> block RETURN cond create_return required_eol END reset_scope required_eol','value_return',8,'p_value_return','parser.py',184),
  ('value_return -> RETURN cond create_return required_eol END reset_scope required_eol','value_return',7,'p_value_return','parser.py',185),
  ('create_return -> <empty>','create_return',0,'p_create_return','parser.py',188),
  ('reset_scope -> <empty>','reset_scope',0,'p_reset_scope','parser.py',193),
  ('parameters -> finish_evaluating start_params types set_type identifier update_function_parameters post_parameters finish_params start_evaluating','parameters',9,'p_parameters','parser.py',199),
  ('start_params -> <empty>','start_params',0,'p_start_params','parser.py',202),
  ('finish_params -> <empty>','finish_params',0,'p_finish_params','parser.py',206),
  ('update_function_parameters -> <empty>','update_function_parameters',0,'p_update_function_parameters','parser.py',211),
  ('post_parameters -> COMMA parameters','post_parameters',2,'p_post_parameters','parser.py',215),
  ('post_parameters -> empty','post_parameters',1,'p_post_parameters','parser.py',216),
  ('statement -> assignment required_eol','statement',2,'p_statement','parser.py',220),
  ('statement -> condition required_eol','statement',2,'p_statement','parser.py',221),
  ('statement -> print required_eol','statement',2,'p_statement','parser.py',222),
  ('statement -> read required_eol','statement',2,'p_statement','parser.py',223),
  ('statement -> loop required_eol','statement',2,'p_statement','parser.py',224),
  ('statement -> call_function required_eol','statement',2,'p_statement','parser.py',225),
  ('assignment -> ID validate_var push_var array_notation assignment_operator cond pop_assignment','assignment',7,'p_assignment','parser.py',230),
  ('validate_var -> <empty>','validate_var',0,'p_validate_var','parser.py',233),
  ('push_var -> <empty>','push_var',0,'p_push_var','parser.py',237),
  ('array_notation -> LEFT_BRACKET exp RIGHT_BRACKET','array_notation',3,'p_array_notation','parser.py',246),
  ('array_notation -> empty','array_notation',1,'p_array_notation','parser.py',247),
  ('assignment_operator -> EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',251),
  ('assignment_operator -> TIMES_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',252),
  ('assignment_operator -> DIVIDE_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',253),
  ('assignment_operator -> PLUS_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',254),
  ('assignment_operator -> MINUS_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',255),
  ('push_assignment -> <empty>','push_assignment',0,'p_push_assignment','parser.py',258),
  ('pop_assignment -> <empty>','pop_assignment',0,'p_pop_assignment','parser.py',262),
  ('start_evaluating -> <empty>','start_evaluating',0,'p_start_evaluating','parser.py',268),
  ('finish_evaluating -> <empty>','finish_evaluating',0,'p_finish_evaluating','parser.py',272),
  ('cond -> expression pop_op_and_or post_cond','cond',3,'p_cond','parser.py',277),
  ('pop_op_and_or -> <empty>','pop_op_and_or',0,'p_pop_op_and_or','parser.py',280),
  ('post_cond -> AND push_op_and_or cond','post_cond',3,'p_post_cond','parser.py',285),
  ('post_cond -> OR push_op_and_or cond','post_cond',3,'p_post_cond','parser.py',286),
  ('post_cond -> empty','post_cond',1,'p_post_cond','parser.py',287),
  ('push_op_and_or -> <empty>','push_op_and_or',0,'p_push_op_and_or','parser.py',290),
  ('expression -> exp pop_relop post_expression','expression',3,'p_expression','parser.py',295),
  ('pop_relop -> <empty>','pop_relop',0,'p_pop_relop','parser.py',298),
  ('post_expression -> relational_operator expression','post_expression',2,'p_post_expression','parser.py',304),
  ('post_expression -> empty','post_expression',1,'p_post_expression','parser.py',305),
  ('push_relop -> <empty>','push_relop',0,'p_push_relop','parser.py',308),
  ('relational_operator -> LESS push_relop','relational_operator',2,'p_relational_operator','parser.py',313),
  ('relational_operator -> GREATER push_relop','relational_operator',2,'p_relational_operator','parser.py',314),
  ('relational_operator -> GREATER_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',315),
  ('relational_operator -> LESS_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',316),
  ('relational_operator -> EQUALS_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',317),
  ('relational_operator -> NOT_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',318),
  ('exp -> term pop_exp post_exp','exp',3,'p_exp','parser.py',322),
  ('pop_exp -> <empty>','pop_exp',0,'p_pop_exp','parser.py',325),
  ('post_exp -> PLUS push_exp exp','post_exp',3,'p_post_exp','parser.py',330),
  ('post_exp -> MINUS push_exp exp','post_exp',3,'p_post_exp','parser.py',331),
  ('post_exp -> empty','post_exp',1,'p_post_exp','parser.py',332),
  ('push_exp -> <empty>','push_exp',0,'p_push_exp','parser.py',335),
  ('term -> factor pop_term post_term','term',3,'p_term','parser.py',340),
  ('pop_term -> <empty>','pop_term',0,'p_pop_term','parser.py',343),
  ('post_term -> TIMES push_term term','post_term',3,'p_post_term','parser.py',349),
  ('post_term -> DIVIDE push_term term','post_term',3,'p_post_term','parser.py',350),
  ('post_term -> PERCENTAGE push_term term','post_term',3,'p_post_term','parser.py',351),
  ('post_term -> MOD push_term term','post_term',3,'p_post_term','parser.py',352),
  ('post_term -> empty','post_term',1,'p_post_term','parser.py',353),
  ('push_term -> <empty>','push_term',0,'p_push_term','parser.py',356),
  ('factor -> LEFT_PARENTHESIS push_paren cond RIGHT_PARENTHESIS pop_paren','factor',5,'p_factor','parser.py',361),
  ('factor -> variable_constant','factor',1,'p_factor','parser.py',362),
  ('factor -> MINUS variable_constant','factor',2,'p_factor','parser.py',363),
  ('factor -> call_function','factor',1,'p_factor','parser.py',364),
  ('push_paren -> <empty>','push_paren',0,'p_push_paren','parser.py',367),
  ('pop_paren -> <empty>','pop_paren',0,'p_pop_paren','parser.py',371),
  ('variable_constant -> ID process_variable array_notation','variable_constant',3,'p_variable_constant','parser.py',376),
  ('variable_constant -> INT_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',377),
  ('variable_constant -> DOUBLE_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',378),
  ('variable_constant -> STRING_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',379),
  ('variable_constant -> BOOL_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',380),
  ('process_variable -> <empty>','process_variable',0,'p_process_variable','parser.py',393),
  ('condition -> IF cond COLON push_gotoF optional_eol block post_condition END','condition',8,'p_condition','parser.py',404),
  ('push_gotoF -> <empty>','push_gotoF',0,'p_push_gotoF','parser.py',407),
  ('fill_goto -> <empty>','fill_goto',0,'p_fill_goto','parser.py',411),
  ('post_condition -> else','post_condition',1,'p_post_condition','parser.py',416),
  ('post_condition -> fill_goto empty','post_condition',2,'p_post_condition','parser.py',417),
  ('else -> ELSE fill_goto_else COLON push_goto optional_eol block fill_goto','else',7,'p_else','parser.py',421),
  ('fill_goto_else -> <empty>','fill_goto_else',0,'p_fill_goto_else','parser.py',424),
  ('push_goto -> <empty>','push_goto',0,'p_push_goto','parser.py',428),
  ('print -> PRINT cond post_print','print',3,'p_print','parser.py',433),
  ('post_print -> print_mod','post_print',1,'p_post_print','parser.py',436),
  ('post_print -> print_default','post_print',1,'p_post_print','parser.py',437),
  ('print_mod -> COMMA STRING_CONSTANT print_post_mod','print_mod',3,'p_print_mod','parser.py',440),
  ('print_post_mod -> <empty>','print_post_mod',0,'p_print_post_mod','parser.py',444),
  ('print_default -> empty','print_default',1,'p_print_default','parser.py',448),
  ('read -> READ LEFT_PARENTHESIS RIGHT_PARENTHESIS','read',3,'p_read','parser.py',453),
  ('identifier -> ID process_variable post_identifier','identifier',3,'p_identifier','parser.py',457),
  ('post_identifier -> LEFT_BRACKET exp RIGHT_BRACKET','post_identifier',3,'p_post_identifier','parser.py',460),
  ('post_identifier -> empty','post_identifier',1,'p_post_identifier','parser.py',461),
  ('loop -> for','loop',1,'p_loop','parser.py',465),
  ('loop -> while','loop',1,'p_loop','parser.py',466),
  ('for -> FOR ID add_var FROM exp init_var TO exp push_cycle post_cycle create_pending_goto','for',11,'p_for','parser.py',470),
  ('add_var -> <empty>','add_var',0,'p_add_var','parser.py',473),
  ('init_var -> <empty>','init_var',0,'p_init_var','parser.py',479),
  ('while -> WHILE push_cycle cond push_gotoF post_cycle fill_goto create_pending_goto','while',7,'p_while','parser.py',484),
  ('push_cycle -> <empty>','push_cycle',0,'p_push_cycle','parser.py',487),
  ('create_pending_goto -> <empty>','create_pending_goto',0,'p_create_pending_goto','parser.py',491),
  ('post_cycle -> COLON optional_eol block END','post_cycle',4,'p_post_cycle','parser.py',496),
  ('BOOL_CONSTANT -> TRUE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',499),
  ('BOOL_CONSTANT -> FALSE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',500),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',503),
]
