
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '179E467C1EF5D99EF985D3714326BBC4'
    
_lr_action_items = {'RETURN':([5,8,10,16,17,18,22,24,26,30,33,34,39,40,41,42,43,44,45,47,49,52,53,54,56,57,58,60,61,62,64,65,68,69,72,74,75,76,84,86,89,92,95,96,98,104,106,108,111,114,115,117,119,123,124,130,134,135,136,137,138,139,140,142,143,144,145,153,159,160,161,163,171,174,],[-99,-99,-99,-30,-28,-31,-87,-89,-84,-86,-29,-37,-90,-99,-34,-35,-32,-99,-33,-91,-36,-75,-70,-97,-73,-72,-99,-99,-98,-74,-71,-68,-99,-99,-99,-9,-11,-10,-69,-61,-66,-57,-60,-88,-38,-48,-50,-44,-47,-95,-80,-82,-92,-12,-14,156,-63,-62,-64,-65,-67,-58,-59,-49,-45,-46,-83,-13,-85,-96,-81,-93,-76,-94,]),'LESS':([8,22,24,44,52,53,54,56,57,58,60,61,62,64,65,68,84,86,89,92,95,96,123,124,134,135,136,137,138,139,140,153,],[-99,-87,-89,-99,-75,-70,-97,-73,-72,-99,-99,-98,-74,-71,-68,100,-69,-61,-66,-57,-60,-88,-12,-14,-63,-62,-64,-65,-67,-58,-59,-13,]),'READ':([5,8,10,11,16,17,18,22,24,26,30,33,34,39,40,41,42,43,44,45,47,49,52,53,54,56,57,58,60,61,62,64,65,68,69,72,82,84,86,89,92,95,96,98,104,106,108,111,113,114,115,117,119,123,124,125,126,134,135,136,137,138,139,140,142,143,144,145,153,159,160,161,163,171,172,174,],[-99,-99,-99,35,-30,-28,-31,-87,-89,-84,-86,-29,-37,-90,35,-34,-35,-32,-99,-33,-91,-36,-75,-70,-97,-73,-72,-99,-99,-98,-74,-71,-68,-99,-99,-99,35,-69,-61,-66,-57,-60,-88,-38,-48,-50,-44,-47,35,-95,-80,-82,-92,-12,-14,35,35,-63,-62,-64,-65,-67,-58,-59,-49,-45,-46,-83,-13,-85,-96,-81,-93,-76,35,-94,]),'RIGHT_BRACKET':([8,22,24,44,52,53,54,56,57,58,60,61,62,63,64,65,84,86,89,92,95,96,97,123,124,134,135,136,137,138,139,140,153,],[-99,-87,-89,-99,-75,-70,-97,-73,-72,-99,-99,-98,-74,96,-71,-68,-69,-61,-66,-57,-60,-88,141,-12,-14,-63,-62,-64,-65,-67,-58,-59,-13,]),'EOL':([8,9,22,24,44,52,53,54,56,57,58,60,61,62,64,65,67,68,69,84,86,89,92,95,96,104,106,108,111,112,123,124,134,135,136,137,138,139,140,141,142,143,144,147,153,],[-99,30,-87,-89,-99,-75,-70,-97,-73,-72,-99,-99,-98,-74,-71,-68,98,-99,-99,-69,-61,-66,-57,-60,-88,-48,-50,-44,-47,145,-12,-14,-63,-62,-64,-65,-67,-58,-59,159,-49,-45,-46,161,-13,]),'EQUALS_EQUALS':([8,22,24,44,52,53,54,56,57,58,60,61,62,64,65,68,84,86,89,92,95,96,123,124,134,135,136,137,138,139,140,153,],[-99,-87,-89,-99,-75,-70,-97,-73,-72,-99,-99,-98,-74,-71,-68,103,-69,-61,-66,-57,-60,-88,-12,-14,-63,-62,-64,-65,-67,-58,-59,-13,]),'WHILE':([5,8,10,11,16,17,18,22,24,26,30,33,34,39,40,41,42,43,44,45,47,49,52,53,54,56,57,58,60,61,62,64,65,68,69,72,82,84,86,89,92,95,96,98,104,106,108,111,113,114,115,117,119,123,124,125,126,134,135,136,137,138,139,140,142,143,144,145,153,159,160,161,163,171,172,174,],[-99,-99,-99,36,-30,-28,-31,-87,-89,-84,-86,-29,-37,-90,36,-34,-35,-32,-99,-33,-91,-36,-75,-70,-97,-73,-72,-99,-99,-98,-74,-71,-68,-99,-99,-99,36,-69,-61,-66,-57,-60,-88,-38,-48,-50,-44,-47,36,-95,-80,-82,-92,-12,-14,36,36,-63,-62,-64,-65,-67,-58,-59,-49,-45,-46,-83,-13,-85,-96,-81,-93,-76,36,-94,]),'PRINT':([5,8,10,11,16,17,18,22,24,26,30,33,34,39,40,41,42,43,44,45,47,49,52,53,54,56,57,58,60,61,62,64,65,68,69,72,82,84,86,89,92,95,96,98,104,106,108,111,113,114,115,117,119,123,124,125,126,134,135,136,137,138,139,140,142,143,144,145,153,159,160,161,163,171,172,174,],[-99,-99,-99,37,-30,-28,-31,-87,-89,-84,-86,-29,-37,-90,37,-34,-35,-32,-99,-33,-91,-36,-75,-70,-97,-73,-72,-99,-99,-98,-74,-71,-68,-99,-99,-99,37,-69,-61,-66,-57,-60,-88,-38,-48,-50,-44,-47,37,-95,-80,-82,-92,-12,-14,37,37,-63,-62,-64,-65,-67,-58,-59,-49,-45,-46,-83,-13,-85,-96,-81,-93,-76,37,-94,]),'GREATER_EQUALS':([8,22,24,44,52,53,54,56,57,58,60,61,62,64,65,68,84,86,89,92,95,96,123,124,134,135,136,137,138,139,140,153,],[-99,-87,-89,-99,-75,-70,-97,-73,-72,-99,-99,-98,-74,-71,-68,105,-69,-61,-66,-57,-60,-88,-12,-14,-63,-62,-64,-65,-67,-58,-59,-13,]),'MINUS':([8,22,23,24,25,27,28,29,31,32,36,37,44,46,52,53,54,56,57,58,59,60,61,62,64,65,66,77,84,85,86,87,88,89,90,93,94,96,99,100,101,102,103,105,107,109,110,118,123,124,134,135,136,137,138,151,153,156,162,],[-99,-87,55,-89,-43,-40,-41,-39,55,-42,55,55,-99,55,-75,-70,-97,-73,-72,-99,55,94,-98,-74,-71,-68,55,55,-69,55,-61,55,55,-66,55,55,55,-88,-52,-51,-56,-54,-55,-53,55,55,55,55,-12,-14,-63,-62,-64,-65,-67,55,-13,55,55,]),'MINUS_EQUALS':([8,9,22,24,44,96,],[-99,25,-87,-89,-99,-88,]),'END_MAIN':([5,8,10,16,17,18,22,24,26,30,33,34,39,40,41,42,43,44,45,47,48,49,52,53,54,56,57,58,60,61,62,64,65,68,69,72,74,75,76,84,86,89,92,95,96,98,104,106,108,111,114,115,117,119,123,124,134,135,136,137,138,139,140,142,143,144,145,153,159,160,161,163,171,174,],[-99,-99,-99,-30,-28,-31,-87,-89,-84,-86,-29,-37,-90,-99,-34,-35,-32,-99,-33,-91,79,-36,-75,-70,-97,-73,-72,-99,-99,-98,-74,-71,-68,-99,-99,-99,-9,-11,-10,-69,-61,-66,-57,-60,-88,-38,-48,-50,-44,-47,-95,-80,-82,-92,-12,-14,-63,-62,-64,-65,-67,-58,-59,-49,-45,-46,-83,-13,-85,-96,-81,-93,-76,-94,]),'NOT_EQUALS':([8,22,24,44,52,53,54,56,57,58,60,61,62,64,65,68,84,86,89,92,95,96,123,124,134,135,136,137,138,139,140,153,],[-99,-87,-89,-99,-75,-70,-97,-73,-72,-99,-99,-98,-74,-71,-68,101,-69,-61,-66,-57,-60,-88,-12,-14,-63,-62,-64,-65,-67,-58,-59,-13,]),'DOUBLE_CONSTANT':([23,25,27,28,29,31,32,36,37,46,55,59,66,77,85,87,88,90,93,94,99,100,101,102,103,105,107,109,110,118,151,156,162,],[56,-43,-40,-41,-39,56,-42,56,56,56,56,56,56,56,56,56,56,56,56,56,-52,-51,-56,-54,-55,-53,56,56,56,56,56,56,56,]),'LESS_EQUALS':([8,22,24,44,52,53,54,56,57,58,60,61,62,64,65,68,84,86,89,92,95,96,123,124,134,135,136,137,138,139,140,153,],[-99,-87,-89,-99,-75,-70,-97,-73,-72,-99,-99,-98,-74,-71,-68,102,-69,-61,-66,-57,-60,-88,-12,-14,-63,-62,-64,-65,-67,-58,-59,-13,]),'PLUS':([8,22,24,44,52,53,54,56,57,58,60,61,62,64,65,84,86,89,96,123,124,134,135,136,137,138,153,],[-99,-87,-89,-99,-75,-70,-97,-73,-72,-99,93,-98,-74,-71,-68,-69,-61,-66,-88,-12,-14,-63,-62,-64,-65,-67,-13,]),'TO':([8,22,24,44,52,53,54,56,57,58,60,61,62,64,65,84,86,89,92,95,96,123,124,134,135,136,137,138,139,140,148,153,],[-99,-87,-89,-99,-75,-70,-97,-73,-72,-99,-99,-98,-74,-71,-68,-69,-61,-66,-57,-60,-88,-12,-14,-63,-62,-64,-65,-67,-58,-59,162,-13,]),'INT_CONSTANT':([23,25,27,28,29,31,32,36,37,46,55,59,66,77,85,87,88,90,93,94,99,100,101,102,103,105,107,109,110,118,151,156,162,],[57,-43,-40,-41,-39,57,-42,57,57,57,57,57,57,57,57,57,57,57,57,57,-52,-51,-56,-54,-55,-53,57,57,57,57,57,57,57,]),'COLON':([8,22,24,44,52,53,54,56,57,58,60,61,62,64,65,68,69,71,78,84,86,89,92,95,96,104,106,108,111,123,124,134,135,136,137,138,139,140,142,143,144,149,153,168,170,],[-99,-87,-89,-99,-75,-70,-97,-73,-72,-99,-99,-98,-74,-71,-68,-99,-99,113,125,-69,-61,-66,-57,-60,-88,-48,-50,-44,-47,-12,-14,-63,-62,-64,-65,-67,-58,-59,-49,-45,-46,113,-13,172,113,]),'COMMA':([8,22,24,44,52,53,54,56,57,58,60,61,62,64,65,68,69,72,83,84,86,89,92,95,96,104,106,108,111,121,123,124,134,135,136,137,138,139,140,142,143,144,153,],[-99,-87,-89,-99,-75,-70,-97,-73,-72,-99,-99,-98,-74,-71,-68,-99,-99,116,132,-69,-61,-66,-57,-60,-88,-48,-50,-44,-47,151,-12,-14,-63,-62,-64,-65,-67,-58,-59,-49,-45,-46,-13,]),'PERCENTAGE':([8,22,24,44,52,53,54,56,57,58,61,62,64,65,84,96,123,124,138,153,],[-99,-87,-89,-99,-75,-70,-97,-73,-72,88,-98,-74,-71,-68,-69,-88,-12,-14,-67,-13,]),'PLUS_EQUALS':([8,9,22,24,44,96,],[-99,32,-87,-89,-99,-88,]),'LEFT_PARENTHESIS':([19,23,25,27,28,29,31,32,35,36,37,44,46,59,66,77,85,87,88,90,93,94,99,100,101,102,103,105,107,109,110,118,151,156,162,],[50,59,-43,-40,-41,-39,59,-42,70,59,59,77,59,59,59,59,59,59,59,59,59,59,-52,-51,-56,-54,-55,-53,59,59,59,59,59,59,59,]),'$end':([2,3,12,21,51,79,],[0,-4,-2,-3,-1,-8,]),'END':([5,8,10,16,17,18,22,24,26,30,33,34,39,40,41,42,43,44,45,47,49,52,53,54,56,57,58,60,61,62,64,65,68,69,72,74,75,76,84,86,89,92,95,96,98,104,106,108,111,114,115,117,119,123,124,130,134,135,136,137,138,139,140,142,143,144,145,146,153,154,159,160,161,163,165,166,167,169,171,174,175,],[-99,-99,-99,-30,-28,-31,-87,-89,-84,-86,-29,-37,-90,-99,-34,-35,-32,-99,-33,-91,-36,-75,-70,-97,-73,-72,-99,-99,-98,-74,-71,-68,-99,-99,-99,-9,-11,-10,-69,-61,-66,-57,-60,-88,-38,-48,-50,-44,-47,-95,-80,-82,-92,-12,-14,157,-63,-62,-64,-65,-67,-58,-59,-49,-45,-46,-83,160,-13,-99,-85,-96,-81,-93,171,-77,-78,173,-76,-94,-79,]),'DIVIDE':([8,22,24,44,52,53,54,56,57,58,61,62,64,65,84,96,123,124,138,153,],[-99,-87,-89,-99,-75,-70,-97,-73,-72,85,-98,-74,-71,-68,-69,-88,-12,-14,-67,-13,]),'FOR':([5,8,10,11,16,17,18,22,24,26,30,33,34,39,40,41,42,43,44,45,47,49,52,53,54,56,57,58,60,61,62,64,65,68,69,72,82,84,86,89,92,95,96,98,104,106,108,111,113,114,115,117,119,123,124,125,126,134,135,136,137,138,139,140,142,143,144,145,153,159,160,161,163,171,172,174,],[-99,-99,-99,38,-30,-28,-31,-87,-89,-84,-86,-29,-37,-90,38,-34,-35,-32,-99,-33,-91,-36,-75,-70,-97,-73,-72,-99,-99,-98,-74,-71,-68,-99,-99,-99,38,-69,-61,-66,-57,-60,-88,-38,-48,-50,-44,-47,38,-95,-80,-82,-92,-12,-14,38,38,-63,-62,-64,-65,-67,-58,-59,-49,-45,-46,-83,-13,-85,-96,-81,-93,-76,38,-94,]),'EQUALS':([8,9,22,24,44,96,],[-99,29,-87,-89,-99,-88,]),'ELSE':([5,8,10,16,17,18,22,24,26,30,33,34,39,40,41,42,43,44,45,47,49,52,53,54,56,57,58,60,61,62,64,65,68,69,72,74,75,76,84,86,89,92,95,96,98,104,106,108,111,114,115,117,119,123,124,134,135,136,137,138,139,140,142,143,144,145,153,154,159,160,161,163,171,174,],[-99,-99,-99,-30,-28,-31,-87,-89,-84,-86,-29,-37,-90,-99,-34,-35,-32,-99,-33,-91,-36,-75,-70,-97,-73,-72,-99,-99,-98,-74,-71,-68,-99,-99,-99,-9,-11,-10,-69,-61,-66,-57,-60,-88,-38,-48,-50,-44,-47,-95,-80,-82,-92,-12,-14,-63,-62,-64,-65,-67,-58,-59,-49,-45,-46,-83,-13,168,-85,-96,-81,-93,-76,-94,]),'FUNC':([0,4,5,7,10,16,17,18,26,30,33,81,98,127,128,129,155,157,159,173,],[6,6,-99,6,-99,-30,-28,-31,-84,-86,-29,-18,-38,-20,-22,-21,-19,-23,-85,-24,]),'IN':([8,22,24,73,96,],[-99,-87,-89,120,-88,]),'FALSE':([23,25,27,28,29,31,32,36,37,46,55,59,66,77,85,87,88,90,93,94,99,100,101,102,103,105,107,109,110,118,151,156,162,],[61,-43,-40,-41,-39,61,-42,61,61,61,61,61,61,61,61,61,61,61,61,61,-52,-51,-56,-54,-55,-53,61,61,61,61,61,61,61,]),'RIGHT_PARENTHESIS':([8,22,24,44,50,52,53,54,56,57,58,60,61,62,64,65,68,69,70,77,80,83,84,86,89,91,92,95,96,104,106,108,111,121,122,123,124,131,133,134,135,136,137,138,139,140,142,143,144,150,152,153,158,164,],[-99,-87,-89,-99,82,-75,-70,-97,-73,-72,-99,-99,-98,-74,-71,-68,-99,-99,112,124,126,-99,-69,-61,-66,138,-57,-60,-88,-48,-50,-44,-47,-99,153,-12,-14,-25,-27,-63,-62,-64,-65,-67,-58,-59,-49,-45,-46,-15,-17,-13,-26,-16,]),'TIMES':([8,22,24,44,52,53,54,56,57,58,61,62,64,65,84,96,123,124,138,153,],[-99,-87,-89,-99,-75,-70,-97,-73,-72,87,-98,-74,-71,-68,-69,-88,-12,-14,-67,-13,]),'ID':([0,5,6,8,10,11,16,17,18,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,49,50,52,53,54,55,56,57,58,59,60,61,62,64,65,66,68,69,72,77,82,84,85,86,87,88,89,90,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,117,118,119,120,123,124,125,126,132,134,135,136,137,138,139,140,142,143,144,145,151,153,156,159,160,161,162,163,171,172,174,],[8,8,19,-99,8,44,-30,-28,-31,-87,44,-89,-43,-84,-40,-41,-39,-86,44,-42,-29,-37,44,44,8,-90,44,-34,-35,-32,-99,-33,44,-91,-36,8,-75,-70,-97,8,-73,-72,-99,44,-99,-98,-74,-71,-68,44,-99,-99,-99,44,44,-69,44,-61,44,44,-66,44,-57,44,44,-60,-88,-38,-52,-51,-56,-54,-55,-48,-53,-50,44,-44,44,44,-47,44,-95,-80,-82,44,-92,8,-12,-14,44,44,8,-63,-62,-64,-65,-67,-58,-59,-49,-45,-46,-83,44,-13,44,-85,-96,-81,44,-93,-76,44,-94,]),'TRUE':([23,25,27,28,29,31,32,36,37,46,55,59,66,77,85,87,88,90,93,94,99,100,101,102,103,105,107,109,110,118,151,156,162,],[54,-43,-40,-41,-39,54,-42,54,54,54,54,54,54,54,54,54,54,54,54,54,-52,-51,-56,-54,-55,-53,54,54,54,54,54,54,54,]),'IF':([5,8,10,11,16,17,18,22,24,26,30,33,34,39,40,41,42,43,44,45,47,49,52,53,54,56,57,58,60,61,62,64,65,68,69,72,82,84,86,89,92,95,96,98,104,106,108,111,113,114,115,117,119,123,124,125,126,134,135,136,137,138,139,140,142,143,144,145,153,159,160,161,163,171,172,174,],[-99,-99,-99,46,-30,-28,-31,-87,-89,-84,-86,-29,-37,-90,46,-34,-35,-32,-99,-33,-91,-36,-75,-70,-97,-73,-72,-99,-99,-98,-74,-71,-68,-99,-99,-99,46,-69,-61,-66,-57,-60,-88,-38,-48,-50,-44,-47,46,-95,-80,-82,-92,-12,-14,46,46,-63,-62,-64,-65,-67,-58,-59,-49,-45,-46,-83,-13,-85,-96,-81,-93,-76,46,-94,]),'AND':([8,22,24,44,52,53,54,56,57,58,60,61,62,64,65,68,69,84,86,89,92,95,96,104,106,123,124,134,135,136,137,138,139,140,142,153,],[-99,-87,-89,-99,-75,-70,-97,-73,-72,-99,-99,-98,-74,-71,-68,-99,109,-69,-61,-66,-57,-60,-88,-48,-50,-12,-14,-63,-62,-64,-65,-67,-58,-59,-49,-13,]),'FROM':([8,22,24,73,96,],[-99,-87,-89,118,-88,]),'GREATER':([8,22,24,44,52,53,54,56,57,58,60,61,62,64,65,68,84,86,89,92,95,96,123,124,134,135,136,137,138,139,140,153,],[-99,-87,-89,-99,-75,-70,-97,-73,-72,-99,-99,-98,-74,-71,-68,99,-69,-61,-66,-57,-60,-88,-12,-14,-63,-62,-64,-65,-67,-58,-59,-13,]),'DIVIDE_EQUALS':([8,9,22,24,44,96,],[-99,28,-87,-89,-99,-88,]),'STRING_CONSTANT':([23,25,27,28,29,31,32,36,37,46,55,59,66,77,85,87,88,90,93,94,99,100,101,102,103,105,107,109,110,116,118,151,156,162,],[62,-43,-40,-41,-39,62,-42,62,62,62,62,62,62,62,62,62,62,62,62,62,-52,-51,-56,-54,-55,-53,62,62,62,147,62,62,62,62,]),'TIMES_EQUALS':([8,9,22,24,44,96,],[-99,27,-87,-89,-99,-88,]),'LEFT_BRACKET':([8,29,44,],[23,66,23,]),'MAIN':([0,1,4,5,7,10,13,14,15,16,17,18,20,26,30,33,81,98,127,128,129,155,157,159,173,],[11,11,-99,-99,11,-99,-5,-6,-7,-30,-28,-31,11,-84,-86,-29,-18,-38,-20,-22,-21,-19,-23,-85,-24,]),'OR':([8,22,24,44,52,53,54,56,57,58,60,61,62,64,65,68,69,84,86,89,92,95,96,104,106,123,124,134,135,136,137,138,139,140,142,153,],[-99,-87,-89,-99,-75,-70,-97,-73,-72,-99,-99,-98,-74,-71,-68,-99,110,-69,-61,-66,-57,-60,-88,-48,-50,-12,-14,-63,-62,-64,-65,-67,-58,-59,-49,-13,]),'MOD':([8,22,24,44,52,53,54,56,57,58,61,62,64,65,84,96,123,124,138,153,],[-99,-87,-89,-99,-75,-70,-97,-73,-72,90,-98,-74,-71,-68,-69,-88,-12,-14,-67,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'post_functions':([4,],[13,]),'relational_operator':([68,],[107,]),'call_function':([11,23,31,36,37,40,46,59,66,77,82,85,87,88,90,93,94,107,109,110,113,118,125,126,151,156,162,172,],[34,53,53,53,53,34,53,53,53,53,34,53,53,53,53,53,53,53,53,53,34,53,34,34,53,53,53,34,]),'BOOL_CONSTANT':([23,31,36,37,46,55,59,66,77,85,87,88,90,93,94,107,109,110,118,151,156,162,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'post_print':([72,],[115,]),'post_parameters':([83,],[131,]),'cond':([31,36,37,46,59,77,109,110,151,156,],[67,71,72,78,91,121,143,144,121,169,]),'loop':([11,40,82,113,125,126,172,],[49,49,49,49,49,49,49,]),'post_function':([50,],[81,]),'post_cycle':([71,149,170,],[114,163,174,]),'post_cond':([69,],[108,]),'functions':([0,4,7,],[1,14,20,]),'call_parameters':([77,151,],[122,164,]),'post_condition':([154,],[165,]),'for':([11,40,82,113,125,126,172,],[39,39,39,39,39,39,39,]),'func_return':([82,126,],[127,155,]),'post_exp':([60,],[92,]),'program':([0,],[2,]),'statement':([11,40,82,113,125,126,172,],[40,40,40,40,40,40,40,]),'factor':([23,31,36,37,46,59,66,77,85,87,88,90,93,94,107,109,110,118,151,156,162,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'print':([11,40,82,113,125,126,172,],[41,41,41,41,41,41,41,]),'main':([0,1,7,20,],[3,12,21,51,]),'post_variable':([5,10,],[17,33,]),'empty':([4,5,8,10,40,44,58,60,68,69,72,83,121,154,],[15,18,24,18,75,24,89,95,106,111,117,133,152,167,]),'function':([0,4,7,],[4,4,4,]),'post_for':([73,],[119,]),'read':([11,40,82,113,125,126,172,],[42,42,42,42,42,42,42,]),'assignment':([0,5,10,11,40,82,113,125,126,172,],[5,5,5,5,5,5,5,5,5,5,]),'post_term':([58,],[86,]),'else':([154,],[166,]),'value_return':([82,126,],[128,128,]),'post_identifier':([8,44,],[22,22,]),'void_return':([82,126,],[129,129,]),'variable':([0,5,10,11,40,82,113,125,126,172,],[7,16,16,43,43,43,43,43,43,43,]),'variable_constant':([23,31,36,37,46,55,59,66,77,85,87,88,90,93,94,107,109,110,118,151,156,162,],[65,65,65,65,65,84,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'post_block':([40,],[74,]),'condition':([11,40,82,113,125,126,172,],[45,45,45,45,45,45,45,]),'term':([23,31,36,37,46,59,66,77,85,87,88,90,93,94,107,109,110,118,151,156,162,],[60,60,60,60,60,60,60,60,134,135,136,137,60,60,60,60,60,60,60,60,60,]),'post_list':([9,],[26,]),'parameters':([50,132,],[80,158,]),'list':([0,5,10,11,40,82,113,125,126,172,],[10,10,10,10,10,10,10,10,10,10,]),'post_call_parameters':([121,],[150,]),'while':([11,40,82,113,125,126,172,],[47,47,47,47,47,47,47,]),'post_expression':([68,],[104,]),'assignment_operator':([9,],[31,]),'exp':([23,31,36,37,46,59,66,77,93,94,107,109,110,118,151,156,162,],[63,68,68,68,68,68,97,68,139,140,142,68,68,148,68,68,170,]),'identifier':([0,5,10,11,23,31,36,37,38,40,46,50,55,59,66,77,82,85,87,88,90,93,94,107,109,110,113,118,120,125,126,132,151,156,162,172,],[9,9,9,9,64,64,64,64,73,9,64,83,64,64,64,64,9,64,64,64,64,64,64,64,64,64,9,64,149,9,9,83,64,64,64,9,]),'expression':([31,36,37,46,59,77,109,110,151,156,],[69,69,69,69,69,69,69,69,69,69,]),'post_call_function':([77,],[123,]),'block':([11,40,82,113,125,126,172,],[48,76,130,146,154,130,175,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> variable functions main','program',3,'p_program','parser.py',19),
  ('program -> functions main','program',2,'p_program','parser.py',20),
  ('program -> variable main','program',2,'p_program','parser.py',21),
  ('program -> main','program',1,'p_program','parser.py',22),
  ('functions -> function post_functions','functions',2,'p_functions','parser.py',25),
  ('post_functions -> functions','post_functions',1,'p_post_functions','parser.py',29),
  ('post_functions -> empty','post_functions',1,'p_post_functions','parser.py',30),
  ('main -> MAIN block END_MAIN','main',3,'p_main','parser.py',34),
  ('block -> statement post_block','block',2,'p_block','parser.py',38),
  ('post_block -> block','post_block',1,'p_post_block','parser.py',41),
  ('post_block -> empty','post_block',1,'p_post_block','parser.py',42),
  ('call_function -> ID LEFT_PARENTHESIS post_call_function','call_function',3,'p_call_function','parser.py',46),
  ('post_call_function -> call_parameters RIGHT_PARENTHESIS','post_call_function',2,'p_post_call_function','parser.py',49),
  ('post_call_function -> RIGHT_PARENTHESIS','post_call_function',1,'p_post_call_function','parser.py',50),
  ('call_parameters -> cond post_call_parameters','call_parameters',2,'p_call_parameters','parser.py',54),
  ('post_call_parameters -> COMMA call_parameters','post_call_parameters',2,'p_post_call_parameters','parser.py',57),
  ('post_call_parameters -> empty','post_call_parameters',1,'p_post_call_parameters','parser.py',58),
  ('function -> FUNC ID LEFT_PARENTHESIS post_function','function',4,'p_function','parser.py',62),
  ('post_function -> parameters RIGHT_PARENTHESIS func_return','post_function',3,'p_post_function','parser.py',65),
  ('post_function -> RIGHT_PARENTHESIS func_return','post_function',2,'p_post_function','parser.py',66),
  ('func_return -> void_return','func_return',1,'p_func_return','parser.py',69),
  ('func_return -> value_return','func_return',1,'p_func_return','parser.py',70),
  ('void_return -> block END','void_return',2,'p_void_return','parser.py',73),
  ('value_return -> block RETURN cond END','value_return',4,'p_value_return','parser.py',76),
  ('parameters -> identifier post_parameters','parameters',2,'p_parameters','parser.py',80),
  ('post_parameters -> COMMA parameters','post_parameters',2,'p_post_parameters','parser.py',83),
  ('post_parameters -> empty','post_parameters',1,'p_post_parameters','parser.py',84),
  ('variable -> assignment post_variable','variable',2,'p_variable','parser.py',88),
  ('variable -> list post_variable','variable',2,'p_variable','parser.py',89),
  ('post_variable -> variable','post_variable',1,'p_post_variable','parser.py',92),
  ('post_variable -> empty','post_variable',1,'p_post_variable','parser.py',93),
  ('statement -> variable','statement',1,'p_statement','parser.py',97),
  ('statement -> condition','statement',1,'p_statement','parser.py',98),
  ('statement -> print','statement',1,'p_statement','parser.py',99),
  ('statement -> read','statement',1,'p_statement','parser.py',100),
  ('statement -> loop','statement',1,'p_statement','parser.py',101),
  ('statement -> call_function','statement',1,'p_statement','parser.py',102),
  ('assignment -> identifier assignment_operator cond EOL','assignment',4,'p_assignment','parser.py',108),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',112),
  ('assignment_operator -> TIMES_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',113),
  ('assignment_operator -> DIVIDE_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',114),
  ('assignment_operator -> PLUS_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',115),
  ('assignment_operator -> MINUS_EQUALS','assignment_operator',1,'p_assignment_operator','parser.py',116),
  ('cond -> expression post_cond','cond',2,'p_cond','parser.py',120),
  ('post_cond -> AND cond','post_cond',2,'p_post_cond','parser.py',123),
  ('post_cond -> OR cond','post_cond',2,'p_post_cond','parser.py',124),
  ('post_cond -> empty','post_cond',1,'p_post_cond','parser.py',125),
  ('expression -> exp post_expression','expression',2,'p_expression','parser.py',129),
  ('post_expression -> relational_operator exp','post_expression',2,'p_post_expression','parser.py',132),
  ('post_expression -> empty','post_expression',1,'p_post_expression','parser.py',133),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',137),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',138),
  ('relational_operator -> GREATER_EQUALS','relational_operator',1,'p_relational_operator','parser.py',139),
  ('relational_operator -> LESS_EQUALS','relational_operator',1,'p_relational_operator','parser.py',140),
  ('relational_operator -> EQUALS_EQUALS','relational_operator',1,'p_relational_operator','parser.py',141),
  ('relational_operator -> NOT_EQUALS','relational_operator',1,'p_relational_operator','parser.py',142),
  ('exp -> term post_exp','exp',2,'p_exp','parser.py',146),
  ('post_exp -> PLUS exp','post_exp',2,'p_post_exp','parser.py',149),
  ('post_exp -> MINUS exp','post_exp',2,'p_post_exp','parser.py',150),
  ('post_exp -> empty','post_exp',1,'p_post_exp','parser.py',151),
  ('term -> factor post_term','term',2,'p_term','parser.py',155),
  ('post_term -> TIMES term','post_term',2,'p_post_term','parser.py',158),
  ('post_term -> DIVIDE term','post_term',2,'p_post_term','parser.py',159),
  ('post_term -> PERCENTAGE term','post_term',2,'p_post_term','parser.py',160),
  ('post_term -> MOD term','post_term',2,'p_post_term','parser.py',161),
  ('post_term -> empty','post_term',1,'p_post_term','parser.py',162),
  ('factor -> LEFT_PARENTHESIS cond RIGHT_PARENTHESIS','factor',3,'p_factor','parser.py',166),
  ('factor -> variable_constant','factor',1,'p_factor','parser.py',167),
  ('factor -> MINUS variable_constant','factor',2,'p_factor','parser.py',168),
  ('factor -> call_function','factor',1,'p_factor','parser.py',169),
  ('variable_constant -> identifier','variable_constant',1,'p_variable_constant','parser.py',173),
  ('variable_constant -> INT_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',174),
  ('variable_constant -> DOUBLE_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',175),
  ('variable_constant -> STRING_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',176),
  ('variable_constant -> BOOL_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',177),
  ('condition -> IF cond COLON block post_condition END','condition',6,'p_condition','parser.py',181),
  ('post_condition -> else','post_condition',1,'p_post_condition','parser.py',185),
  ('post_condition -> empty','post_condition',1,'p_post_condition','parser.py',186),
  ('else -> ELSE COLON block','else',3,'p_else','parser.py',190),
  ('print -> PRINT cond post_print','print',3,'p_print','parser.py',194),
  ('post_print -> COMMA STRING_CONSTANT EOL','post_print',3,'p_post_print','parser.py',197),
  ('post_print -> empty','post_print',1,'p_post_print','parser.py',198),
  ('read -> READ LEFT_PARENTHESIS RIGHT_PARENTHESIS EOL','read',4,'p_read','parser.py',202),
  ('list -> identifier post_list','list',2,'p_list','parser.py',206),
  ('post_list -> EQUALS LEFT_BRACKET exp RIGHT_BRACKET EOL','post_list',5,'p_post_list','parser.py',209),
  ('post_list -> EOL','post_list',1,'p_post_list','parser.py',210),
  ('identifier -> ID post_identifier','identifier',2,'p_identifier','parser.py',214),
  ('post_identifier -> LEFT_BRACKET exp RIGHT_BRACKET','post_identifier',3,'p_post_identifier','parser.py',217),
  ('post_identifier -> empty','post_identifier',1,'p_post_identifier','parser.py',218),
  ('loop -> for','loop',1,'p_loop','parser.py',222),
  ('loop -> while','loop',1,'p_loop','parser.py',223),
  ('for -> FOR identifier post_for','for',3,'p_for','parser.py',227),
  ('post_for -> IN identifier post_cycle','post_for',3,'p_post_for','parser.py',230),
  ('post_for -> FROM exp TO exp post_cycle','post_for',5,'p_post_for','parser.py',231),
  ('while -> WHILE cond post_cycle','while',3,'p_while','parser.py',235),
  ('post_cycle -> COLON block END','post_cycle',3,'p_post_cycle','parser.py',239),
  ('BOOL_CONSTANT -> TRUE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',242),
  ('BOOL_CONSTANT -> FALSE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',243),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',246),
]
