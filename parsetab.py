
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '3082F09F9ECF842742CFD47E4BAE6EEC'
    
_lr_action_items = {'RETURN':([8,24,25,26,28,33,34,35,46,56,62,81,82,83,84,85,86,89,93,94,160,194,195,222,223,],[-139,-6,-5,-7,-139,-8,-10,-9,-139,-70,-57,-55,-26,-24,-25,-54,-52,-53,-56,-15,-139,218,-139,231,218,]),'LESS':([64,65,67,69,70,71,73,74,75,76,77,79,104,105,106,107,109,110,124,126,128,131,136,137,154,156,168,190,197,198,199,200,201,202,203,204,],[-113,-106,-137,-114,-110,-96,-111,-90,-138,-112,-79,-104,-114,-105,-139,-139,-139,139,-109,-62,-95,-101,-89,-93,-27,-30,-108,-29,-61,-98,-97,-99,-100,-103,-92,-91,]),'READ':([8,24,25,26,28,32,33,34,35,46,56,62,81,85,86,89,93,94,115,157,160,191,192,194,195,216,223,249,256,260,],[-139,-6,-5,-7,-139,41,-8,-10,-9,41,-70,-57,-55,-54,-52,-53,-56,-15,-116,-139,-139,41,-139,41,-139,41,41,-121,-139,41,]),'VOID':([7,],[21,]),'RIGHT_BRACKET':([64,65,67,69,70,71,73,74,75,76,79,104,105,106,107,109,118,124,126,128,131,136,137,154,156,163,168,190,197,198,199,200,201,202,203,204,],[-113,-106,-137,-114,-110,-96,-111,-90,-138,-112,-104,-114,-105,-139,-139,-139,159,-109,-62,-95,-101,-89,-93,-27,-30,197,-108,-29,-61,-98,-97,-99,-100,-103,-92,-91,]),'EOL':([9,28,36,37,38,40,44,45,47,48,50,53,55,57,59,60,64,65,66,67,69,70,71,73,74,75,76,77,78,79,92,95,97,98,100,101,103,104,105,106,107,109,110,111,115,119,123,124,126,128,131,136,137,144,145,147,150,154,156,157,159,161,168,171,190,192,193,197,198,199,200,201,202,203,204,205,206,213,217,225,226,229,230,231,233,240,243,244,248,249,250,251,256,257,258,259,263,],[28,28,28,-114,-139,28,-130,28,28,28,28,-131,28,-139,-19,-17,-113,-106,-139,-137,-114,-110,-96,-111,-90,-138,-112,-79,-73,-104,28,-127,-129,-18,-126,-122,-124,-114,-105,-139,-139,-139,-139,-139,-116,28,-123,-109,-62,-95,-101,-89,-93,-78,-81,-72,-76,-27,-30,28,-128,28,-108,-80,-29,28,-117,-61,-98,-97,-99,-100,-103,-92,-91,-74,-75,-69,-135,-132,-58,-133,28,28,-47,-136,28,28,-115,-121,-47,-47,28,28,28,-47,28,]),'EQUALS_EQUALS':([64,65,67,69,70,71,73,74,75,76,77,79,104,105,106,107,109,110,124,126,128,131,136,137,154,156,168,190,197,198,199,200,201,202,203,204,],[-113,-106,-137,-114,-110,-96,-111,-90,-138,-112,-79,-104,-114,-105,-139,-139,-139,143,-109,-62,-95,-101,-89,-93,-27,-30,-108,-29,-61,-98,-97,-99,-100,-103,-92,-91,]),'WHILE':([8,24,25,26,28,32,33,34,35,46,56,62,81,85,86,89,93,94,115,157,160,191,192,194,195,216,223,249,256,260,],[-139,-6,-5,-7,-139,52,-8,-10,-9,52,-70,-57,-55,-54,-52,-53,-56,-15,-116,-139,-139,52,-139,52,-139,52,52,-121,-139,52,]),'PRINT':([8,24,25,26,28,32,33,34,35,46,56,62,81,85,86,89,93,94,115,157,160,191,192,194,195,216,223,249,256,260,],[-139,-6,-5,-7,-139,42,-8,-10,-9,42,-70,-57,-55,-54,-52,-53,-56,-15,-116,-139,-139,42,-139,42,-139,42,42,-121,-139,42,]),'TRUE':([42,51,52,68,72,91,96,108,112,114,125,127,129,130,132,134,135,138,139,140,141,142,143,146,148,149,164,165,166,167,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,208,209,210,211,212,218,231,],[67,67,-134,67,-107,67,67,67,67,67,67,-102,-102,-102,-102,-94,-94,67,-82,-82,-82,-82,-82,-82,-77,-77,67,67,67,67,67,67,-83,-85,-88,-86,-87,-84,67,67,67,-68,-68,-68,-68,-68,67,67,-67,-66,-64,-65,-63,67,67,]),'MINUS':([42,51,52,64,65,67,69,70,71,72,73,74,75,76,79,91,96,104,105,106,107,108,109,112,114,124,125,126,127,128,129,130,131,132,134,135,138,139,140,141,142,143,146,148,149,154,156,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,190,197,198,199,200,201,202,208,209,210,211,212,218,231,],[68,68,-134,-113,-106,-137,-114,-110,-96,-107,-111,-90,-138,-112,-104,68,68,-114,-105,-139,-139,68,134,68,68,-109,68,-62,-102,-95,-102,-102,-101,-102,-94,-94,68,-82,-82,-82,-82,-82,-82,-77,-77,-27,-30,68,68,68,68,-108,68,68,-83,-85,-88,-86,-87,-84,68,68,68,-68,-68,-68,-68,-68,68,68,-29,-61,-98,-97,-99,-100,-103,-67,-66,-64,-65,-63,68,68,]),'DIVIDE':([64,65,67,69,70,71,73,75,76,79,104,105,106,107,124,126,154,156,168,190,197,202,],[-113,-106,-137,-114,-110,-96,-111,-138,-112,-104,-114,-105,-139,127,-109,-62,-27,-30,-108,-29,-61,-103,]),'MINUS_EQUALS':([49,87,113,126,152,197,],[-59,-60,-139,-62,181,-61,]),'END_MAIN':([28,33,34,35,46,54,62,81,82,83,84,85,86,89,93,],[-139,-8,-10,-9,-139,92,-57,-55,-26,-24,-25,-54,-52,-53,-56,]),'NOT_EQUALS':([64,65,67,69,70,71,73,74,75,76,77,79,104,105,106,107,109,110,124,126,128,131,136,137,154,156,168,190,197,198,199,200,201,202,203,204,],[-113,-106,-137,-114,-110,-96,-111,-90,-138,-112,-79,-104,-114,-105,-139,-139,-139,141,-109,-62,-95,-101,-89,-93,-27,-30,-108,-29,-61,-98,-97,-99,-100,-103,-92,-91,]),'DOUBLE_CONSTANT':([42,51,52,68,72,91,96,108,112,114,125,127,129,130,132,134,135,138,139,140,141,142,143,146,148,149,164,165,166,167,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,208,209,210,211,212,218,231,],[73,73,-134,73,-107,73,73,73,73,73,73,-102,-102,-102,-102,-94,-94,73,-82,-82,-82,-82,-82,-82,-77,-77,73,73,73,73,73,73,-83,-85,-88,-86,-87,-84,73,73,73,-68,-68,-68,-68,-68,73,73,-67,-66,-64,-65,-63,73,73,]),'GREATER_EQUALS':([64,65,67,69,70,71,73,74,75,76,77,79,104,105,106,107,109,110,124,126,128,131,136,137,154,156,168,190,197,198,199,200,201,202,203,204,],[-113,-106,-137,-114,-110,-96,-111,-90,-138,-112,-79,-104,-114,-105,-139,-139,-139,140,-109,-62,-95,-101,-89,-93,-27,-30,-108,-29,-61,-98,-97,-99,-100,-103,-92,-91,]),'LESS_EQUALS':([64,65,67,69,70,71,73,74,75,76,77,79,104,105,106,107,109,110,124,126,128,131,136,137,154,156,168,190,197,198,199,200,201,202,203,204,],[-113,-106,-137,-114,-110,-96,-111,-90,-138,-112,-79,-104,-114,-105,-139,-139,-139,142,-109,-62,-95,-101,-89,-93,-27,-30,-108,-29,-61,-98,-97,-99,-100,-103,-92,-91,]),'PLUS':([64,65,67,69,70,71,73,74,75,76,79,104,105,106,107,109,124,126,128,131,154,156,168,190,197,198,199,200,201,202,],[-113,-106,-137,-114,-110,-96,-111,-90,-138,-112,-104,-114,-105,-139,-139,135,-109,-62,-95,-101,-27,-30,-108,-29,-61,-98,-97,-99,-100,-103,]),'TO':([64,65,67,69,70,71,73,74,75,76,79,104,105,106,107,109,124,126,128,131,136,137,151,154,156,168,190,197,198,199,200,201,202,203,204,],[-113,-106,-137,-114,-110,-96,-111,-90,-138,-112,-104,-114,-105,-139,-139,-139,-109,-62,-95,-101,-89,-93,180,-27,-30,-108,-29,-61,-98,-97,-99,-100,-103,-92,-91,]),'INT_CONSTANT':([42,51,52,68,72,91,96,108,112,114,125,127,129,130,132,134,135,138,139,140,141,142,143,146,148,149,164,165,166,167,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,208,209,210,211,212,218,231,],[70,70,-134,70,-107,70,70,70,70,70,70,-102,-102,-102,-102,-94,-94,70,-82,-82,-82,-82,-82,-82,-77,-77,70,70,70,70,70,70,-83,-85,-88,-86,-87,-84,70,70,70,-68,-68,-68,-68,-68,70,70,-67,-66,-64,-65,-63,70,70,]),'COMMA':([37,38,57,64,65,66,67,69,70,71,73,74,75,76,77,78,79,95,97,104,105,106,107,109,110,111,124,126,128,131,136,137,144,145,147,150,153,154,156,159,168,171,190,197,198,199,200,201,202,203,204,205,206,224,235,],[-114,58,-139,-113,-106,102,-137,-114,-110,-96,-111,-90,-138,-112,-79,-73,-104,-127,-129,-114,-105,-139,-139,-139,-139,-139,-109,-62,-95,-101,-89,-93,-78,-81,-72,-76,188,-27,-30,-128,-108,-80,-29,-61,-98,-97,-99,-100,-103,-92,-91,-74,-75,-49,246,]),'COLON':([64,65,67,69,70,71,73,74,75,76,77,78,79,90,104,105,106,107,109,110,111,116,124,126,128,131,136,137,144,145,147,150,154,156,158,168,171,190,197,198,199,200,201,202,203,204,205,206,207,239,],[-113,-106,-137,-114,-110,-96,-111,-90,-138,-112,-79,-73,-104,115,-114,-105,-139,-139,-139,-139,-139,-116,-109,-62,-95,-101,-89,-93,-78,-81,-72,-76,-27,-30,192,-108,-80,-29,-61,-98,-97,-99,-100,-103,-92,-91,-74,-75,192,249,]),'PERCENTAGE':([64,65,67,69,70,71,73,75,76,79,104,105,106,107,124,126,154,156,168,190,197,202,],[-113,-106,-137,-114,-110,-96,-111,-138,-112,-104,-114,-105,-139,130,-109,-62,-27,-30,-108,-29,-61,-103,]),'PLUS_EQUALS':([49,87,113,126,152,197,],[-59,-60,-139,-62,182,-61,]),'LEFT_PARENTHESIS':([39,41,42,49,51,52,61,69,72,88,91,96,108,112,114,125,127,129,130,132,134,135,138,139,140,141,142,143,146,148,149,164,165,166,167,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,208,209,210,211,212,218,231,],[-37,63,72,-28,72,-134,99,-28,-107,114,72,72,72,72,72,72,-102,-102,-102,-102,-94,-94,72,-82,-82,-82,-82,-82,-82,-77,-77,72,72,72,72,72,72,-83,-85,-88,-86,-87,-84,72,72,72,-68,-68,-68,-68,-68,72,72,-67,-66,-64,-65,-63,72,72,]),'$end':([2,3,10,20,28,30,33,34,35,92,117,],[0,-4,-2,-3,-139,-1,-8,-10,-9,-139,-23,]),'END':([28,33,34,35,46,62,81,82,83,84,85,86,89,93,215,222,227,228,236,237,238,241,242,252,264,266,],[-139,-8,-10,-9,-139,-57,-55,-26,-24,-25,-54,-52,-53,-56,-117,233,-139,240,248,-118,-119,250,251,259,-117,-120,]),'STRING':([0,4,7,8,27,28,33,34,35,56,94,99,121,160,195,246,],[-71,11,11,-71,-71,-139,-8,-10,-9,-70,-15,-71,11,-71,-71,-71,]),'FOR':([8,24,25,26,28,32,33,34,35,46,56,62,81,85,86,89,93,94,115,157,160,191,192,194,195,216,223,249,256,260,],[-139,-6,-5,-7,-139,43,-8,-10,-9,43,-70,-57,-55,-54,-52,-53,-56,-15,-116,-139,-139,43,-139,43,-139,43,43,-121,-139,43,]),'EQUALS':([49,87,113,126,152,197,],[-59,-60,-139,-62,185,-61,]),'ELSE':([28,33,34,35,46,62,81,82,83,84,85,86,89,93,215,227,],[-139,-8,-10,-9,-139,-57,-55,-26,-24,-25,-54,-52,-53,-56,-117,239,]),'FUNC':([0,5,6,8,24,25,26,28,33,34,35,56,94,122,219,220,221,232,234,253,261,262,265,],[7,7,7,-139,-6,-5,-7,-139,-8,-10,-9,-70,-15,-34,-39,-41,-40,-42,-38,-43,-46,-44,-45,]),'FALSE':([42,51,52,68,72,91,96,108,112,114,125,127,129,130,132,134,135,138,139,140,141,142,143,146,148,149,164,165,166,167,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,208,209,210,211,212,218,231,],[75,75,-134,75,-107,75,75,75,75,75,75,-102,-102,-102,-102,-94,-94,75,-82,-82,-82,-82,-82,-82,-77,-77,75,75,75,75,75,75,-83,-85,-88,-86,-87,-84,75,75,75,-68,-68,-68,-68,-68,75,75,-67,-66,-64,-65,-63,75,75,]),'RIGHT_PARENTHESIS':([37,57,63,64,65,67,69,70,71,73,74,75,76,77,78,79,95,97,99,104,105,106,107,109,110,111,114,120,124,126,128,131,133,136,137,144,145,147,150,153,154,155,156,159,168,171,187,189,190,197,198,199,200,201,202,203,204,205,206,214,224,235,245,247,254,255,],[-114,-139,100,-113,-106,-137,-114,-110,-96,-111,-90,-138,-112,-79,-73,-104,-127,-129,119,-114,-105,-139,-139,-139,-139,-139,156,161,-109,-62,-95,-101,168,-89,-93,-78,-81,-72,-76,-139,-27,190,-30,-128,-108,-80,-31,-33,-29,-61,-98,-97,-99,-100,-103,-92,-91,-74,-75,-32,-49,-139,-70,-51,-48,-50,]),'TIMES':([64,65,67,69,70,71,73,75,76,79,104,105,106,107,124,126,154,156,168,190,197,202,],[-113,-106,-137,-114,-110,-96,-111,-138,-112,-104,-114,-105,-139,129,-109,-62,-27,-30,-108,-29,-61,-103,]),'ID':([8,11,12,13,14,15,21,22,23,24,25,26,28,29,31,32,33,34,35,42,43,46,51,52,56,58,62,68,72,81,85,86,89,91,93,94,96,108,112,114,115,125,127,129,130,132,134,135,138,139,140,141,142,143,146,148,149,157,160,162,164,165,166,167,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,191,192,194,195,196,208,209,210,211,212,216,218,223,231,249,256,260,],[-139,-13,-11,-12,-14,-16,-36,-35,-16,-6,-5,-7,-139,37,39,49,-8,-10,-9,69,37,49,69,-134,-70,37,-57,104,-107,-55,-54,-52,-53,69,-56,-15,69,69,69,69,-116,69,-102,-102,-102,-102,-94,-94,69,-82,-82,-82,-82,-82,-82,-77,-77,-139,-139,-16,69,69,69,69,69,69,-83,-85,-88,-86,-87,-84,69,69,69,-68,-68,-68,-68,-68,69,69,49,-139,49,-139,37,-67,-66,-64,-65,-63,49,69,49,69,-121,-139,49,]),'IF':([8,24,25,26,28,32,33,34,35,46,56,62,81,85,86,89,93,94,115,157,160,191,192,194,195,216,223,249,256,260,],[-139,-6,-5,-7,-139,51,-8,-10,-9,51,-70,-57,-55,-54,-52,-53,-56,-15,-116,-139,-139,51,-139,51,-139,51,51,-121,-139,51,]),'AND':([64,65,67,69,70,71,73,74,75,76,77,78,79,104,105,106,107,109,110,111,124,126,128,131,136,137,144,145,154,156,168,171,190,197,198,199,200,201,202,203,204,],[-113,-106,-137,-114,-110,-96,-111,-90,-138,-112,-79,-73,-104,-114,-105,-139,-139,-139,-139,148,-109,-62,-95,-101,-89,-93,-78,-81,-27,-30,-108,-80,-29,-61,-98,-97,-99,-100,-103,-92,-91,]),'FROM':([37,57,80,95,97,159,],[-114,-139,112,-127,-129,-128,]),'GREATER':([64,65,67,69,70,71,73,74,75,76,77,79,104,105,106,107,109,110,124,126,128,131,136,137,154,156,168,190,197,198,199,200,201,202,203,204,],[-113,-106,-137,-114,-110,-96,-111,-90,-138,-112,-79,-104,-114,-105,-139,-139,-139,146,-109,-62,-95,-101,-89,-93,-27,-30,-108,-29,-61,-98,-97,-99,-100,-103,-92,-91,]),'INT':([0,4,7,8,27,28,33,34,35,56,94,99,121,160,195,246,],[-71,12,12,-71,-71,-139,-8,-10,-9,-70,-15,-71,12,-71,-71,-71,]),'DOUBLE':([0,4,7,8,27,28,33,34,35,56,94,99,121,160,195,246,],[-71,13,13,-71,-71,-139,-8,-10,-9,-70,-15,-71,13,-71,-71,-71,]),'DIVIDE_EQUALS':([49,87,113,126,152,197,],[-59,-60,-139,-62,184,-61,]),'BOOL':([0,4,7,8,27,28,33,34,35,56,94,99,121,160,195,246,],[-71,14,14,-71,-71,-139,-8,-10,-9,-70,-15,-71,14,-71,-71,-71,]),'STRING_CONSTANT':([42,51,52,68,72,91,96,102,108,112,114,125,127,129,130,132,134,135,138,139,140,141,142,143,146,148,149,164,165,166,167,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,208,209,210,211,212,218,231,],[76,76,-134,76,-107,76,76,123,76,76,76,76,-102,-102,-102,-102,-94,-94,76,-82,-82,-82,-82,-82,-82,-77,-77,76,76,76,76,76,76,-83,-85,-88,-86,-87,-84,76,76,76,-68,-68,-68,-68,-68,76,76,-67,-66,-64,-65,-63,76,76,]),'TIMES_EQUALS':([49,87,113,126,152,197,],[-59,-60,-139,-62,183,-61,]),'LEFT_BRACKET':([37,49,57,69,87,104,106,113,],[-114,-59,96,-114,-60,-114,125,125,]),'MAIN':([0,1,5,6,8,16,17,18,19,24,25,26,28,33,34,35,56,94,122,219,220,221,232,234,253,261,262,265,],[9,9,-139,9,-139,-20,-21,-22,9,-6,-5,-7,-139,-8,-10,-9,-70,-15,-34,-39,-41,-40,-42,-38,-43,-46,-44,-45,]),'OR':([64,65,67,69,70,71,73,74,75,76,77,78,79,104,105,106,107,109,110,111,124,126,128,131,136,137,144,145,154,156,168,171,190,197,198,199,200,201,202,203,204,],[-113,-106,-137,-114,-110,-96,-111,-90,-138,-112,-79,-73,-104,-114,-105,-139,-139,-139,-139,149,-109,-62,-95,-101,-89,-93,-78,-81,-27,-30,-108,-80,-29,-61,-98,-97,-99,-100,-103,-92,-91,]),'MOD':([64,65,67,69,70,71,73,75,76,79,104,105,106,107,124,126,154,156,168,190,197,202,],[-113,-106,-137,-114,-110,-96,-111,-138,-112,-104,-114,-105,-139,132,-109,-62,-27,-30,-108,-29,-61,-103,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'push_goto':([249,],[256,]),'optional_eol':([28,92,157,192,256,],[33,117,191,216,260,]),'post_functions':([5,],[16,]),'post_call_function':([114,],[154,]),'relational_operator':([110,],[138,]),'call_function':([32,42,46,51,91,96,108,112,114,125,138,164,165,166,167,169,170,178,179,180,186,188,191,194,216,218,223,231,260,],[40,65,40,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,40,40,40,65,40,65,40,]),'reset_scope':([233,250,251,259,],[244,257,258,263,]),'BOOL_CONSTANT':([42,51,68,91,96,108,112,114,125,138,164,165,166,167,169,170,178,179,180,186,188,218,231,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'required_eol':([9,28,36,40,45,47,48,50,55,92,119,157,161,192,230,231,243,244,256,257,258,263,],[27,34,56,62,81,85,86,89,93,34,160,34,195,34,241,242,252,253,34,261,262,265,]),'push_relop':([139,140,141,142,143,146,],[172,173,174,175,176,177,]),'assignment_operator':([152,],[186,]),'post_function':([99,],[122,]),'validate_function_call':([49,69,],[88,88,]),'start_evaluating':([56,245,],[94,254,]),'cond':([42,51,91,108,114,178,179,186,188,218,231,],[66,90,116,133,153,205,206,213,153,230,243,]),'post_print':([66,],[101,]),'push_assignment':([181,182,183,184,185,],[208,209,210,211,212,]),'push_gotoF':([115,116,],[157,158,]),'post_cycle':([158,207,],[193,225,]),'post_cond':([111,],[147,]),'functions':([0,5,6,],[1,17,19,]),'pop_term':([71,],[107,]),'for':([32,46,191,194,216,223,260,],[44,44,44,44,44,44,44,]),'pop_op_and_or':([78,],[111,]),'pop_exp':([74,],[109,]),'validate_var':([49,],[87,]),'push_cycle':([52,],[91,]),'post_variables':([8,160,195,],[25,194,223,]),'read':([32,46,191,194,216,223,260,],[45,45,45,45,45,45,45,]),'program':([0,],[2,]),'push_var':([87,],[113,]),'condition':([32,46,191,194,216,223,260,],[50,50,50,50,50,50,50,]),'statement':([32,46,191,194,216,223,260,],[46,46,46,46,46,46,46,]),'factor':([42,51,91,96,108,112,114,125,138,164,165,166,167,169,170,178,179,180,186,188,218,231,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'print':([32,46,191,194,216,223,260,],[47,47,47,47,47,47,47,]),'main':([0,1,6,19,],[3,10,20,30,]),'finish_evaluating':([0,8,27,99,160,195,246,],[4,4,4,121,4,4,121,]),'empty':([5,8,28,38,46,57,66,92,106,107,109,110,111,113,153,157,160,192,195,227,235,256,],[18,26,35,59,82,97,103,35,126,131,137,145,150,126,189,35,26,35,26,238,247,35,]),'arguments':([114,188,],[155,214,]),'function':([0,5,6,],[5,5,5,]),'pop_relop':([77,],[110,]),'push_exp':([134,135,],[169,170,]),'process_variable':([37,69,104,],[57,106,106,]),'post_condition':([227,],[236,]),'pre_variables':([0,8,27,160,195,],[6,24,32,24,24,]),'assignment':([32,46,191,194,216,223,260,],[48,48,48,48,48,48,48,]),'fill_goto':([193,215,264,],[217,227,266,]),'post_term':([107,],[128,]),'set_type':([15,23,162,],[29,31,196,]),'value_return':([194,223,],[220,220,]),'push_op_and_or':([148,149,],[178,179,]),'inter_declaration':([29,58,],[36,98,]),'post_identifier':([57,],[95,]),'void_return':([194,223,],[221,221,]),'pop_assignment':([213,],[226,]),'cycle_declaration':([38,],[60,]),'declaration':([0,8,27,160,195,],[8,8,8,8,8,]),'variable_constant':([42,51,68,91,96,108,112,114,125,138,164,165,166,167,169,170,178,179,180,186,188,218,231,],[79,79,105,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'post_block':([46,],[83,]),'else':([227,],[237,]),'pop_paren':([168,],[202,]),'types':([4,7,121,],[15,22,162,]),'create_pending_goto':([217,],[229,]),'term':([42,51,91,96,108,112,114,125,138,164,165,166,167,169,170,178,179,180,186,188,218,231,],[74,74,74,74,74,74,74,74,74,198,199,200,201,74,74,74,74,74,74,74,74,74,]),'update_function_parameters':([224,],[235,]),'parameters':([99,246,],[120,255,]),'array_notation':([106,113,],[124,152,]),'post_arguments':([153,],[187,]),'post_void_return':([222,],[232,]),'post_parameters':([235,],[245,]),'push_term':([127,129,130,132,],[164,165,166,167,]),'func_return':([194,223,],[219,234,]),'while':([32,46,191,194,216,223,260,],[53,53,53,53,53,53,53,]),'register_function':([39,],[61,]),'post_expression':([110,],[144,]),'loop':([32,46,191,194,216,223,260,],[55,55,55,55,55,55,55,]),'exp':([42,51,91,96,108,112,114,125,138,169,170,178,179,180,186,188,218,231,],[77,77,77,118,77,151,77,163,77,203,204,77,77,207,77,77,77,77,]),'func_types':([7,],[23,]),'identifier':([29,43,58,196,],[38,80,38,224,]),'expression':([42,51,91,108,114,138,178,179,186,188,218,231,],[78,78,78,78,78,171,78,78,78,78,78,78,]),'post_exp':([109,],[136,]),'block':([32,46,191,194,216,223,260,],[54,84,215,222,228,222,264,]),'push_paren':([72,],[108,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> pre_variables functions main','program',3,'p_program','parser.py',24),
  ('program -> functions main','program',2,'p_program','parser.py',25),
  ('program -> pre_variables main','program',2,'p_program','parser.py',26),
  ('program -> main','program',1,'p_program','parser.py',27),
  ('pre_variables -> declaration post_variables','pre_variables',2,'p_pre_variables','parser.py',32),
  ('post_variables -> pre_variables','post_variables',1,'p_post_variables','parser.py',35),
  ('post_variables -> empty','post_variables',1,'p_post_variables','parser.py',36),
  ('required_eol -> EOL optional_eol','required_eol',2,'p_required_eol','parser.py',40),
  ('optional_eol -> empty','optional_eol',1,'p_optional_eol','parser.py',43),
  ('optional_eol -> required_eol','optional_eol',1,'p_optional_eol','parser.py',44),
  ('types -> INT','types',1,'p_types','parser.py',48),
  ('types -> DOUBLE','types',1,'p_types','parser.py',49),
  ('types -> STRING','types',1,'p_types','parser.py',50),
  ('types -> BOOL','types',1,'p_types','parser.py',51),
  ('declaration -> finish_evaluating types set_type inter_declaration required_eol start_evaluating','declaration',6,'p_declaration','parser.py',56),
  ('set_type -> <empty>','set_type',0,'p_set_type','parser.py',59),
  ('inter_declaration -> identifier cycle_declaration','inter_declaration',2,'p_inter_declaration','parser.py',62),
  ('cycle_declaration -> COMMA inter_declaration','cycle_declaration',2,'p_cycle_declaration','parser.py',65),
  ('cycle_declaration -> empty','cycle_declaration',1,'p_cycle_declaration','parser.py',66),
  ('functions -> function post_functions','functions',2,'p_functions','parser.py',70),
  ('post_functions -> functions','post_functions',1,'p_post_functions','parser.py',74),
  ('post_functions -> empty','post_functions',1,'p_post_functions','parser.py',75),
  ('main -> MAIN required_eol pre_variables block END_MAIN optional_eol','main',6,'p_main','parser.py',79),
  ('block -> statement post_block','block',2,'p_block','parser.py',83),
  ('post_block -> block','post_block',1,'p_post_block','parser.py',86),
  ('post_block -> empty','post_block',1,'p_post_block','parser.py',87),
  ('call_function -> ID validate_function_call LEFT_PARENTHESIS post_call_function','call_function',4,'p_call_function','parser.py',91),
  ('validate_function_call -> <empty>','validate_function_call',0,'p_validate_function_call','parser.py',95),
  ('post_call_function -> arguments RIGHT_PARENTHESIS','post_call_function',2,'p_post_call_function','parser.py',99),
  ('post_call_function -> RIGHT_PARENTHESIS','post_call_function',1,'p_post_call_function','parser.py',100),
  ('arguments -> cond post_arguments','arguments',2,'p_arguments','parser.py',104),
  ('post_arguments -> COMMA arguments','post_arguments',2,'p_post_arguments','parser.py',107),
  ('post_arguments -> empty','post_arguments',1,'p_post_arguments','parser.py',108),
  ('function -> FUNC func_types set_type ID register_function LEFT_PARENTHESIS post_function','function',7,'p_function','parser.py',112),
  ('func_types -> types','func_types',1,'p_func_types','parser.py',117),
  ('func_types -> VOID','func_types',1,'p_func_types','parser.py',118),
  ('register_function -> <empty>','register_function',0,'p_register_function','parser.py',124),
  ('post_function -> parameters RIGHT_PARENTHESIS required_eol post_variables func_return','post_function',5,'p_post_function','parser.py',131),
  ('post_function -> RIGHT_PARENTHESIS required_eol post_variables func_return','post_function',4,'p_post_function','parser.py',132),
  ('func_return -> void_return','func_return',1,'p_func_return','parser.py',135),
  ('func_return -> value_return','func_return',1,'p_func_return','parser.py',136),
  ('void_return -> block post_void_return','void_return',2,'p_void_return','parser.py',139),
  ('post_void_return -> END reset_scope required_eol','post_void_return',3,'p_post_void_return','parser.py',142),
  ('post_void_return -> RETURN required_eol END reset_scope required_eol','post_void_return',5,'p_post_void_return','parser.py',143),
  ('value_return -> block RETURN cond required_eol END reset_scope required_eol','value_return',7,'p_value_return','parser.py',146),
  ('value_return -> RETURN cond required_eol END reset_scope required_eol','value_return',6,'p_value_return','parser.py',147),
  ('reset_scope -> <empty>','reset_scope',0,'p_reset_scope','parser.py',150),
  ('parameters -> finish_evaluating types set_type identifier update_function_parameters post_parameters start_evaluating','parameters',7,'p_parameters','parser.py',155),
  ('update_function_parameters -> <empty>','update_function_parameters',0,'p_update_function_parameters','parser.py',159),
  ('post_parameters -> COMMA parameters','post_parameters',2,'p_post_parameters','parser.py',163),
  ('post_parameters -> empty','post_parameters',1,'p_post_parameters','parser.py',164),
  ('statement -> assignment required_eol','statement',2,'p_statement','parser.py',168),
  ('statement -> condition required_eol','statement',2,'p_statement','parser.py',169),
  ('statement -> print required_eol','statement',2,'p_statement','parser.py',170),
  ('statement -> read required_eol','statement',2,'p_statement','parser.py',171),
  ('statement -> loop required_eol','statement',2,'p_statement','parser.py',172),
  ('statement -> call_function required_eol','statement',2,'p_statement','parser.py',173),
  ('assignment -> ID validate_var push_var array_notation assignment_operator cond pop_assignment','assignment',7,'p_assignment','parser.py',178),
  ('validate_var -> <empty>','validate_var',0,'p_validate_var','parser.py',181),
  ('push_var -> <empty>','push_var',0,'p_push_var','parser.py',186),
  ('array_notation -> LEFT_BRACKET exp RIGHT_BRACKET','array_notation',3,'p_array_notation','parser.py',195),
  ('array_notation -> empty','array_notation',1,'p_array_notation','parser.py',196),
  ('assignment_operator -> EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',201),
  ('assignment_operator -> TIMES_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',202),
  ('assignment_operator -> DIVIDE_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',203),
  ('assignment_operator -> PLUS_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',204),
  ('assignment_operator -> MINUS_EQUALS push_assignment','assignment_operator',2,'p_assignment_operator','parser.py',205),
  ('push_assignment -> <empty>','push_assignment',0,'p_push_assignment','parser.py',208),
  ('pop_assignment -> <empty>','pop_assignment',0,'p_pop_assignment','parser.py',212),
  ('start_evaluating -> <empty>','start_evaluating',0,'p_start_evaluating','parser.py',218),
  ('finish_evaluating -> <empty>','finish_evaluating',0,'p_finish_evaluating','parser.py',222),
  ('cond -> expression pop_op_and_or post_cond','cond',3,'p_cond','parser.py',227),
  ('pop_op_and_or -> <empty>','pop_op_and_or',0,'p_pop_op_and_or','parser.py',230),
  ('post_cond -> AND push_op_and_or cond','post_cond',3,'p_post_cond','parser.py',235),
  ('post_cond -> OR push_op_and_or cond','post_cond',3,'p_post_cond','parser.py',236),
  ('post_cond -> empty','post_cond',1,'p_post_cond','parser.py',237),
  ('push_op_and_or -> <empty>','push_op_and_or',0,'p_push_op_and_or','parser.py',240),
  ('expression -> exp pop_relop post_expression','expression',3,'p_expression','parser.py',245),
  ('pop_relop -> <empty>','pop_relop',0,'p_pop_relop','parser.py',248),
  ('post_expression -> relational_operator expression','post_expression',2,'p_post_expression','parser.py',254),
  ('post_expression -> empty','post_expression',1,'p_post_expression','parser.py',255),
  ('push_relop -> <empty>','push_relop',0,'p_push_relop','parser.py',258),
  ('relational_operator -> LESS push_relop','relational_operator',2,'p_relational_operator','parser.py',262),
  ('relational_operator -> GREATER push_relop','relational_operator',2,'p_relational_operator','parser.py',263),
  ('relational_operator -> GREATER_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',264),
  ('relational_operator -> LESS_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',265),
  ('relational_operator -> EQUALS_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',266),
  ('relational_operator -> NOT_EQUALS push_relop','relational_operator',2,'p_relational_operator','parser.py',267),
  ('exp -> term pop_exp post_exp','exp',3,'p_exp','parser.py',273),
  ('pop_exp -> <empty>','pop_exp',0,'p_pop_exp','parser.py',276),
  ('post_exp -> PLUS push_exp exp','post_exp',3,'p_post_exp','parser.py',281),
  ('post_exp -> MINUS push_exp exp','post_exp',3,'p_post_exp','parser.py',282),
  ('post_exp -> empty','post_exp',1,'p_post_exp','parser.py',283),
  ('push_exp -> <empty>','push_exp',0,'p_push_exp','parser.py',286),
  ('term -> factor pop_term post_term','term',3,'p_term','parser.py',291),
  ('pop_term -> <empty>','pop_term',0,'p_pop_term','parser.py',294),
  ('post_term -> TIMES push_term term','post_term',3,'p_post_term','parser.py',300),
  ('post_term -> DIVIDE push_term term','post_term',3,'p_post_term','parser.py',301),
  ('post_term -> PERCENTAGE push_term term','post_term',3,'p_post_term','parser.py',302),
  ('post_term -> MOD push_term term','post_term',3,'p_post_term','parser.py',303),
  ('post_term -> empty','post_term',1,'p_post_term','parser.py',304),
  ('push_term -> <empty>','push_term',0,'p_push_term','parser.py',307),
  ('factor -> LEFT_PARENTHESIS push_paren cond RIGHT_PARENTHESIS pop_paren','factor',5,'p_factor','parser.py',312),
  ('factor -> variable_constant','factor',1,'p_factor','parser.py',313),
  ('factor -> MINUS variable_constant','factor',2,'p_factor','parser.py',314),
  ('factor -> call_function','factor',1,'p_factor','parser.py',315),
  ('push_paren -> <empty>','push_paren',0,'p_push_paren','parser.py',318),
  ('pop_paren -> <empty>','pop_paren',0,'p_pop_paren','parser.py',322),
  ('variable_constant -> ID process_variable array_notation','variable_constant',3,'p_variable_constant','parser.py',327),
  ('variable_constant -> INT_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',328),
  ('variable_constant -> DOUBLE_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',329),
  ('variable_constant -> STRING_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',330),
  ('variable_constant -> BOOL_CONSTANT','variable_constant',1,'p_variable_constant','parser.py',331),
  ('process_variable -> <empty>','process_variable',0,'p_process_variable','parser.py',345),
  ('condition -> IF cond COLON push_gotoF optional_eol block fill_goto post_condition END','condition',9,'p_condition','parser.py',354),
  ('push_gotoF -> <empty>','push_gotoF',0,'p_push_gotoF','parser.py',357),
  ('fill_goto -> <empty>','fill_goto',0,'p_fill_goto','parser.py',361),
  ('post_condition -> else','post_condition',1,'p_post_condition','parser.py',366),
  ('post_condition -> empty','post_condition',1,'p_post_condition','parser.py',367),
  ('else -> ELSE COLON push_goto optional_eol block fill_goto','else',6,'p_else','parser.py',371),
  ('push_goto -> <empty>','push_goto',0,'p_push_goto','parser.py',374),
  ('print -> PRINT cond post_print','print',3,'p_print','parser.py',379),
  ('post_print -> COMMA STRING_CONSTANT','post_print',2,'p_post_print','parser.py',382),
  ('post_print -> empty','post_print',1,'p_post_print','parser.py',383),
  ('push_print -> <empty>','push_print',0,'p_push_print','parser.py',386),
  ('read -> READ LEFT_PARENTHESIS RIGHT_PARENTHESIS','read',3,'p_read','parser.py',391),
  ('identifier -> ID process_variable post_identifier','identifier',3,'p_identifier','parser.py',395),
  ('post_identifier -> LEFT_BRACKET exp RIGHT_BRACKET','post_identifier',3,'p_post_identifier','parser.py',398),
  ('post_identifier -> empty','post_identifier',1,'p_post_identifier','parser.py',399),
  ('loop -> for','loop',1,'p_loop','parser.py',403),
  ('loop -> while','loop',1,'p_loop','parser.py',404),
  ('for -> FOR identifier FROM exp TO exp post_cycle','for',7,'p_for','parser.py',408),
  ('while -> WHILE push_cycle cond push_gotoF post_cycle fill_goto create_pending_goto','while',7,'p_while','parser.py',412),
  ('push_cycle -> <empty>','push_cycle',0,'p_push_cycle','parser.py',415),
  ('create_pending_goto -> <empty>','create_pending_goto',0,'p_create_pending_goto','parser.py',419),
  ('post_cycle -> COLON optional_eol block END','post_cycle',4,'p_post_cycle','parser.py',424),
  ('BOOL_CONSTANT -> TRUE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',427),
  ('BOOL_CONSTANT -> FALSE','BOOL_CONSTANT',1,'p_BOOL_CONSTANT','parser.py',428),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',431),
]
